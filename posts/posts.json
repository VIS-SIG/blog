[
  {
    "path": "posts/2025-08-13-wonderful-wednesday-august-2025/",
    "title": "Wonderful Wednesday August 2025 (65)",
    "description": "In clinical trials, intercurrent events are post-baseline occurrences that affect the interpretation or existence of outcome data. Visualisations help understand the possible impact of these events on the interpretation of the study results.",
    "author": [
      {
        "name": "PSI VIS SIG",
        "url": "https://www.psiweb.org/sigs-special-interest-groups/visualisation"
      }
    ],
    "date": "2025-08-13",
    "categories": [
      "Intercurrent events",
      "Wonderful Wednesdays"
    ],
    "contents": "\r\nIntercurrent events\r\nThe Background:\r\nIntercurrent event: event occurring after initiation of study intervention which either precludes the observation of the outcome variable or affects its measurement or interpretation.\r\nData set:\r\n800 subjects randomised 1:1 to Treatment A or Treatment B\r\nPatients respond to a visual analogue scale (0=worst outcome, 100=best outcome) monthly for one year\r\nVariables: (1) USUBJID (2) TRT (3) AVISIT (4) AVAL (5) ICE\r\nICE is an indicator variable (Y or N), reflecting whether the visit is preceeded by an intercurrent event\r\n\r\nThe Challenge:\r\nCompare the two treatment arms, considering how intercurrent events might be handled.\r\nA description of the challenge can also be found here.\r\nA recording of the session can be found here.\r\n\r\nExample 1. Faceted line plot\r\n\r\npdf file\r\nlink to code\r\n\r\nExample 2. Visualization side by side\r\n\r\nlink to code\r\n\r\nExample 3. Using individual anker point\r\nlink to code\r\nCode\r\n\r\nExample 1. Faceted line plot\r\n\r\n\r\nlibrary(ggplot2)\r\nlibrary(tidyverse)\r\nlibrary(haven)\r\nlibrary(ggh4x)\r\n\r\ndata  <- read_sas(\"lsm_all.sas7bdat\") %>%\r\n  arrange(method, treat, avisitn) %>%\r\n  mutate(\r\n    facet_group = case_when(\r\n      method == 1 ~ \"Treatment \\n Policy Estimand\",\r\n      TRUE ~ \"Hypothetical Estimand\"\r\n    ),\r\n    group_label = case_when(\r\n      method == \"1\" ~ \"No Imputation\",\r\n      method == \"2\" ~ \"Multiple Imputation: \\nMissing at Random (MAR)\",\r\n      method == \"3\" ~ \"Multiple Imputation: \\nMissing Not at Random (CIR)\",\r\n      method == \"4\" ~ \"Multiple Imputation: \\nMissing Not at Random (J2R)\"\r\n    )\r\n  )\r\n\r\nmy_colors <- c(\"1\" = \"#1f77b4\", \"2\" = \"#ff7f0e\")   \r\nmy_labels <- c(\"1\" = \"Active\", \"2\" = \"Control\")\r\nmy_panels <- c(\"1\" = \" \", \"2\" = \"Missing at Random\", \"3\" = \"Copy Increment\\n from Reference\", \"4\" = \"Jump to Reference\", \"5\" = \"Treatment Policy \\n Estimand\", \"6\" = \"Hypothetical \\n Estimand\")\r\nmy_black <- \"#252525\"\r\n\r\ndata$method <- factor(data$method, levels = c(1,2,3,4))\r\ndata$facet_group <- factor(data$facet_group, levels = c(\"Treatment \\n Policy Estimand\", \"Hypothetical Estimand\"))\r\ndata$group_label <- factor(data$group_label, levels = c(\"No Imputation\", \"Multiple Imputation: \\nMissing at Random (MAR)\",  \"Multiple Imputation: \\nMissing Not at Random (CIR)\", \"Multiple Imputation: \\nMissing Not at Random (J2R)\"))\r\n\r\ncustom_labels <- c(\r\n  \"1\" = \"No Imputation\",\r\n  \"2\" = \"Multiple Imputation: \\nMissing at Random (MAR) \",\r\n  \"3\" = \"Multiple Imputation: \\nCopy Increment \",\r\n  \"4\" = \"Multiple Imputation: \\nJump to Reference \"\r\n)\r\n\r\nplot <-  ggplot(data) +\r\n  geom_line(aes(x = avisitn, y = Estimate, color=factor(treat)), linetype = 1, size=1, alpha=0.8) +\r\n  # facet_grid(~ method, labeller = as_labeller(my_panels)) +\r\n  facet_nested(~ facet_group + group_label) + \r\n  scale_x_continuous(\"Time (weeks)\", limits=c(1, 12), breaks = 0:12) +\r\n  scale_y_continuous(\"Change From Baseline\", limits=c(-10, 80), breaks=seq(-10, 80, by = 10)) +\r\n  scale_color_manual(\" \", values = my_colors, labels = my_labels) +\r\n  theme(panel.background=element_rect(fill=\"white\"),\r\n        panel.grid.major=element_line(colour = \"#f0f0f0\",\r\n                                      linewidth = 0.5,\r\n                                      linetype = 1),\r\n        panel.border=element_rect(fill = NA,\r\n                                  colour = my_black,\r\n                                      linewidth = 1,\r\n                                      linetype = 1),\r\n        strip.background = element_rect(fill = NA,\r\n                                        colour = my_black,\r\n                                        linewidth = 1,\r\n                                        linetype = 1),\r\n        strip.text = element_text(\r\n          colour = my_black,\r\n          size = 12),\r\n        axis.line.y=element_line(colour = my_black,\r\n                               linewidth = 0.5,\r\n                               linetype = 1),\r\n        axis.text.x=element_text(\r\n          colour = my_black,\r\n          size = 11),\r\n        axis.text.y=element_text(\r\n          colour = my_black,\r\n          size = 12),\r\n        axis.title=element_text(\r\n          colour = my_black,\r\n          size =12),\r\n        legend.text=element_text(\r\n          colour = my_black,\r\n          size = 12))\r\nggsave(plot, filename = \"lsm_panel.png\", width = 12, height = 6)\r\n\r\n\r\nBack to blog\r\n\r\nExample 2. Visualization side by side\r\n\r\n\r\n# Load required packages\r\nlibrary(tidyverse)\r\nlibrary(ggplot2)\r\nlibrary(readxl)\r\nlibrary(ggtext)\r\nlibrary(grid)\r\nlibrary(gridExtra)\r\n\r\n# Load Data and Create Numeric Variable for x-axis\r\n# Create numeric variable for AVAL\r\ndf <- read_excel(\"WWW_AUG2025.xlsx\") %>%\r\n  mutate(AVISITN = case_when(AVISIT==\"BASE\" ~ 0,\r\n                             AVISIT!=\"BASE\" ~ \r\n                               as.numeric(substring(AVISIT, nchar(AVISIT)-1))))\r\n\r\n# Variable for Sample Size of Each Arm\r\nN_A <- as.numeric(length(unique(df[df$TRT==\"Treatment A\",]$USUBJID)))\r\nN_B <- as.numeric(length(unique(df[df$TRT==\"Treatment B\",]$USUBJID)))\r\n\r\n# Mean Scores Over Time Ignoring ICEs\r\ndf_mean <- aggregate(as.numeric(df$AVAL),\r\n                     by=list(df$TRT, df$AVISITN),\r\n                     FUN=mean) %>%\r\n  rename(Treatment = Group.1,\r\n         Month = Group.2,\r\n         Mean = x)\r\n\r\np1 <- \r\n  ggplot(df_mean, aes(x=Month, y=Mean, colour=Treatment)) +\r\n  geom_line() +\r\n  geom_point() +\r\n  scale_y_continuous(limits = c(0, 100),\r\n                     expand = c(0, 0),\r\n                     breaks = seq(0, 100, by = 10)) +\r\n  scale_x_continuous(limits = c(0, 12.1),\r\n                     expand = c(0, 0),\r\n                     breaks = seq(0, 12, by = 1)) +\r\n  labs(title = \"Ignoring Intercurrent Events\",\r\n       subtitle = \"Mean Scores Increase With Both Arms but are Higher for \r\n       <span style = 'color: #F8766D;'>Treatment A<\/span>\r\n       vs \r\n       <span style = 'color: #619CFF;'>Treatment B<\/span>\",\r\n       caption = paste(\"Data analysed as observed \\n (i.e.,\", \r\n       \"data preceded by intercurrent events included as recorded). \\n\",\r\n       \"Treatment A: N =\", N_A, \"Treatment B: N =\", N_B)) +\r\n  theme_bw() +\r\n  theme(panel.border = element_blank(),\r\n        axis.line = element_line(color = \"black\"),\r\n        panel.grid.minor = element_blank(),\r\n        panel.grid.major.x = element_blank(),\r\n        panel.grid.major.y = element_line(linewidth = 0.5),\r\n        axis.title.y = element_blank(),\r\n        plot.title = element_markdown(size = 15, hjust = 0.5),\r\n        plot.subtitle = element_markdown(size = 11,\r\n                                         margin = margin(0, 0, 15, 0),\r\n                                         hjust = 0.5),\r\n        plot.caption = element_text(hjust = 0,\r\n                                    margin = margin(15, 0, 0, 0)),\r\n        legend.position = \"none\",\r\n        plot.margin = margin(15, 5, 0, 0))\r\n\r\n# Repeating with scores set to missing and imputed with LOCF following ICEs\r\ndf_locf <- df %>%\r\n  group_by(USUBJID) %>%\r\n  mutate(AVALlocf = case_when(ICE == \"N\" ~ as.numeric(AVAL))) %>%\r\n  fill(AVALlocf, .direction = \"down\") %>%\r\n  ungroup()\r\n\r\ndf_locf_mean <- aggregate(as.numeric(df_locf$AVALlocf),\r\n                     by=list(df_locf$TRT, df_locf$AVISITN),\r\n                     FUN=mean) %>%\r\n                rename(Treatment = Group.1,\r\n                       Month = Group.2,\r\n                       Mean = x)\r\n\r\np2 <-\r\n  ggplot(df_locf_mean, aes(x=Month, y=Mean, colour=Treatment)) +\r\n  geom_line() +\r\n  geom_point() +\r\n  scale_y_continuous(limits = c(0, 100),\r\n                     expand = c(0, 0),\r\n                     breaks = seq(0, 100, by = 10)) +\r\n  scale_x_continuous(limits = c(0, 12.1),\r\n                     expand = c(0, 0),\r\n                     breaks = seq(0, 12, by = 1)) +\r\n  labs(title = paste(\"Imputing Post-Intercurrent Event Visits With LOCF\"),\r\n       subtitle = \"Mean Scores Increase With \r\n       <span style = 'color: #F8766D;'>Treatment A<\/span>\r\n       But Not With\r\n       <span style = 'color: #619CFF;'>Treatment B<\/span>\",\r\n       caption = paste(\"Data preceded by an intercurrent event set to missing\",\r\n                       \"and imputed using \\n last observation carried forward\",\r\n                       \"(LOCF). \\n\",\r\n                       \"Treatment A: N =\", N_A, \"Treatment B: N =\", N_B)) +\r\n  theme_bw() +\r\n  theme(panel.border = element_blank(),\r\n        axis.line = element_line(color = \"black\"),\r\n        panel.grid.minor = element_blank(),\r\n        panel.grid.major.x = element_blank(),\r\n        panel.grid.major.y = element_line(linewidth = 0.5),\r\n        axis.title.y = element_blank(),\r\n        plot.title = element_markdown(size = 15, hjust = 0.5),\r\n        plot.subtitle = element_markdown(size = 11,\r\n                                         margin = margin(0, 0, 15, 0),\r\n                                         hjust = 0.5),\r\n        plot.caption = element_text(hjust = 0,\r\n                                    margin = margin(15, 0, 0, 0)),\r\n        legend.position = \"none\",\r\n        plot.margin = margin(15, 0, 0, 5))\r\n\r\n\r\n# Adding to plots to single plot with common title\r\nmeanplot <- grid.arrange(p1, p2, ncol=2,\r\n                         top = textGrob(\"Mean VAS Scores by Visit\",\r\n                                        gp=gpar(fontsize=20)))\r\n\r\n\r\nBack to blog\r\n\r\nExample 3. Using individual anker point\r\n\r\n\r\n# Load required packages\r\nlibrary(tidyverse)\r\nlibrary(ggplot2)\r\nlibrary(readxl)\r\nlibrary(ggtext)\r\nlibrary(grid)\r\nlibrary(gridExtra)\r\n\r\n# Load Data and Create Numeric Variable for x-axis\r\n# Create numeric variable for AVAL\r\ndf <- read_excel(\"WWW_AUG2025.xlsx\") %>%\r\n  mutate(AVISITN = case_when(AVISIT==\"BASE\" ~ 0,\r\n                             AVISIT!=\"BASE\" ~ \r\n                               as.numeric(substring(AVISIT, nchar(AVISIT)-1))))\r\n\r\n# Variable for Sample Size of Each Arm\r\nN_A <- as.numeric(length(unique(df[df$TRT==\"Treatment A\",]$USUBJID)))\r\nN_B <- as.numeric(length(unique(df[df$TRT==\"Treatment B\",]$USUBJID)))\r\n\r\n\r\n\r\n# For subjects experiencing an ICE computing mean score by visit\r\n# relative to last visit prior to ICE\r\n\r\n# Setting up data\r\n\r\ndf_ICEvis <- df %>%\r\n  filter(ICE == \"Y\") %>%\r\n  group_by(USUBJID) %>%\r\n  slice_head() %>%\r\n  ungroup() %>%\r\n  mutate(nbasevis = AVISITN - 1) %>%\r\n  select(USUBJID, nbasevis)\r\n\r\ndf_ICE <- df %>%\r\n  inner_join(df_ICEvis, by = \"USUBJID\") %>%\r\n  mutate(nvis = AVISITN - nbasevis)\r\n\r\ndf_ICE_mean <- aggregate(as.numeric(df_ICE$AVAL),\r\n                     by=list(df_ICE$TRT, df_ICE$nvis),\r\n                     FUN=mean) %>%\r\n               rename(Treatment = Group.1,\r\n                      RelMonth = Group.2,\r\n                      Mean = x)\r\n\r\ndf_ICE_ns <- df_ICE %>%\r\n  count(TRT, nvis) %>%\r\n  mutate(ypos = case_when(TRT==\"Treatment A\" ~ -20,\r\n                          TRT==\"Treatment B\" ~ -30)) %>%\r\n  rename(Treatment = TRT)\r\n\r\n# Number of subjects experiencing an ICE on each arm\r\n# Variable for Sample Size of Each Arm\r\nN_ICE_A <- as.numeric(length(\r\n  unique(df[df$TRT==\"Treatment A\"&df$ICE==\"Y\",]$USUBJID)))\r\nN_ICE_B <- as.numeric(length(\r\n  unique(df[df$TRT==\"Treatment B\"&df$ICE==\"Y\",]$USUBJID)))\r\n\r\nggplot(df_ICE_mean, aes(x=RelMonth, y=Mean, colour=Treatment)) +\r\n  geom_line() +\r\n  geom_point() +\r\n  scale_y_continuous(limits = c(-40, 110),\r\n                     expand = c(0, 0),\r\n                     breaks = seq(0, 100, by = 10)) +\r\n  scale_x_continuous(limits = c(-12, 12),\r\n                     expand = c(0, 0),\r\n                     breaks = seq(-11, 11, by = 1)) +\r\n  labs(title = paste(\"Mean VAS Score Relative to Intercurrent Event\"),\r\n       subtitle = \"Following intercurrent events, subjects receiving \r\n       <span style = 'color: #619CFF;'>Treatment B<\/span>\r\n       eventually reach similar VAS scores to those reached after intercurrent\r\n       events on \r\n       <span style = 'color: #F8766D;'>Treatment A<\/span>\",\r\n       caption = paste(\"Data are analysed as observed. Scores are grouped\",\r\n                       \"by number of visits relative to a subject's last\",\r\n                       \"before they experience an intercurrent event. \\n\",\r\n                       \"Subjects experiencing an intercurrent event -\",\r\n                       \"Treatment A: N = \", N_ICE_A,\r\n                       \"Treatment B: N = \", N_ICE_B),\r\n       x = \"Visit Relative to Last Before Intercurrent Event\") +\r\n  theme_bw() +\r\n  theme(panel.border = element_blank(),\r\n        axis.line = element_line(color = \"black\"),\r\n        panel.grid.minor = element_blank(),\r\n        panel.grid.major.x = element_blank(),\r\n        panel.grid.major.y = element_line(linewidth = 0.5),\r\n        axis.title.y = element_blank(),\r\n        plot.title = element_markdown(size = 15),\r\n        plot.subtitle = element_markdown(size = 11,\r\n                                         margin = margin(0, 0, 15, 0)),\r\n        plot.caption = element_text(hjust = 0,\r\n                                    margin = margin(15, 0, 0, 0)),\r\n        legend.position = \"none\") +\r\n  geom_hline(yintercept = 0, color = \"black\") +\r\n  geom_text(data = df_ICE_ns, aes(x = nvis, y = ypos, label = n)) +\r\n  geom_segment(x = 0, xend = 0,\r\n               y = 0, yend = 100,\r\n               colour = \"black\",\r\n               linetype = 2) +\r\n  annotate(\"text\", x = -10, y = -10,\r\n           label = \"Number of Observations\") +\r\n  annotate(\"text\", x = 0, y = 105,\r\n           label = \"Last Observation Prior to Intercurrent Event\")\r\n\r\n\r\nBack to blog\r\n\r\n\r\n\r\n",
    "preview": "posts/2025-08-13-wonderful-wednesday-august-2025/./images/rhys3.png",
    "last_modified": "2025-08-27T21:59:22+02:00",
    "input_file": {},
    "preview_width": 1076,
    "preview_height": 531
  },
  {
    "path": "posts/2025-07-09-wonderful-wednesday-july-2025/",
    "title": "Wonderful Wednesday July 2025 (64)",
    "description": "Building on the topic from june the focus is on visualising patient-level data (generated with AI)",
    "author": [
      {
        "name": "PSI VIS SIG",
        "url": "https://www.psiweb.org/sigs-special-interest-groups/visualisation"
      }
    ],
    "date": "2025-07-09",
    "categories": [
      "Patient-level data",
      "Longitudinal data",
      "Artificial Intelligence",
      "Wonderful Wednesdays"
    ],
    "contents": "\r\nHyperkalemia Trial Data\r\nThere was a recently publication of a trial on treatment of patients with hyperkalemia. While the challenge in June was the improvement of the original plot the focus is now on the individual data.\r\nData set:\r\nThe data was created using AI-generated code matching the results shown in the plot of the publication. This prompt was used with Claude 4.\r\nThe Challenge:\r\nThis months challenge is a follow-up from last month. Generate a plot that includes patient level data information or distribution information.\r\nReference:\r\nSodium zirconium cyclosilicate versus sodium polystyrene sulfonate for treatment of hyperkalemia in hemodialysis patients: a randomized clinical trial\r\nThe publication is available via NIH or BMC Nephrology.\r\nA description of the challenge can also be found here.\r\nA recording of the session can be found here.\r\nVisualisations\r\nSeveral visualisations are presented, where each is forming a part of a wider submission. This highlights how a series of data visualisations can be used to investigate and identify key relationships in the data, and then to subsequently highlight these key relationships when communicating findings.\r\nThe complete story from Thomas Weissensteiner can be found on his publication page.\r\n\r\nExample 1.\r\n\r\nlink to code\r\n\r\nExample 2.\r\n\r\nlink to code\r\n\r\nExample 3.\r\n\r\nlink to code\r\n\r\nExample 4.\r\n\r\nlink to code\r\n\r\nExample 5.\r\n\r\nlink to code\r\n\r\nExample 6.\r\n\r\nlink to code\r\n\r\nExample 7.\r\n\r\nlink to code\r\n\r\nExample 8.\r\n\r\nlink to code\r\n\r\nExample 9.\r\n\r\nlink to code\r\nCode\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nExample 1 to 9.\r\nThe code and documentation is provided by Thomas Weissensteiner on his publication page\r\n\r\n\r\n\r\n",
    "preview": "posts/2025-07-09-wonderful-wednesday-july-2025/./images/Fig8-ThomasWeissensteiner.png",
    "last_modified": "2025-08-28T22:16:04+02:00",
    "input_file": {},
    "preview_width": 593,
    "preview_height": 611
  },
  {
    "path": "posts/2025-06-11-wonderful-wednesday-june-2025/",
    "title": "Wonderful Wednesday June 2025 (63)",
    "description": "All about improving an existing plot from a recent publication on a hyperkalemia trial.",
    "author": [
      {
        "name": "PSI VIS SIG",
        "url": "https://www.psiweb.org/sigs-special-interest-groups/visualisation"
      }
    ],
    "date": "2025-06-11",
    "categories": [
      "Improvement",
      "Longitudinal data",
      "Wonderful Wednesdays"
    ],
    "contents": "\r\nHyperkalemia Trial\r\nThere was a recently publication of a trial on treatment of patients with hyperkalemia. While the trial outcome was very positive the graphical representation left room for improvement.\r\nData set:\r\nThe data was created by reading out the results shown in the plot of the publication.\r\nVariable Name\r\nVariable Label\r\nx\r\nOriginal value from the vertical axis\r\ny\r\nOriginal value from the horizontal axis\r\nfile\r\nFile name of data input\r\nclass\r\nOriginal group label\r\ntreat\r\nTreatment group (derived)\r\nstat\r\nStatistical measure\r\n\r\nmean: mean value\r\n\r\nllc: lower limit of confidence\r\n\r\nulc: upper limit of confidence\r\nvisit\r\nStudy visit (derived)\r\nserumK\r\nBlood serum level of Potassium (derived)\r\nThe Challenge:\r\nWithin the publication the below plot was present. This months challenge is to improve the plot or find a better way to visually present the data.\r\nOriginal plot from publicationReference:\r\nSodium zirconium cyclosilicate versus sodium polystyrene sulfonate for treatment of hyperkalemia in hemodialysis patients: a randomized clinical trial\r\nThe publication is available via NIH or BMC Nephrology.\r\nA description of the challenge can also be found here.\r\nA recording of the session can be found here.\r\nVisualisations\r\n\r\nExample 1. Line graph\r\n\r\nlink to code\r\n\r\nExample 2. Bar chart\r\n\r\nlink to code\r\n\r\nExample 3. Confidence bands\r\npdf file\r\nlink to code\r\nCode\r\n\r\nExample 1. Line graph\r\n\r\n\r\n##################################################################################################################\r\n## Program:   WW_ImproveFigure_May2025.R                                                                  \r\n##                                                                             \r\n## Study:     None                                                         \r\n##                                                                             \r\n## Purpose:   Wonderful Wednesday PSI challenge May 2025\r\n##                                                                             \r\n## Inputs:    fig2data.csv\r\n##\r\n## Outputs:   ImproveFigure_V1_LineChart.png\r\n##            ImproveFigure_V2_change.png\r\n##\r\n## Revision                                                                                                     \r\n## History:      Version     Date        Author                  Description                                    \r\n##                -------     ---------   -------------------     -------------------------------------------   \r\n##                    1.0     23MAY2025   Baerbel Maus           Initial version \r\n##################################################################################################################\r\n\r\n\r\n## cleanup\r\nrm(list=ls())\r\n\r\nlibrary(ggplot2)\r\n# prepare data\r\nprojectRoot <- \"C:/Temp/\"\r\nsetwd(projectRoot)\r\n\r\n# dat <- read.csv(paste0(projectRoot,\"fig2data.csv\"))\r\ndat <- read.csv(\"https://raw.githubusercontent.com/VIS-SIG/Wonderful-Wednesdays/refs/heads/master/data/2025/2025-05-14/fig2data.csv\")\r\n\r\ndat2 <- dat[,c(-1,-4)] # remove unnecessary columns\r\nnames(dat2)[c(1,2)] <- c(\"visitNum\",\"serumK_exact\")\r\n\r\n\r\n### plot line chart\r\njitter = 0.1\r\n\r\npng(filename =\"ImproveFigure_V1_LineChart.png\",width = 500, height = 480)\r\n\r\n# add results for SZC group\r\nplot(x = c(0,1,2,4,6,8) - jitter, y = dat2$serumK_exact[dat2$treat == \"SZC group\" & dat2$stat == \"mean\"],\r\n     xlab = \"Week\",xaxt = \"n\",ylab = \"Serum K (mEq/l)\", type = \"l\",xlim = c(-0.5,8.5), ylim = c(0,6), col = \"orange\",lwd = 2)\r\npoints(x = c(0,1,2,4,6,8)-jitter, dat2$serumK_exact[dat2$treat == \"SZC group\" & dat2$stat == \"mean\"],\r\n      col = \"orange\",pch = 16)\r\narrows(c(0,1,2,4,6,8)-jitter, dat2$serumK_exact[dat2$treat == \"SZC group\" & dat2$stat == \"ulc\"]\r\n  ,c(0,1,2,4,6,8)-jitter, dat2$serumK_exact[dat2$treat == \"SZC group\" & dat2$stat == \"llc\"],\r\n       angle=90, code=3, lwd=2, length=.025, col = \"orange\")\r\n\r\n# add results for SPS group\r\npoints(x = c(0,1,2,4,6,8)+jitter, dat2$serumK_exact[dat2$treat == \"SPS group\" & dat2$stat == \"mean\"],\r\n     type = \"l\",col = \"blue\",lwd = 2)\r\n\r\npoints(x = c(0,1,2,4,6,8)+jitter, dat2$serumK_exact[dat2$treat == \"SPS group\" & dat2$stat == \"mean\"],\r\n       col = \"blue\",pch = 16)\r\narrows(c(0,1,2,4,6,8)+jitter, dat2$serumK_exact[dat2$treat == \"SPS group\" & dat2$stat == \"ulc\"]\r\n       ,c(0,1,2,4,6,8)+jitter, dat2$serumK_exact[dat2$treat == \"SPS group\" & dat2$stat == \"llc\"],\r\n       angle=90, code=3, lwd=2, length=.025, col = \"blue\")\r\n\r\nabline(a = 5, b= 0, col = \"black\" )\r\ntext(2,4,\"Normokalemia\", col = \"black\")\r\ntext(2,6,\"Hyperkalemia\", col = \"black\")\r\n\r\n# modify axes\r\naxis(1, at = c(0,1,2,4,6,8),labels = c(\"Baseline\",\"1\",\"2\",\"4\",\"6\",\"8\"),xlim = c(-0.5,8))\r\n\r\n# add legend and title\r\n\r\nlegend(x= 1,y=1,legend = c(\"SZC group (N = 60) (mean and 95% CI)\",\"SPS group (N = 60) (mean and and 95% CI)\"),col = c(\"orange\",\"blue\"),lwd = 2,bty = 'n')\r\ntitle(expression(bold(paste(phantom(\"SZC\"), \" treatment resolves Hyperkalemia faster and more effective\"))),line = 3)\r\ntitle(main = expression(bold(paste(\"SZC\",phantom(\" treatment resolves Hyperkalemia faster and more effective\")))), col.main = \"orange\", line = 3)\r\n\r\ntitle(expression(paste(\"Mean serum potassium levels were significantly lower in the \",phantom(\"SZC\"),\" compared to \",phantom(\"SPS\"),\r\n\" group (p < 0.05)\")), line = 2, cex.main = 0.8)\r\ntitle(expression(paste(phantom(\"Mean serum potassium levels were significantly lower in the \"),\"SZC\",\r\n                       phantom(\" compared to SPS group (p < 0.05)\"))), line = 2, cex.main = 0.8,col.main = \"orange\")\r\ntitle(expression(paste(phantom(\"Mean serum potassium levels were significantly lower in the SZC compared to \"),\"SPS\",\r\n                       phantom(\" group (p < 0.05)\"))), line = 2, cex.main = 0.8,col.main = \"blue\")\r\n\r\ndev.off()\r\n\r\n\r\nBack to blog\r\n\r\nExample 2. Bar chart\r\n\r\n\r\n##################################################################################################################\r\n## Program:   WW_ImproveFigure_May2025.R                                                                  \r\n##                                                                             \r\n## Study:     None                                                         \r\n##                                                                             \r\n## Purpose:   Wonderful Wednesday PSI challenge May 2025\r\n##                                                                             \r\n## Inputs:    fig2data.csv\r\n##\r\n## Outputs:   ImproveFigure_V1_LineChart.png\r\n##            ImproveFigure_V2_change.png\r\n##\r\n## Revision                                                                                                     \r\n## History:      Version     Date        Author                  Description                                    \r\n##                -------     ---------   -------------------     -------------------------------------------   \r\n##                    1.0     23MAY2025   Baerbel Maus           Initial version \r\n##################################################################################################################\r\n\r\n\r\n## cleanup\r\nrm(list=ls())\r\n\r\nlibrary(ggplot2)\r\n# prepare data\r\nprojectRoot <- \"C:/Temp/\"\r\nsetwd(projectRoot)\r\n\r\n# dat <- read.csv(paste0(projectRoot,\"fig2data.csv\"))\r\ndat <- read.csv(\"https://raw.githubusercontent.com/VIS-SIG/Wonderful-Wednesdays/refs/heads/master/data/2025/2025-05-14/fig2data.csv\")\r\n\r\ndat2 <- dat[,c(-1,-4)] # remove unnecessary columns\r\nnames(dat2)[c(1,2)] <- c(\"visitNum\",\"serumK_exact\")\r\n\r\n### create barchart with changes, add lines for 2 weeks and 6 weeks\r\n\r\ndatChange <- cbind(dat2,dat2$serumK - 5)\r\nnames(datChange) <- c(names(dat2),\"change\")\r\ndatChange$visitNum2 <- c()\r\ndatChange$visitNum2[datChange$visit == \"Baseline\"] <- 0\r\ndatChange$visitNum2[datChange$visit == \"1st week\"] <- 1\r\ndatChange$visitNum2[datChange$visit == \"2nd week\"] <- 2\r\ndatChange$visitNum2[datChange$visit == \"4th week\"] <- 4\r\ndatChange$visitNum2[datChange$visit == \"6th week\"] <- 6\r\ndatChange$visitNum2[datChange$visit == \"8th week\"] <- 8\r\n\r\npng(filename =\"ImproveFigure_V2_change.png\")\r\nggplot(datChange[datChange$stat == \"mean\",], aes(x = visitNum2, y = change, fill = treat)) +\r\n  geom_bar(stat = \"identity\", position = \"dodge\") +\r\n  scale_fill_manual(name = \"Group\",values = c(\"SPS group\" =  \"blue\", \"SZC group\" =  \"orange\")) +\r\n  labs(title = \"SZC treatment resolves Hyperkalemia (> 5 mEq/l) faster and more effective\", x = \"Week\", y = \"Serum K (mEq/l)\") +\r\n  scale_x_continuous(\r\n    breaks = c(0,1,2,4,6,8),\r\n    labels = c(\"Baseline\",\"1\",\"2\",\"4\",\"6\",\"8\"),\r\n    minor_breaks = NULL,\r\n    limits = c(-0.5,8.5) \r\n  )  +\r\n  scale_y_continuous(\r\n    breaks = seq(-1,1,0.25),\r\n    labels = seq(4,6,0.25),\r\n    minor_breaks = NULL,\r\n    limits = c(-1, 1) \r\n  ) +\r\n  geom_hline(yintercept = 0, color = \"black\", linetype = \"solid\", linewidth = 1) +\r\n  geom_vline(xintercept = 2, color = \"orange\", linetype = \"dashed\", linewidth = 1) +\r\n  annotate(\"text\", x = 2.5, y = -0.5, label = \"SZC group reaches Normokalemia at 2 weeks\", colour = \"orange\") +\r\n  geom_vline(xintercept = 6, color = \"blue\", linetype = \"dashed\", linewidth = 1) +\r\n  annotate(\"text\", x = 5.5, y = -0.75, label = \"SPS group reaches Normokalemia at 6 weeks\", colour = \"blue\") +\r\n  theme_minimal()\r\n  \r\n\r\ndev.off()\r\n\r\n\r\nBack to blog\r\n\r\nExample 3. Confidence bands\r\n\r\n\r\n#############################################################################\r\n\r\n#       Wonderful Wednesday Challenge - May 14 - Melisa Castellanos\r\n\r\n#############################################################################\r\n\r\n# https://github.com/VIS-SIG/Wonderful-Wednesdays/blob/master/data/2025/2025-05-14/fig2data.csv\r\n\r\nlibrary(readr)\r\nlibrary(dbplyr)\r\nlibrary(tidyverse)\r\nlibrary(ggplot2)\r\n\r\ndata <- read_csv(\r\n  \"C:/Users/castelme/OneDrive - Boehringer Ingelheim/Documents/R/Hyperkalemia challenge/fig2data.csv\")\r\ndata\r\n\r\ndata_wide_summary <- data %>%\r\n\r\n  select(visit, treat, stat, serumK) %>%\r\n  pivot_wider(\r\n    id_cols = c(visit, treat),    # Columns that uniquely identify each row in the new wide format\r\n    names_from = stat,            # The column whose values (\"llc\", \"ulc\", \"mean\") will become new column names\r\n    values_from = serumK) \r\n\r\ndata_wide_summary\r\n\r\n# plot\r\n\r\nggplot(data_wide_summary, aes(x = factor(visit, level = c(\"Baseline\", \"1st week\",\"2nd week\",\"4th week\",\"6th week\",\"8th week\")), \r\n   y = mean, \r\n   group = treat, \r\n   color = treat)) +\r\n   geom_ribbon(aes(ymin=llc, ymax=ulc, fill = treat), alpha = 0.3, linetype = 0) +\r\n   geom_line(size = 1.5) +\r\n   geom_hline(yintercept = 5, linetype = \"dashed\", color = \"gray\", size = 1) +\r\n   labs(\r\n   title = \"Serum potassium changes. Comparison of two treatments for hyperkalemia.\",\r\n   subtitle = \"Data from Elsayed et al. (2025)\",\r\n   caption = \"Plotted by Melisa Castellanos for ~Wonderful Wednesday Challenge~ by PSI.\r\n              SCZ = sodium zirconium cyclosilicate. SPS = sodium polystyrene sulfonate.\r\n              LLC = lower limit of confidence. ULC = Upper limit of confidence. \r\n              In this new visualization, the treatment arms are shown within the same plot making comparison easier.\",\r\n   x = \"Visit\",\r\n   y = \"Serum K (mEq/L)\",\r\n   fill = \"LLC - ULC\",\r\n   color = \"Treatment Arm Mean\"\r\n   ) +\r\n  theme_minimal() +\r\n  scale_color_manual(values = c(\"SZC group\" = \"darkblue\", # Line of treatment 1\r\n                                \"SPS group\" = \"darkgreen\")) + # line treatment 2\r\n  scale_fill_manual(values = c(\"SZC group\" = \"lightblue\", # A lighter shade of blue for SZC group's band\r\n                               \"SPS group\" = \"lightgreen\"))  # A lighter shade of red for SPS group's band\r\n\r\n\r\nBack to blog\r\n\r\n\r\n\r\n",
    "preview": "posts/2025-06-11-wonderful-wednesday-june-2025/./images/ImproveFigure_V1_LineChart.png",
    "last_modified": "2025-08-28T17:07:14+02:00",
    "input_file": {},
    "preview_width": 500,
    "preview_height": 480
  },
  {
    "path": "posts/2025-05-14-wonderful-wednesday-may-2025/",
    "title": "Wonderful Wednesday May 2025 (62)",
    "description": "As the current therapy of the Macrophage Activation Syndrome has significant side effects, dose reduction is key. Here are visualisations to effectively demonstrate the dose reduction over time, both on the individual level and in summary.",
    "author": [
      {
        "name": "PSI VIS SIG",
        "url": "https://www.psiweb.org/sigs-special-interest-groups/visualisation"
      }
    ],
    "date": "2025-05-14",
    "categories": [
      "Longitudinal data",
      "Wonderful Wednesdays"
    ],
    "contents": "\r\nMacrophage Activation Syndrome\r\nMacrophage activation syndrome (MAS) is a severe, potentially life-threatening condition involving a massive inflammatory response that overwhelms the whole body. It mainly affects children and symptoms include: fever, tiredness, low energy, headaches, confusion, seizures, enlarged lymph nodes, liver and spleen problems and bleeding disorders.\r\nCurrent standard therapy includes high dose glucocorticoid (GC) treatment, although these have significant side effects including reduced growth rate, cataracts, mood changes and weight gain. Long term exposure to GC causes significant harm, especially in children.\r\nData set:\r\nThe data provided are based on two pooled open-label studies in children (n=39) with a diagnosis of MAS disease currently receiving GC treatment. Enrolled subjects started a new investigational drug on day 1, and one objective of the study was to reduce (taper) the GC dose to a safe level during the 8 week interventional period.\r\nThe data include daily GC doses levels for the 56 day interventional period, and also weekly average GC doses (week 1-8).\r\nThe Challenge:\r\nHow effective was the new investigational drug in reducing GC doses over 8 weeks?\r\nClinically important thresholds are 1.0, 0.5 and 0.2 mg/kg/day:\r\nWhat proportion of subjects achieved GC doses between these levels, and how did this change over time?\r\nHow much variability was there in GC doses, e.g. characterise shifts between threshold levels at the individual subject level?\r\n\r\nA description of the challenge can also be found here.\r\nA recording of the session can be found here.\r\nVisualisations\r\nThe discussion of the various plots includes advantages of double coding, intelligent sorting, choosing time intervals, selecting suitable colour gradients and the level order. The latter one is important for streamgraphs, stacked bar charts and Sankey diagrams.\r\n\r\nExample 1. Line graph\r\n\r\nlink to code\r\n\r\nExample 2. Patient profile graph\r\nThe purpose of this plot is getting an initial “feel” for trends and variability in the raw data.\r\nWith only 39 subjects a facet-plot showing dose vs. time for each individual was feasible. Facet were arranged from left to right and top to bottom in order of decreasing strength of correlation (values of the Somer’s rank correlation coefficient are shown in the next plot). Because the GC pulses represented extreme outliers, I used log scale to visualise trends, namely in the lower value range. Horizontal lines at 0.2, 0.5 and 1mg/kg/day define the three GC thresholds mentioned in the challenge. Additionally, doses >10mg/kg/day define GC pulses.\r\n\r\nlink to code\r\n\r\nExample 3. Correlation dot plot\r\nSomers’ D is a non-parametric measure of correlation related to Goodman-Kruskal’s Gamma and Kendall’s Tau-b. In contrast to the latter, the asymmetric Somers’ D coefficient is appropriate where of the variables being dependent on the other, as in this case.\r\n\r\nThe correlation coefficients for GC dose vs. time, including their 95% CIs, were negative for all subjects but one. The median Somers’ D across all patients was -0.817 (95% CI: -0.898 - -0.722). Strength of correlation seemed not associated with the total length of time patients received GC pulse therapy, probably because the frequency of the high-dose outliers/pulses decreased over the treatment period.\r\nlink to code\r\n\r\nExample 4. Lasagna/spaghetti plots\r\nThe upper of the two panels is a “spaghetti plot”. This format offers a more compact way to visualise dose changes over time than the faceted line plots above, although at the expense of time-dependent resolution (qualitative changes) and/or clarity (colour instead of height). Subjects on the y-axis are sorted by dose level, consecutively from day 1 to day 56 of the treatment (ignoring baseline values at day 0). This makes the spaghetti plot more similar in appearance and comparable to the stacked area plot in the lower panel, showing changes in the proportion of patients with dose ranges between different threshold levels.\r\n\r\nAs an optional feature, the correlation of dose vs. time in individual subjects can be shown by increasing the transparency of the coloured bars with decreasing negative correlation strength. This could be useful for focussing on subjects where changes from higher to lower thresholds are part of a strong general trend for decreasing dose with treatment time. However, finding a range for the transparency scale that provided satisfactory visual discrimination was not easy with this set of values.\r\n\r\nlink to code\r\n\r\nExample 5. Line graph with CI\r\nInstead of looking at changes in patient numbers, this figure tries to quantify the days that an average patient might (no longer) need GC doses above certain thresholds. This transformation smoothes the effect of extreme changes, i.e. the GC pulses, while preserving their effect on the variability of the sample. The x-axis represents the accumulated time since start of the investigational treatment, the y-axis the average fraction of days that patients were dosed above individual threshold levels. Confidence intervals illustrate the variability of the patient data, and that the apparent decline in over-the-threshold dosing might not be significant except for the 10mg/kg/day level (GC pulses).\r\nThe visualisation could be useful for assessing whether the benefits of treatment are increasing with time, and when the change will become significant for the average patient.\r\n\r\nlink to code\r\n\r\nExample 6. Stacked bar chart\r\n\r\nlink to code\r\nExample 7. Streamgraph\r\n\r\nlink to code\r\nExample 8. Sankey diagram\r\n\r\nlink to code\r\nCode\r\n\r\nExample 1. Line graph\r\nOops, some code is missing here. We’re working on it.\r\nBack to blog\r\n\r\n\r\n\r\n\r\nExample 2 - 5\r\nThe code and documentation is provided by Thomas Weissensteiner on his publication page.\r\nBack to blog example 2 Patient profile graph Back to blog example 3 Correlation dot plot Back to blog example 4 Lasagna/spaghetti plots Back to blog example 5 Line graph with CI \r\n\r\nExample 6. Stacked bar chart\r\n\r\n\r\n##################################################################################################################\r\n## Program:   WW_GCdose_APR2025.R                                                                  \r\n##                                                                             \r\n## Study:     None                                                         \r\n##                                                                             \r\n## Purpose:   Wonderful Wednesday PSI challenge \r\n##                                                                             \r\n## Inputs:    WW_GCdose.csv\r\n##\r\n## Outputs:   StackedBarchartGCdoseGroups.png\r\n##                                                                                                   \r\n## Revision                                                                                                     \r\n## History:      Version     Date        Author                  Description                                    \r\n##                -------     ---------   -------------------     -------------------------------------------   \r\n##                    1.0     6MAY2025   Baerbel Maus           Initial version \r\n##################################################################################################################\r\n\r\n\r\n## cleanup\r\nrm(list=ls())\r\n\r\n# projectRoot <- \"C:/Users/\"\r\n\r\nlibrary(ggplot2)\r\nlibrary(tidyverse)\r\n\r\n# dat <- read.csv(paste0(projectRoot,\"WW_GCdose.csv\"))\r\ndat <- read.csv(\"https://raw.githubusercontent.com/VIS-SIG/Wonderful-Wednesdays/refs/heads/master/data/2025/2025-04-09/WW_GCdose.csv\")\r\n\r\ndatWeeks <- unique(dat[,c(\"SUBJID\",\"AVISITN\",\"AVISIT\",\"AVAL2\")])\r\n\r\nplot(NA,NA,xlab=\"Days\", ylab=\"  Daily glucocorticoid dose (mg/kg/day)\",xlim=c(0, 56), ylim=c(0, 40))\r\nfor (subj in unique(dat$SUBJID)[1:10]){\r\n  lines(dat[dat$SUBJID == subj,\"ASTDY\"],dat[dat$SUBJID == subj,\"AVAL1\"])\r\n}\r\n\r\nplot(NA,NA,xlab=\"Weeks\", ylab=\"Weekly glucocorticoid dose (mg/kg/day)\",xlim=c(0,8), ylim=c(0, 40))\r\nfor (subj in unique(dat$SUBJID)[1:10]){\r\n  lines(dat[dat$SUBJID == subj,\"ASTDY\"],dat[dat$SUBJID == subj,\"AVAL2\"])\r\n  abline(a = 1,b= 0, col = \"blue\")\r\n  abline(a = 0.5,b= 0, col = \"blue\")\r\n  abline(a = 0.2,b= 0, col = \"blue\")\r\n}\r\n\r\n# Calculate the percentage of subjects per day with GC values between 0.2, 0.5, 1 or above 1\r\npercDay <- matrix(NA, nrow = 57,ncol = 5)\r\nj = 0\r\nfor (i in unique(dat$ASTDY)){\r\n  j = j + 1\r\n  datDay <- dat[dat$ASTDY == i,]\r\n  percDay[j,1] <- i\r\n  percDay[j,2] <- sum(datDay$AVAL1 < 0.2)/nrow(datDay) *100\r\n  percDay[j,3] <- sum(0.2 <= datDay$AVAL1 & datDay$AVAL1 < 0.5)/nrow(datDay)*100\r\n  percDay[j,4] <- sum(0.5 <= datDay$AVAL1 & datDay$AVAL1 < 1)/nrow(datDay)*100\r\n  percDay[j,5] <- sum(datDay$AVAL1 >= 1)/nrow(datDay)*100\r\n  \r\n}\r\n\r\n# transform data to long format as needed for stacked barchart\r\npercDay2 <- as.data.frame(percDay)\r\ndata_long <- percDay2 %>%\r\n  gather(key = \"GClevel\", value = \"Value\",-1)\r\n\r\n# Create the stacked bar chart\r\npng(filename =\"StackedBarchartGCdoseGroups.png\")\r\nggplot(data_long, aes(x = V1, y = Value, fill = GClevel)) +\r\n  geom_bar(stat = \"identity\") +\r\n  scale_fill_manual(values = c(\"V5\" =  \"#08519C\", \"V4\" = \"#4292C6\",\"V3\" = \"#9ECAE1\",V2 = \"#DEEBF7\"),\r\n                    labels = c(\"V5\" = \">= 1\", \"V4\" = \"0.5-1\",\"V3\" = \"0.2-0.5\",\"V2\" = \"<0.2\")) +\r\n  labs(x = \"Days\", y = \"Percentage of Subjects\") +\r\n  labs(fill = \"GC doses (mg/kg/day)\")+\r\n  scale_x_continuous(\r\n    breaks = seq(0,60,10),\r\n    limits = c(0, 60) # Specify the positions of the ticks\r\n  ) +\r\n  scale_y_continuous(\r\n    breaks = seq(0,100,10),limits = c(0, 101)  # Specify the positions of the ticks\r\n  ) +\r\n  theme_minimal() +\r\n  theme(\r\n    # panel.background = element_blank(), # Remove the gray background\r\n    # panel.grid.major = element_blank(), # Remove major grid lines\r\n    panel.grid.minor = element_blank(), # Remove minor grid lines\r\n    \r\n    axis.ticks.y.right = element_blank(),  # Remove ticks on the right\r\n    axis.ticks.x.top = element_blank(),    # Remove ticks on the top\r\n    axis.line.y.right = element_blank(),   # Remove axis line on the right\r\n    axis.line.x.top = element_blank()      # Remove axis line on the top\r\n  )\r\ndev.off() \r\n\r\n\r\nBack to blog\r\n\r\nExample 7. Streamgraph\r\n\r\n\r\nlibrary(tidyverse)\r\nlibrary(ggstream)\r\nlibrary(ggtext)\r\n\r\nout <- \".\"\r\n\r\ndf <- read_csv(WW_GCdose.csv) \r\n\r\ndaily <- df %>%\r\n  mutate(\r\n    dl = case_when(\r\n      AVAL2 <= 0.2 ~ \"4\",\r\n      AVAL2 <= 0.5 ~ \"3\",\r\n      AVAL2 <= 1.0 ~ \"2\",\r\n      AVAL2 > 1.0 ~ \"1\"\r\n    )\r\n  ) %>%\r\n  count(ASTDY, dl) %>%\r\n  complete(ASTDY=1:56, dl = c(\"1\", \"2\", \"3\", \"4\"), fill = list(n=0)) %>%\r\n  select(ASTDY, dl, n)\r\n\r\ncolours <- c(\"#fef0d9\", \"#fdcc8a\", \"#fc8d59\", \"#d7301f\")\r\ndaily$dl <- as.factor(daily$dl)\r\n\r\np0 <- ggplot(daily, aes(x = ASTDY, y = n, fill = dl)) +\r\n   scale_fill_manual(values = rev(colours),\r\n                    labels = rev(c(\"<= 0.2\", \"> 0.2 and <= 0.5\", \"> 0.5 and <=1.0\", \"> 1.0\")),\r\n                    name = \"GC Dose (mg/kg/day)\") +\r\n  scale_x_continuous(\"Study Day\",\r\n                     limits = c(0, 56),\r\n                   expand=c(0,0)) +\r\n  labs(title=\"<b>Use of <span style='color:#d7301f'>High Dose GC<\/span> Reduces Steadily Over Time, With Stable Dose Achieved by Week 8<\/span><\/b>\") +\r\n\r\n  theme_minimal(base_size = 16) +\r\n  theme(\r\n    panel.background = element_rect(fill = \"white\", color = NA),\r\n    plot.background = element_rect(fill = \"white\", color = NA),\r\n    plot.title = element_markdown(colour = \"black\",\r\n                                  size = 16)\r\n  )\r\n\r\np1 <- p0 +  geom_stream(type = \"proportional\") +\r\n  scale_y_continuous(name=\"Proportion\", expand=c(0,0)) \r\nggsave(file.path(out, \"GC_Streamgraph_prop.png\"), plot = p1, width = 12, height = 8, dpi = 300)\r\n\r\n\r\nBack to blog\r\n\r\nExample 8. Sankey diagram\r\n\r\n\r\nlibrary(tidyverse)\r\nlibrary(ggalluvial)\r\nlibrary(ggtext)\r\n\r\ndf <- read_csv(WW_GCdose.csv) \r\n\r\nweekly <- df %>%\r\n   mutate(\r\n    dl = case_when(\r\n      AVAL2 <= 0.2 ~ \"4\",\r\n      AVAL2 <= 0.5 ~ \"3\",\r\n      AVAL2 <= 1.0 ~ \"2\",\r\n      AVAL2 > 1.0 ~ \"1\"\r\n    )\r\n  ) %>%\r\n  group_by(SUBJID, AVISITN) %>%\r\n  filter(!duplicated(AVAL2)) %>%\r\n  ungroup()\r\n\r\ncolours <- c(\"#fef0d9\", \"#fdcc8a\", \"#fc8d59\", \"#d7301f\")\r\nweekly$dl <- as.factor(weekly$dl)\r\nweekly$AVISITN <- as.factor(weekly$AVISITN)\r\n\r\np <- ggplot(data=weekly, aes(x = AVISITN, stratum = dl, alluvium=SUBJID, fill=dl)) +\r\n  geom_flow(color = \"black\", aes.flow = \"forward\") +\r\n  geom_stratum() +\r\n  scale_x_discrete(\"Week\", \r\n                   limits = c(\"0\", \"1\", \"2\", \"3\", \"4\",\"5\", \"6\", \"7\",\"8\"),\r\n                   labels = c(\"0\" = \"BL\", \"1\" = \"1\", \"2\" = \"2\", \"3\" = \"3\", \"4\" = \"4\", \"5\" = \"5\", \"6\" = \"6\", \"7\" = \"7\",\"8\" = \"8\"),\r\n                   expand=c(0,0)) +\r\n  scale_y_continuous(\"Number of Patients\", \r\n                     expand=c(0,0)) +  \r\n  scale_fill_manual(values = rev(colours),\r\n                    labels = rev(c(\"<= 0.2\", \"> 0.2 and <= 0.5\", \"> 0.5 and <=1.0\", \"> 1.0\")),\r\n                    name = \"GC Dose (mg/kg/day)\") +\r\n  labs(title=\"<b>Use of <span style='color:#d7301f'>High Dose GC<\/span> Reduces Steadily After Week 2, With Stable Dose Achieved by Week 8<\/span><\/b>\") +\r\n  theme_minimal(base_size = 18) +\r\n  theme(panel.grid.major = element_blank(),\r\n        panel.background = element_rect(fill = \"white\", color = NA),\r\n        plot.background = element_rect(fill = \"white\", color = NA),\r\n        plot.title = element_markdown(colour = \"black\",\r\n                                      size = 16)\r\n        )\r\n\r\nout <- \"C:\\\\Users\\\\malle\\\\OneDrive\\\\OneDrive Documents\\\\_Steve\\\\Work\\\\R\\\\WW May 2025\\\\\"\r\nggsave(file.path(out, \"GC_Sankey.png\"), plot = p, width = 12, height = 8, dpi = 300)\r\n\r\n\r\nBack to blog\r\n\r\n\r\n\r\n",
    "preview": "posts/2025-05-14-wonderful-wednesday-may-2025/./images/WW62smooth.png",
    "last_modified": "2025-08-28T22:22:06+02:00",
    "input_file": {},
    "preview_width": 619,
    "preview_height": 490
  },
  {
    "path": "posts/2025-04-09-wonderful-wednesday-april-2025/",
    "title": "Wonderful Wednesday April 2025 (61)",
    "description": "Measuring treatment response is vital for the assessment of the efficacy of a drug. Visualisations can help to show response gain and maintenance or loss over time.",
    "author": [
      {
        "name": "PSI VIS SIG",
        "url": "https://www.psiweb.org/sigs-special-interest-groups/visualisation"
      }
    ],
    "date": "2025-04-09",
    "categories": [
      "Markov trace",
      "Longitudinal data",
      "Wonderful Wednesdays"
    ],
    "contents": "\r\nMarkov Trace\r\nData set:\r\n500 subjects randomised 1:1 to Drug A or Drug B\r\nPatients start in a state of No Response at Visit 1, and transition between four possible health states up to Visit 20 (No Response, Low Response, Response, High Response)\r\nThe Challenge:\r\nVisualise the efficacy of the two treatments with respect to state occupancy over time.\r\nOptions:\r\nCompare the treatments at an aggregate level (%s in each state over time)\r\nVisualise response gain/maintenance/loss over time at a patient level\r\nExplore decisions which may be made based on patient behaviour – e.g., if rules were introduced to discontinue subjects with suboptimal efficacy, how might different treatment discontinuation rules impact the numbers of subjects discontinuing each treatment?\r\nA description of the challenge can also be found here.\r\nA recording of the session can be found here.\r\nVisualisations\r\nAnimation of plots over time is a very intuitive way to show development of the results over the course of the study. Lasagna plots allow seeing individual patient data, but then right sorting is crucial. Sankey diagrams make it easy to compare proportions over time. This can also be achieved with stacked area charts with careful interpretation of the intermediate stages.\r\n\r\nExample 1. Animated bar chart\r\n\r\nlink to code\r\n\r\nExample 2. Animated line plot\r\n\r\nlink to code\r\n\r\nExample 3. Static line plot\r\n\r\nlink to code\r\nExample 4. Heat map\r\n\r\nExample 5. Sankey diagrams\r\n\r\nExample 6. Stacked area charts\r\n\r\nExample 4. Flowing data (non-pharma)\r\n\r\nSource: Flowing Data\r\nCode\r\n\r\nExample 1. Animated bar chart\r\n\r\n\r\n#######################\r\n# Author: Harry Wykes #\r\n#######################\r\n\r\nif(!require(\"pacman\")) install.packages(\"pacman\")\r\np_load(\"tidyverse\", \"this.path\", \"readxl\", \"gganimate\", \"gifski\")\r\n\r\nsetwd(this.dir())\r\ndat<-read_xlsx(\"WWW_APR2025.xlsx\", 1) %>%\r\n  mutate(AVALC = reorder(AVALC, AVAL, decreasing = TRUE))\r\n\r\nbign <- dat %>%\r\n  filter(AVISITN==1) %>%\r\n  group_by(TRT) %>%\r\n  mutate(N=n()) %>%\r\n  select(TRT, N) %>%\r\n  distinct()\r\n\r\n#Proportion of subjects at each level at each time\r\nprop <- dat %>%\r\n  merge(bign) %>%\r\n  group_by(TRT, AVISITN, AVALC) %>%\r\n  mutate(count = n(), prp=count/N, perc = round(100*prp, 2)) %>%\r\n  select(TRT, AVISITN, AVALC, AVAL, count, prp, perc) %>%\r\n  distinct()\r\n\r\n#Animated bar plot\r\nbar<-prop %>%\r\n  filter(AVISITN != 1) %>%\r\n  ggplot(aes(x=reorder(AVALC, AVAL), y=perc, group=TRT, fill=TRT)) +\r\n  geom_bar(stat=\"identity\", position=\"dodge\") +\r\n  ylim(c(0,60)) +\r\n  transition_time(AVISITN) +\r\n  enter_grow() +\r\n  exit_fade() +\r\n  labs(x=\"Response\", \r\n       y=\"Percentage of Responsders\", \r\n       title=\"Visit: {frame_time}\",\r\n       fill = \"Treatment\") +\r\n  theme(axis.text = element_text(size=20),\r\n        axis.title = element_text(size=30),\r\n        plot.title = element_text(size=40),\r\n        legend.text = element_text(size=30),\r\n        legend.title = element_text(size=30),\r\n        legend.key.size = unit(2, \"cm\"))\r\n\r\nanimate(bar, nframes=19, fps=1, width=1920, height=1080, renderer=gifski_renderer())\r\nanim_save(\"bar.gif\")\r\n\r\n\r\nBack to blog\r\n\r\nExample 2. Animated line plot\r\n\r\n\r\n#######################\r\n# Author: Harry Wykes #\r\n#######################\r\n\r\nif(!require(\"pacman\")) install.packages(\"pacman\")\r\np_load(\"tidyverse\", \"this.path\", \"readxl\", \"gganimate\", \"gifski\")\r\n\r\nsetwd(this.dir())\r\ndat<-read_xlsx(\"WWW_APR2025.xlsx\", 1) %>%\r\n  mutate(AVALC = reorder(AVALC, AVAL, decreasing = TRUE))\r\n\r\nbign <- dat %>%\r\n  filter(AVISITN==1) %>%\r\n  group_by(TRT) %>%\r\n  mutate(N=n()) %>%\r\n  select(TRT, N) %>%\r\n  distinct()\r\n\r\n#Proportion of subjects at each level at each time\r\nprop <- dat %>%\r\n  merge(bign) %>%\r\n  group_by(TRT, AVISITN, AVALC) %>%\r\n  mutate(count = n(), prp=count/N, perc = round(100*prp, 2)) %>%\r\n  select(TRT, AVISITN, AVALC, AVAL, count, prp, perc) %>%\r\n  distinct()\r\n\r\n#Animated moving line plot\r\nline<-prop %>%\r\n  filter(AVISITN != 1) %>%\r\n  ggplot(aes(x=AVISITN, y=prp, col=TRT)) +\r\n  geom_point(size=10) +\r\n  geom_line(linewidth=5) +\r\n  facet_wrap(~AVALC) +\r\n  scale_x_continuous(breaks=c(2,5,10,15,20)) +\r\n  ylim(c(0,0.6)) +\r\n  transition_reveal(AVISITN) +\r\n  ease_aes(\"sine-in-out\") +\r\n  labs(x=\"Visit\", \r\n       y=\"Proportion of Patients\", \r\n       title=\"Visit: {frame_along}\",\r\n       col=\"Treatment\") +\r\n  theme(axis.text = element_text(size=20),\r\n        axis.title = element_text(size=30),\r\n        plot.title = element_text(size=40),\r\n        legend.text = element_text(size=30),\r\n        legend.title = element_text(size=30),\r\n        legend.key.size = unit(2, \"cm\"),\r\n        strip.text = element_text(size=30))\r\n\r\nanimate(line, nframes=19, fps=1.9, width=1920, height=1080, renderer=gifski_renderer())\r\nanim_save(\"line.gif\")\r\n\r\n\r\nBack to blog\r\n\r\nExample 3. Animated bar chart\r\n\r\n\r\n#######################\r\n# Author: Harry Wykes #\r\n#######################\r\n\r\nif(!require(\"pacman\")) install.packages(\"pacman\")\r\np_load(\"tidyverse\", \"this.path\", \"readxl\", \"gganimate\", \"gifski\")\r\n\r\nsetwd(this.dir())\r\ndat<-read_xlsx(\"WWW_APR2025.xlsx\", 1) %>%\r\n  mutate(AVALC = reorder(AVALC, AVAL, decreasing = TRUE))\r\n\r\nbign <- dat %>%\r\n  filter(AVISITN==1) %>%\r\n  group_by(TRT) %>%\r\n  mutate(N=n()) %>%\r\n  select(TRT, N) %>%\r\n  distinct()\r\n\r\n#Proportion of subjects at each level at each time\r\nprop <- dat %>%\r\n  merge(bign) %>%\r\n  group_by(TRT, AVISITN, AVALC) %>%\r\n  mutate(count = n(), prp=count/N, perc = round(100*prp, 2)) %>%\r\n  select(TRT, AVISITN, AVALC, AVAL, count, prp, perc) %>%\r\n  distinct()\r\n\r\n#Non-animated fitted line facet plots\r\nline_static<-prop %>%\r\n  filter(AVISITN != 1) %>%\r\n  ggplot(aes(x=AVISITN, y=perc, group=TRT, col=TRT)) +\r\n  geom_point(alpha=0.5) +\r\n  geom_smooth(method=\"lm\", se=FALSE) +\r\n  xlim(0,20) +\r\n  ylim(0,60) +\r\n  xlab(\"Visit Number\") +\r\n  ylab(\"% of subjects\") +\r\n  labs(col=\"Treatment\") +\r\n  facet_wrap(~AVALC) +\r\n  theme(panel.grid.minor = element_blank())\r\n\r\nggsave(\"line_static.png\", line_static, width=1920, height=1080, units=\"px\")\r\n\r\n\r\nBack to blog\r\n\r\n\r\n\r\n",
    "preview": "posts/2025-04-09-wonderful-wednesday-april-2025/./images/bar-Harry-Wykes.gif",
    "last_modified": "2025-08-28T10:09:57+02:00",
    "input_file": {}
  },
  {
    "path": "posts/2025-03-12-wonderful-wednesday-march-2025/",
    "title": "Wonderful Wednesday March 2025 (60)",
    "description": "The assessment of benefit and risk is in the centre of evaluating treatments.",
    "author": [
      {
        "name": "PSI VIS SIG",
        "url": "https://www.psiweb.org/sigs-special-interest-groups/visualisation"
      }
    ],
    "date": "2025-03-12",
    "categories": [
      "Benefit-Risk",
      "Forest plot",
      "Wonderful Wednesdays"
    ],
    "contents": "\r\nBenefit-Risk profiles\r\nThe assessment of benefit-risk profiles is crucial in drug development and regulatory decision-making. Effective visualization of these profiles can greatly enhance understanding and communication among stakeholders. This challenge is inspired by the work presented in the paper: “Planning Benefit-Risk Assessments Using Visualizations” by Colopy MW, Gakava L, Chen C. Ther Innov Regul Sci. 2023 Nov;57(6):1123-1135. doi: 10.1007/s43441-023-00563-9. Epub 2023 Sep 8. PMID: 37682462.\r\nIn their paper, Colopy et al. emphasize the importance of proactive planning in benefit-risk assessments and propose various visualization techniques to facilitate this process. They present a series of visualizations that progress from analyzing the medical condition and current treatment options to assessing the investigational drug.\r\nData set:\r\nFor this challenge, you will be working with a data set (brdata.xlsx). The Excel spreadsheet contains two tabs:\r\n“brdata”: This tab provides the primary data for your visualization. It includes information on various clinical outcomes, quality of life measures, and drug characteristics for multiple treatments compared to placebo. You will use this data to create your visualizations.\r\n“description”: Refer to this tab for detailed descriptions of all variables found in the “brdata” tab.\r\nThe Challenge:\r\nreate a visualization (or set of visualizations) using the provided dataset to effectively communicate the benefit-risk profiles of the drugs. Your visualization should aim to address one or more of the following aspects:\r\nComparative efficacy and safety of the drugs against placebo\r\nGender-specific effects of treatments\r\nDifferences between approved and test drugs\r\nRelationships between different outcomes (e.g., clinical assessments and quality of life)\r\nUncertainty or variability in the data\r\nThere are no strict restrictions on the type of visualization or the specific questions you choose to address. Your goal is to create a visualization that provides meaningful insights into the benefit-risk profiles and facilitates decision-making in drug development.\r\nReference:\r\nColopy MW, Gakava L, Chen C. Planning Benefit-Risk Assessments Using Visualizations. Ther Innov Regul Sci. 2023 Nov;57(6):1123-1135. doi: 10.1007/s43441-023-00563-9. Epub 2023 Sep 8. PMID: 37682462\r\nA description of the challenge can also be found here.\r\nA recording of the session can be found here.\r\nVisualisations\r\n\r\nExample 1. Combined forest plot\r\n\r\nlink to code\r\nKey Messaging\r\nEfficacy Comparison (Left Panel)\r\nDrugs with data points further to the right are more effective compared to placebo.\r\nThe spread of data points for each drug shows efficacy across different clinical assessments.\r\nLonger horizontal error bars indicate less certainty in the efficacy estimate.\r\nThe purple arrow on the left indicates “Favors Placebo,” while the green arrow on the right indicates “Favors Treatment.”\r\nRisk Assessment (Middle Panel)\r\nData points further to the right indicate higher toxicity risk.\r\nThe difference in incidence rate per 100 patient-years provides a standardized measure of risk magnitude.\r\nHorizontal error bars show the uncertainty in the risk estimates.\r\nThe green arrow on the left now indicates “Favors Treatment,” while the purple arrow on the right indicates “Favors Placebo.”\r\nEvent Counts and Proportions (Right Panel)\r\nThis panel shows the actual event counts and proportions for drug class toxicity.\r\nPurple dots represent placebo group data, while green dots represent active treatment group data.\r\nThe proportions are visualized on a percentage scale for easy comparison.\r\nActual event counts (n/N) are displayed next to each data point for precise information.\r\nBenefit-Risk Trade-off\r\nBy comparing a drug’s position across all three panels, one can assess its overall profile.\r\nIdeal drugs would be far right in the left panel (high efficacy), far left in the middle panel (low toxicity), and have lower proportions of events in the right panel.\r\nThe uncertainty in both benefit and risk estimates should be considered when making comparisons.\r\nComparative Analysis\r\nThe alignment of drugs across all three panels allows for easy comparison between different drugs.\r\nIt’s possible to identify drugs that offer the best balance of high efficacy, low toxicity, and favorable event proportions.\r\nDecision Support\r\nThis visualization supports informed decision-making in drug development and regulatory processes.\r\nIt allows stakeholders to quickly grasp the overall benefit-risk profile of each drug in the portfolio, along with the actual event data.\r\nUncertainty and Variability\r\nThe error bars in the left and middle panels highlight the level of certainty in the efficacy and risk estimates.\r\nDifferent outcomes for the same drug in the efficacy panel show how efficacy can vary across different clinical assessments.\r\nThe event counts in the right panel provide context for interpreting these uncertainties and variabilities.\r\nStandardized Comparison\r\nUsing relative risk for efficacy, difference in incidence rate for risk, and actual proportions for events allows for a comprehensive and standardized comparison across drugs.\r\nThe log scale for relative risk in the efficacy panel helps to visualize both small and large effects.\r\nColor Coding\r\nConsistent color coding across all three panels enhances interpretability:\r\nPurple consistently represents placebo or outcomes favoring placebo.\r\nGreen consistently represents active treatment or outcomes favoring treatment.\r\n\r\nThis color scheme helps in quickly identifying which group (placebo or active treatment) is favored in each aspect of the analysis.\r\nComprehensive View\r\nThe three-panel design provides a comprehensive view of drug performance:\r\nEfficacy compared to placebo\r\nRisk of toxicity\r\nActual event counts and proportions\r\n\r\nThis allows for a nuanced understanding of each drug’s performance across multiple dimensions.\r\n\r\nExample 2. Double dot plot (from the publication)\r\n\r\n\r\nExample 3. Trade off plot\r\n\r\nExample 4. Value tree\r\n\r\nCode\r\n\r\nExample 1. Combined forest plot\r\n\r\n\r\n###########################\r\n# Author: Lovemore Gakava #\r\n###########################\r\n\r\n# Load required libraries\r\nlibrary(ggplot2)\r\nlibrary(dplyr)\r\nlibrary(tidyr)\r\nlibrary(patchwork)\r\nlibrary(RColorBrewer)\r\nlibrary(readxl)\r\nlibrary(purrr)\r\n\r\n# Read in data\r\nbrdata <- read_excel(paste0(here(), \"/202503/brdata.xlsx\"), sheet = \"brdata\")\r\n\r\n# Rename columns based on the description tab\r\nbrdata <-  brdata %>% \r\n  rename(\r\n    Drug = Trt1,\r\n    Placebo = Trt2,\r\n    nSub1 = nSub1,\r\n    N1 = N1,\r\n    Prop1 = Prop1,\r\n    nSub2 = nSub2,\r\n    N2 = N2,\r\n    Prop2 = Prop2,\r\n    Diff_IncRate_LowerCI = Diff_IncRate_LowerCI,\r\n    Diff_IncRate_UpperCI = Diff_IncRate_UpperCI,\r\n    RelRisk_LowerCI = RelRisk_LowerCI,\r\n    RelRisk_UpperCI = RelRisk_UpperCI\r\n  )\r\n\r\n# Convert relevant columns to numeric\r\nnumeric_cols <-  c(\"IncRate1\", \"IncRate2\", \"Diff_IncRate_LowerCI\", \"Diff_IncRate_UpperCI\", \"RelRisk_LowerCI\", \"RelRisk_UpperCI\", \"Prop1\", \"Prop2\")\r\n\r\nconversion_issues <- character(0)\r\nbrdata[numeric_cols] <- lapply(numeric_cols, function(col) {\r\n  result <- tryCatch({\r\n    as.numeric(gsub(\",\", \"\", as.character(brdata[[col]])))\r\n  }, warning = function(w) {\r\n    conversion_issues <<- c(conversion_issues, paste(\"Warning in\", col, \":\", conditionMessage(w)))\r\n    as.numeric(gsub(\",\", \"\", as.character(brdata[[col]])))\r\n  })\r\n  result\r\n})\r\n\r\nif (length(conversion_issues) > 0) {\r\n  cat(\"Conversion issues occurred:\\n\")\r\n  cat(paste(conversion_issues, collapse = \"\\n\"))\r\n}\r\n\r\n# Check for any remaining non-numeric values\r\nnon_numeric <-  sapply(brdata[numeric_cols], function(x) sum(is.na(x)))\r\nprint(non_numeric)\r\n\r\n# Derive Diff_IncRate and RelRisk\r\nbrdata <- brdata %>%\r\n  mutate(\r\n    Diff_IncRate = IncRate1 - IncRate2,\r\n    RelRisk = Prop1 / Prop2,\r\n    Drug = paste(Drug_Status, \":\", Drug) # Concatenate Drug_Status with Drug\r\n  )\r\n\r\n# Filter data for benefit and risk plots\r\nbenefit_data <-  brdata %>%\r\n  filter(Factor == \"Benefit\", Grouped_Outcome %in% c(\"Clinical Assessment\"), Filter == \"None\") %>% \r\n  mutate(Drug = factor(Drug, levels = rev(unique(Drug))))\r\n\r\nrisk_data <-  brdata %>%\r\n  filter(Factor == \"Risk\", Grouped_Outcome %in% c(\"Drug Class Toxicity\"), Filter == \"None\") %>%\r\n  mutate(Drug = factor(Drug, levels = rev(unique(Drug))))\r\n\r\n# Define color palettes\r\nbenefit_colors <-  c(\"#FF7F0E\", \"#1F77B4\") # Orange and Blue (complementary) for main benefit plot\r\nactive_color <- \"#2CA02C\" # Darker Green for Active Treatment (arrows and annotations)\r\nplacebo_color <- \"#6A3D9A\" # Darker Purple for Placebo (arrows and annotations)\r\nrisk_color <- \"#D62728\" # Red for risk plot\r\n\r\n# Function to create benefit plot\r\ncreate_benefit_plot <- function(data) {\r\n  ggplot(data, aes(x = RelRisk, y = Drug, color = Outcome)) +\r\n    geom_point(position = position_dodge(width = 0.5), size = 3) +\r\n    geom_errorbarh(\r\n      aes(xmin = RelRisk_LowerCI, xmax = RelRisk_UpperCI),\r\n      position = position_dodge(width = 0.5),\r\n      height = 0.2\r\n    ) +\r\n    geom_vline(xintercept = 1, linetype = \"dashed\", color = \"gray50\") +\r\n    scale_x_log10(limits = c(0.5, 20), breaks = c(0.5, 1, 2, 5, 10, 20)) +\r\n    scale_color_manual(values = benefit_colors) +\r\n    labs(\r\n      title = \"Benefits: Comparative Efficacy vs Placebo\",\r\n      x = \"\\nRelative Risk (log scale)\",\r\n      y = NULL\r\n    ) +\r\n    theme_minimal() +\r\n    theme(\r\n      legend.position = \"bottom\", \r\n      plot.margin = margin(b = 20),\r\n      axis.text.y = element_text(face = \"bold\", size = 10),\r\n      legend.text = element_text(size = 10),\r\n      legend.title = element_text(size = 10)\r\n    ) +\r\n    coord_cartesian(clip = \"off\")\r\n}\r\n\r\n# Function to create risk plot\r\ncreate_risk_plot <- function(data) {\r\n  ggplot(data, aes(y = Drug)) +\r\n    geom_point(aes(x = Diff_IncRate), size = 3, color = risk_color) +\r\n    geom_errorbarh(\r\n      aes(xmin = Diff_IncRate_LowerCI, xmax = Diff_IncRate_UpperCI),\r\n      height = 0.1,\r\n      linewidth = 0.5,\r\n      color = risk_color\r\n    ) +\r\n    geom_vline(xintercept = 0, linetype = \"dashed\", color = \"gray50\") +\r\n    scale_x_continuous(\r\n      limits = c(\r\n        min(data$Diff_IncRate_LowerCI, -20),\r\n        max(data$Diff_IncRate_UpperCI) * 1.1\r\n      ),\r\n      expand = expansion(mult = c(0.1, 0.1))\r\n    ) +\r\n    labs(\r\n      title = \"Risks: Drug Class Toxicity\",\r\n      x = \"\\nDifference in Incidence Rate per 100 Patient-Years\",\r\n      y = NULL\r\n    ) +\r\n    theme_minimal() +\r\n    theme(\r\n      legend.position = \"none\", \r\n      plot.margin = margin(b = 20),\r\n      axis.text.y = element_text(face = \"bold\", size = 10)\r\n    ) +\r\n    coord_cartesian(clip = \"off\")\r\n}\r\n\r\n# Function to create count plot\r\ncreate_count_plot <- function(data) {\r\n  count_data <- data %>%\r\n    select(Drug, nSub1, N1, Prop1, nSub2, N2, Prop2) %>%\r\n    pivot_longer(\r\n      cols = c(Prop1, Prop2),\r\n      names_to = \"Group\",\r\n      values_to = \"Proportion\"\r\n    ) %>%\r\n    mutate(\r\n      Group = ifelse(Group == \"Prop1\", \"Active Treatment\", \"Placebo\"),\r\n      Count = ifelse(\r\n        Group == \"Active Treatment\",\r\n        paste(nSub1, \"/\", N1),\r\n        paste(nSub2, \"/\", N2)\r\n      )\r\n    )\r\n  \r\n  ggplot(count_data, aes(x = Proportion, y = Drug, color = Group)) +\r\n    geom_point(size = 3) +\r\n    geom_text(\r\n      aes(label = Count),\r\n      hjust = -0.3,\r\n      vjust = 0.5,\r\n      size = 3,\r\n      show.legend = FALSE\r\n    ) +\r\n    scale_x_continuous(\r\n      limits = c(0, max(count_data$Proportion) * 1.2),\r\n      labels = scales::percent\r\n    ) +\r\n    scale_color_manual(\r\n      values = setNames(\r\n        c(active_color, placebo_color),\r\n        c(\"Active Treatment\", \"Placebo\")\r\n      )\r\n    ) +\r\n    labs(\r\n      title = \"Event Counts and Proportions for Drug Class Toxicity\",\r\n      x = \"\\nProportion of Events\",\r\n      y = NULL\r\n    ) +\r\n    theme_minimal() +\r\n    theme(\r\n      legend.position = \"bottom\",\r\n      axis.text.y = element_text(face = \"bold\", size = 10),\r\n      legend.text = element_text(size = 10),\r\n      legend.title = element_text(size = 10)\r\n    ) +\r\n    guides(color = guide_legend(title = NULL))\r\n}\r\n\r\n# Function to remove y-axis\r\nremove_y_axis <- function(p) {\r\n  p +\r\n    theme(\r\n      axis.text.y = element_blank(),\r\n      axis.ticks.y = element_blank(),\r\n      axis.title.y = element_blank()\r\n    )\r\n}\r\n\r\n# Function to adjust y-axis\r\nadjust_y_axis <- function(p, data) {\r\n  p + scale_y_discrete(limits = unique(data$Drug))\r\n}\r\n\r\n# Function to add arrows and labels\r\nadd_arrows_and_labels <- function(\r\n    p,\r\n    x_left,\r\n    x_right,\r\n    y_pos,\r\n    label_left,\r\n    label_right,\r\n    break_point,\r\n    is_log_scale = FALSE,\r\n    transparent = FALSE,\r\n    reverse_colors = FALSE\r\n) {\r\n  text_offset <- if (is_log_scale) 0.1 else 0.05 * (x_right - x_left)\r\n  \r\n  if (is_log_scale) {\r\n    gap <- 0.01 # Fixed small gap for log scale\r\n    left_end <- break_point / (1 + gap)\r\n    right_start <- break_point * (1 + gap)\r\n  } else {\r\n    gap <- 0.005 * (x_right - x_left)\r\n    left_end <- break_point - gap\r\n    right_start <- break_point + gap\r\n  }\r\n  \r\n  if (reverse_colors) {\r\n    arrow_color_left <- if (transparent) alpha(active_color, 0) else\r\n      active_color\r\n    arrow_color_right <- if (transparent) alpha(placebo_color, 0) else\r\n      placebo_color\r\n    text_color_left <- active_color\r\n    text_color_right <- placebo_color\r\n  } else {\r\n    arrow_color_left <- if (transparent) alpha(placebo_color, 0) else\r\n      placebo_color\r\n    arrow_color_right <- if (transparent) alpha(active_color, 0) else\r\n      active_color\r\n    text_color_left <- placebo_color\r\n    text_color_right <- active_color\r\n  }\r\n  \r\n  p +\r\n    # Left arrow\r\n    annotate(\r\n      \"segment\",\r\n      x = x_left,\r\n      xend = left_end,\r\n      y = y_pos,\r\n      yend = y_pos,\r\n      arrow = arrow(length = unit(0.3, \"cm\"), ends = \"first\"),\r\n      color = arrow_color_left\r\n    ) +\r\n    # Right arrow\r\n    annotate(\r\n      \"segment\",\r\n      x = right_start,\r\n      xend = x_right,\r\n      y = y_pos,\r\n      yend = y_pos,\r\n      arrow = arrow(length = unit(0.3, \"cm\"), ends = \"last\"),\r\n      color = arrow_color_right\r\n    ) +\r\n    # Labels\r\n    annotate(\r\n      \"text\",\r\n      x = x_left * (if (is_log_scale) 1.1 else 1),\r\n      y = y_pos + 0.1,\r\n      label = label_left,\r\n      hjust = 0,\r\n      color = text_color_left,\r\n      size = 4\r\n    ) +\r\n    annotate(\r\n      \"text\",\r\n      x = x_right / (if (is_log_scale) 1.1 else 1),\r\n      y = y_pos + 0.1,\r\n      label = label_right,\r\n      hjust = 1,\r\n      color = text_color_right,\r\n      size = 4\r\n    )\r\n}\r\n\r\n# Create and modify plots\r\nbenefit_plot <-  create_benefit_plot(benefit_data) %>%\r\n  add_arrows_and_labels(\r\n    0.5,\r\n    20,\r\n    0.2,\r\n    \"Favors Placebo\",\r\n    \"Favors Treatment\",\r\n    break_point = 1,\r\n    is_log_scale = TRUE\r\n  )\r\n\r\nrisk_plot <-  create_risk_plot(risk_data) %>%\r\n  remove_y_axis() %>%\r\n  add_arrows_and_labels(\r\n    min(risk_data$Diff_IncRate_LowerCI, -20),\r\n    max(risk_data$Diff_IncRate_UpperCI) * 1.1,\r\n    0.2,\r\n    \"Favors Treatment\",\r\n    \"Favors Placebo\",\r\n    break_point = 0,\r\n    is_log_scale = FALSE,\r\n    reverse_colors = TRUE\r\n  )\r\n\r\ncount_plot <-  create_count_plot(risk_data) %>%\r\n  remove_y_axis() %>%\r\n  # Add phantom line and annotation for alignment (now transparent)\r\n  add_arrows_and_labels(\r\n    0,\r\n    0,\r\n    0.2,\r\n    \"\",\r\n    \"\",\r\n    break_point = 0.5,\r\n    is_log_scale = FALSE,\r\n    transparent = TRUE\r\n  ) +\r\n  theme(\r\n    plot.margin = margin(t = 20, r = 5.5, b = 5.5, l = 5.5, unit = \"pt\")\r\n  )\r\n\r\n# Adjust y-axis for all plots\r\nplots <-  list(benefit_plot, risk_plot, count_plot) %>%\r\n  map(~ adjust_y_axis(., benefit_data))\r\n\r\n# Function to create a thin vertical line plot with padding\r\ncreate_separator <- function() {\r\n  ggplot() + \r\n    geom_vline(xintercept = 0, color = \"black\", size = 0.5) +\r\n    theme_void() +\r\n    theme(\r\n      plot.margin = margin(0, 10, 0, 10, \"pt\"),\r\n      panel.border = element_rect(color = NA, fill = NA)\r\n    )\r\n}\r\n\r\n# Create separator plots\r\nseparator1 <- create_separator()\r\nseparator2 <- create_separator()\r\n\r\n# Combine the plots with separators\r\ncombined_plot <- (plots[[1]] | separator1 | plots[[2]] | separator2 | plots[[3]]) +\r\n  plot_layout(ncol = 5, widths = c(1, 0.02, 1, 0.02, 1)) +\r\n  plot_annotation(\r\n    title = \"Benefit-Risk Profile of Drugs\",\r\n    theme = theme(\r\n      plot.title = element_text(hjust = 0.5, size = 16),\r\n      plot.margin = margin(10, 10, 10, 10)\r\n    )\r\n  ) &\r\n  theme(\r\n    plot.margin = margin(5, 5, 5, 5),\r\n    legend.text = element_text(size = 10),\r\n    legend.title = element_text(size = 10)\r\n  )\r\n\r\n# Save the plot\r\nggsave(\r\n  paste0(here(), \"/202503/benefit_risk_plot_nn.png\"),\r\n  combined_plot,\r\n  width = 20,\r\n  height = 8,\r\n  dpi = 300\r\n)\r\n\r\n# Print the combined plot\r\nprint(combined_plot)\r\n\r\n\r\nBack to blog\r\n\r\n\r\n\r\n",
    "preview": "posts/2025-03-12-wonderful-wednesday-march-2025/./images/benefit_risk_plot_preview.jpg",
    "last_modified": "2025-08-28T22:21:02+02:00",
    "input_file": {}
  },
  {
    "path": "posts/2025-02-12-wonderful-wednesday-february-2025/",
    "title": "Wonderful Wednesdays February 2025 (59)",
    "description": "It is a real challenge to display adverse event data. There are a lot of different aspects to concentrate on. How this can be approached?",
    "author": [
      {
        "name": "PSI VIS SIG",
        "url": "https://www.psiweb.org/sigs-special-interest-groups/visualisation"
      }
    ],
    "date": "2025-02-12",
    "categories": [
      "Adverse events",
      "Biomarker",
      "Wonderful Wednesdays"
    ],
    "contents": "\r\nAdverse Event display\r\nThe time course of adverse events can be shown with violin plots. To explore the co-occurrence of events a visually enhanced correlation matrix is helpful. Various ways are presented to effectively combine (stacked) bar charts with indivial patient data display and violin plots to explore subgroup differences.\r\nData set:\r\nSample ADAE data set generated using teal.data package in R. Data limited to two treatments (Drug X, Placebo), although subjects may switch between the two.\r\nThe Challenge:\r\nProduce a visualization using this sample ADAE data set The challenge is open-ended, and you can choose a feature of the data to focus on. Possible ideas:\r\nInvestigate the co-occurrence of adverse events (the October 2020 webinar might provide some inspiration!) or ‘clusters’ of adverse events – do certain groups of adverse events tend to occur alongside one another or at certain times\r\nInvestigate the time to a given event or adverse event profiles over time\r\nExplore the hierarchical nature of adverse events (MedDRA terms)\r\nA description of the challenge can also be found here.\r\nA recording of the session can be found here.\r\nVisualisations\r\n\r\nExample 1: Violin plot on onset and resolution\r\n\r\nlink to code\r\n\r\nExample 2: Co-occurence\r\n\r\nlink to code\r\n\r\nExample 3: Frequency and severity of drug-related and unrelated adverse events, in different primary organ systems and treatment groups\r\n\r\nlink to code\r\n\r\nExample 4: Frequency and seriousness of drug-related and unrelated adverse events, in different primary organ systems and treatment groups\r\nThe “seriousness” of an adverse event is determined by several other categories, including whether the event was related to cancer or congential disease, hospitalisation, disability or death.\r\n\r\n“Seriousness” and “severity” form overlapping but non-identical sets.\r\n\r\n\r\nlink to code\r\n\r\nExample 5: Frequency of drug-related and unrelated adverse events, stratified by primary organ system, treatment groups, and patient sex\r\n\r\nlink to code\r\nA Practical and Efficient Approach in Generating AE (Adverse Events) Tables within a Clinical Study Environment. Jiannan Hu Vertex Pharmaceuticals, Inc., NESUG 2011\r\nhttps://www.lexjansen.com/nesug/nesug11/cc/cc13.pdf\r\n“Adverse event analysis is a pivotal piece in the safety analysis, and it is common in almost every trial, and every clinical study report. The adverse events related to study drug will be summarized, as well as by severity, by relationship. They are tabulated by MedDRA system organ class (SOC) and preferred term (PT), and each subject is counted only once, and the sorting is by descending frequency of SOC and PT”\r\n\r\nExample 6: Toxicity grade, affected primary organ system of the most severe adverse event, stratified by treatment, adverse event relation to drug, and patient sex\r\n\r\nlink to code\r\n\r\nExample 7: Toxicity grade, affected primary organ system of the most severe adverse event, stratified by treatment, adverse event relation to drug, and patient race\r\n\r\nlink to code\r\n\r\nExample 8: Discretisation of biomarker 1 measurements\r\nBiomarker 1 data were measurements were a continuous variable, whereas biomarker 2 were recorded as “low”, “medium”, or “high”. This plot shows how I discretised biomarker 1 measurements, and compares the numbers of patients in each treatment group and biomarker level category.\r\nDiscretising biomarker 1 allows using it as the colour-coded variable in the same kind of plot as the two above.\r\n\r\nlink to code\r\n\r\nExample 9: Toxicity grade and affected primary organ system of the most severe adverse event in each patient, stratified by treatment, adverse event relation to drug, and biomarker 1 categorical level\r\n\r\nlink to code\r\n\r\nExample 10: Fatal AEs and cause of death: Visualising membership in multiple sets and their intersections\r\nThe ASDL categories AEOUT = FATAL and DTHCAUS = ADVERSE EVENT are related but serve different purposes in the context of clinical trial data.\r\nWhen AEOUT (Outcome of Adverse Event) is set to “FATAL,” it means that the adverse event resulted in the death of the subject.\r\nWhen DTHCAUS (Cause of Death) is set to “ADVERSE EVENT,” it indicates that the cause of death was an adverse event.\r\nAEOUT = FATAL indicates that the adverse event led to death, while DTHCAUS = ADVERSE EVENT specifies that the cause of death was the adverse event itself 2.\r\nUse AEOUT = FATAL to indicate the outcome of the adverse event and DTHCAUS = ADVERSE EVENT to specify the cause of death when reporting deaths from treatment-related adverse events.\r\nIf an adverse event is determined to be related to the treatment (AEREL), and the outcome of the adverse event is fatal (AEOUT = FATAL), then the cause of death (DTHCAUS) would likely be reported as an adverse event.\r\nWhat is the difference between AEs recorded in AEOUT and DTHCAUS?\r\nIf “fatal adverse events”, represent actual deaths, than their frequency appears extremely high. On the other hand, if “cause of death” represents real fatal events, why is there so little overlap with “fatal” or “serious” adverse events?\r\n\r\nlink to code\r\nYou may find an updated version of a document containing examples 3 to 10 on: Rpubs/thomas-weissensteiner.\r\nCode\r\n\r\nExample 1. Violin plot on onset and resolution\r\n\r\n\r\n##############################################\r\n# Author: Wei Quan\r\n# Latest Update: 04 Feb 2025\r\n# PSI Visualization SIG Wonderful Wednesday: Adverse events\r\n# Sample ADAE dataset generated using teal.data package in R.\r\n# Data limited to two treatments (Drug X, Placebo),although subjects may switch between the two\r\n# Challenge: produce a visualization using this sample ADAE dataset The challenge is open-ended,\r\n# and you can choose a feature of the data to focus on.\r\n# Possible ideas:\r\n# Investigate the co-occurrence of adverse events (the October 2020 webinar might provide some inspiration!)\r\n# or ‘clusters’ of adverse events – do certain groups of adverse events tend to occur alongside one another or at certain times\r\n# Investigate the time to a given event or adverse event profiles over time\r\n# Explore the hierarchical nature of adverse events (MedDRA terms)\r\n###############################################\r\n\r\n## Load the packages -----------------\r\nlibrary(tidyverse)\r\nlibrary(survival)\r\nlibrary(ggcorrplot)\r\nlibrary(patchwork)\r\n\r\n## Set up environment----------------\r\nrm(list = ls())\r\n# setwd(dirname(rstudioapi::getActiveDocumentContext()$path))\r\noptions(warn = 0)\r\n\r\nmytheme <- function() {\r\n  list(\r\n    theme_minimal(),\r\n    theme(\r\n      plot.title = element_text(size = 16),\r\n      axis.title = element_text(size = 12),\r\n      axis.text = element_text(size = 10),\r\n      legend.text = element_text(size = 10),\r\n      legend.title = element_text(size = 12)\r\n    )\r\n  )\r\n}\r\n\r\n## Read data---------\r\n\r\nadae <- read.csv(\"https://raw.githubusercontent.com/VIS-SIG/Wonderful-Wednesdays/refs/heads/master/data/2025/2025-01-08/DummyAEData.csv\") %>%\r\n  select(-X) %>%\r\n  filter(SAFFL == \"Y\")\r\n\r\n# total\r\nlength(unique(adae$USUBJID))\r\nsummary(adae)\r\nhead(adae)\r\n\r\n## Summary table------------\r\n\r\nadae_n_arm <- adae %>%\r\n  group_by(ARMCD) %>%\r\n  summarise(n_arm = n_distinct(USUBJID))\r\n\r\nadae_n_soc <- adae %>%\r\n  group_by(AESOC) %>%\r\n  summarise(n_soc = n_distinct(USUBJID))\r\n\r\nadae_n_pt <- adae %>%\r\n  group_by(AETERM) %>%\r\n  summarise(n_pt = n_distinct(USUBJID))\r\n\r\n## Visual-----------\r\n\r\n### SOC by PT-------------------\r\n(adae_soc_pt <- adae %>%\r\n  group_by(ARMCD, AESOC, AETERM) %>%\r\n  summarise(n_pt = n_distinct(USUBJID)) %>%\r\n  right_join(adae_n_arm) %>%\r\n  group_by(AETERM) %>%\r\n  mutate(n_all = sum(n_pt)) %>%\r\n  ungroup() %>%\r\n  mutate(n_pt = ifelse(ARMCD == \"ARM B\", -n_pt, n_pt)))\r\n\r\n\r\n### tte--------------\r\n\r\n(adae_tte <- adae %>%\r\n  select(USUBJID, ARMCD, AESOC, AETERM, AETOXGR, ASTDY, AENDY) %>%\r\n  arrange(USUBJID, ARMCD, AESOC, AETERM, AETOXGR) %>%\r\n  mutate(event = 1))\r\n\r\nadae_tte_counts <- adae_tte %>%\r\n  group_by(AESOC, ARMCD) %>%\r\n  summarise(n = n()) %>%\r\n  ungroup()\r\n\r\nadae_tte_g3_counts <- adae_tte %>%\r\n  filter(AETOXGR >= 3) %>%\r\n  group_by(AESOC, ARMCD) %>%\r\n  summarise(n = n()) %>%\r\n  ungroup()\r\n\r\n(adae_tte_subject <-\r\n  adae_tte %>%\r\n  group_by(ARMCD, USUBJID) %>%\r\n  mutate(\r\n    any_AE = ifelse(n() > 0, 1, 0),\r\n    time_to_onset_any_AE = ifelse(n() > 0, min(ASTDY), Inf),\r\n    time_to_stop_any_AE = ifelse(n() > 0, max(ASTDY), Inf)\r\n  ) %>%\r\n  group_by(AESOC, ARMCD) %>%\r\n  mutate(n = n_distinct(USUBJID)) %>%\r\n  ungroup())\r\n\r\n(p1 <- adae_tte %>%\r\n  ggplot() +\r\n  geom_violin(aes(x = AESOC, y = ASTDY, fill = ARMCD),\r\n    scale = \"count\"\r\n  ) +\r\n  labs(\r\n    title = \"AE onset by SOC\",\r\n    x = \"SOC\",\r\n    y = \"Time from first dose (days)\"\r\n  ) +\r\n  geom_text(\r\n    data = adae_tte_counts,\r\n    aes(\r\n      x = AESOC, y = -40, label = paste0(\"N=\", n),\r\n      group = ARMCD\r\n    ),\r\n    position = position_dodge(width = 0.75),\r\n    size = 3\r\n  ) +\r\n  scale_y_continuous(limits = c(-50, 1200)) +\r\n  mytheme() +\r\n  coord_flip())\r\n\r\n(p2 <- adae_tte %>%\r\n  ggplot() +\r\n  geom_violin(aes(x = AESOC, y = AENDY - ASTDY + 1, fill = ARMCD),\r\n    scale = \"count\"\r\n  ) +\r\n  labs(\r\n    title = \"AE resolution by SOC\",\r\n    x = \"SOC\",\r\n    y = \"Time since AE onset (days)\"\r\n  ) +\r\n  geom_text(\r\n    data = adae_tte_counts,\r\n    aes(\r\n      x = AESOC, y = -40, label = paste0(\"N=\", n),\r\n      group = ARMCD\r\n    ),\r\n    position = position_dodge(width = 0.75),\r\n    size = 3\r\n  ) +\r\n  scale_y_continuous(limits = c(-50, 1200)) +\r\n  mytheme() +\r\n  coord_flip())\r\n\r\n(p3 <- adae_tte %>%\r\n  filter(AETOXGR >= 3) %>%\r\n  ggplot() +\r\n  geom_violin(aes(x = AESOC, y = ASTDY, fill = ARMCD),\r\n    scale = \"count\"\r\n  ) +\r\n  labs(\r\n    title = \"AE onset by SOC (Grade >=3)\",\r\n    x = \"SOC\",\r\n    y = \"Time from first dose (days)\"\r\n  ) +\r\n  geom_text(\r\n    data = adae_tte_g3_counts,\r\n    aes(\r\n      x = AESOC, y = -40, label = paste0(\"N=\", n),\r\n      group = ARMCD\r\n    ),\r\n    position = position_dodge(width = 0.75),\r\n    size = 3\r\n  ) +\r\n  scale_y_continuous(limits = c(-50, 1200)) +\r\n  mytheme() +\r\n  coord_flip())\r\n\r\n(p4 <- adae_tte %>%\r\n  filter(AETOXGR >= 3) %>%\r\n  ggplot() +\r\n  geom_violin(aes(x = AESOC, y = AENDY - ASTDY + 1, fill = ARMCD),\r\n    scale = \"count\"\r\n  ) +\r\n  labs(\r\n    title = \"AE resolution by SOC (Grade >=3)\",\r\n    x = \"SOC\",\r\n    y = \"Time since AE onset (days)\"\r\n  ) +\r\n  geom_text(\r\n    data = adae_tte_g3_counts,\r\n    aes(\r\n      x = AESOC, y = -40, label = paste0(\"N=\", n),\r\n      group = ARMCD\r\n    ),\r\n    position = position_dodge(width = 0.75),\r\n    size = 3\r\n  ) +\r\n  scale_y_continuous(limits = c(-50, 1200)) +\r\n  mytheme() +\r\n  coord_flip())\r\n\r\n(combined_p <- (p1 | p2) / (p3 | p4) + plot_layout(guides = \"collect\"))\r\n\r\ntiff(\"adae_tte.tiff\", units = \"in\", width = 13, height = 7, res = 300)\r\nprint(combined_p)\r\ndev.off()\r\n\r\n\r\nBack to blog\r\n\r\nExample 2. Co-occurence\r\n\r\n\r\n##############################################\r\n# Author: Wei Quan\r\n# Latest Update: 04 Feb 2025\r\n# PSI Visualization SIG Wonderful Wednesday: Adverse events\r\n# Sample ADAE dataset generated using teal.data package in R.\r\n# Data limited to two treatments (Drug X, Placebo),although subjects may switch between the two\r\n# Challenge: produce a visualization using this sample ADAE dataset The challenge is open-ended,\r\n# and you can choose a feature of the data to focus on.\r\n# Possible ideas:\r\n# Investigate the co-occurrence of adverse events (the October 2020 webinar might provide some inspiration!)\r\n# or ‘clusters’ of adverse events – do certain groups of adverse events tend to occur alongside one another or at certain times\r\n# Investigate the time to a given event or adverse event profiles over time\r\n# Explore the hierarchical nature of adverse events (MedDRA terms)\r\n###############################################\r\n\r\n## Load the packages -----------------\r\nlibrary(tidyverse)\r\nlibrary(survival)\r\nlibrary(ggcorrplot)\r\nlibrary(patchwork)\r\n\r\n## Set up environment----------------\r\nrm(list = ls())\r\n# setwd(dirname(rstudioapi::getActiveDocumentContext()$path))\r\noptions(warn = 0)\r\n\r\nmytheme <- function() {\r\n  list(\r\n    theme_minimal(),\r\n    theme(\r\n      plot.title = element_text(size = 16),\r\n      axis.title = element_text(size = 12),\r\n      axis.text = element_text(size = 10),\r\n      legend.text = element_text(size = 10),\r\n      legend.title = element_text(size = 12)\r\n    )\r\n  )\r\n}\r\n\r\n## Read data---------\r\n\r\nadae <- read.csv(\"https://raw.githubusercontent.com/VIS-SIG/Wonderful-Wednesdays/refs/heads/master/data/2025/2025-01-08/DummyAEData.csv\") %>%\r\n  select(-X) %>%\r\n  filter(SAFFL == \"Y\")\r\n\r\n# total\r\nlength(unique(adae$USUBJID))\r\nsummary(adae)\r\nhead(adae)\r\n\r\n## Summary table------------\r\n\r\nadae_n_arm <- adae %>%\r\n  group_by(ARMCD) %>%\r\n  summarise(n_arm = n_distinct(USUBJID))\r\n\r\nadae_n_soc <- adae %>%\r\n  group_by(AESOC) %>%\r\n  summarise(n_soc = n_distinct(USUBJID))\r\n\r\nadae_n_pt <- adae %>%\r\n  group_by(AETERM) %>%\r\n  summarise(n_pt = n_distinct(USUBJID))\r\n\r\n## Visual-----------\r\n\r\n### SOC by PT-------------------\r\n(adae_soc_pt <- adae %>%\r\n  group_by(ARMCD, AESOC, AETERM) %>%\r\n  summarise(n_pt = n_distinct(USUBJID)) %>%\r\n  right_join(adae_n_arm) %>%\r\n  group_by(AETERM) %>%\r\n  mutate(n_all = sum(n_pt)) %>%\r\n  ungroup() %>%\r\n  mutate(n_pt = ifelse(ARMCD == \"ARM B\", -n_pt, n_pt)))\r\n\r\n## visual\r\n\r\n(p_pt <- adae_soc_pt %>%\r\n  ggplot(aes(x = reorder(AETERM, abs(n_pt), decreasing = T), y = n_pt)) +\r\n  geom_bar(\r\n    stat = \"identity\", width = 0.5,\r\n    aes(fill = AESOC, group = ARMCD, color = ARMCD)\r\n  ) +\r\n  scale_fill_brewer(palette = \"Greens\") +\r\n  scale_color_brewer(palette = \"Paired\") +\r\n  labs(\r\n    title = \"Number of patients with PT\",\r\n    x = \"\",\r\n    y = \"\"\r\n  ) +\r\n  scale_y_continuous(labels = abs) +\r\n  geom_hline(yintercept = 0, color = \"grey20\", size = 0.8) +\r\n  mytheme() +\r\n  theme(axis.text.x = element_text(angle = 60, vjust = 0.5, hjust = 0.5)))\r\n\r\ntiff(\"adae_pt.tiff\", units = \"in\", width = 8, height = 5, res = 150)\r\nprint(p_pt)\r\ndev.off()\r\n\r\n### Co-occurrence --------------------------\r\n\r\nadae_dummy <- fastDummies::dummy_cols(adae, select_columns = \"AETERM\") %>%\r\n  select(ARMCD, USUBJID, starts_with(\"AETERM_trm\")) %>%\r\n  group_by(ARMCD, USUBJID) %>%\r\n  summarise(across(everything(), sum)) %>%\r\n  ungroup()\r\n\r\ncor <- round(cor(adae_dummy %>% select(starts_with(\"AETERM_trm\")),\r\n  method = \"spearman\"\r\n), 2)\r\n\r\n(p_cor <- ggcorrplot(cor,\r\n  method = \"circle\",\r\n  type = \"full\",\r\n  lab = \"TRUE\",\r\n  outline.color = \"white\",\r\n  colors = c(\"black\", \"white\", \"red\"),\r\n  lab_size = 3,\r\n  show.legend = F\r\n) + mytheme() +\r\n  theme(axis.text.x = element_text(angle = 60, vjust = 1, hjust = 1)) +\r\n  labs(\r\n    title = \"AE Co-occurence at Patient Level\",\r\n    x = \"\",\r\n    y = \"\",\r\n    caption = \"Correlation is calculated at patient level based on number of events, using Spearman's correlation matrix.\"\r\n  ))\r\n\r\n(p_pt_2 <- adae_soc_pt %>%\r\n  ggplot(aes(x = AETERM, y = n_pt)) +\r\n  geom_bar(\r\n    stat = \"identity\", width = 0.5,\r\n    aes(fill = AESOC, group = ARMCD)\r\n  ) +\r\n  scale_fill_brewer(palette = \"Set2\") +\r\n  labs(\r\n    title = \"Number of patients with PT\",\r\n    x = \"\",\r\n    y = \"Arm B - Arm A\"\r\n  ) +\r\n  scale_y_continuous(labels = abs) +\r\n  geom_hline(yintercept = 0, color = \"grey20\", size = 0.8) +\r\n  mytheme() +\r\n  theme(\r\n    axis.text.x = element_blank(),\r\n    axis.ticks.x = element_blank()\r\n  ))\r\n\r\n(combined_p_cor <- (p_pt_2 / p_cor))\r\n\r\ntiff(\"adae_cor.tiff\", units = \"in\", width = 10, height = 10, res = 300)\r\nprint(combined_p_cor)\r\ndev.off()\r\n\r\n\r\nBack to blog\r\nPreparation for example 3 to 10\r\n\r\n\r\n#################################\r\n# Author: Thomas Weissensteiner #\r\n#################################\r\n\r\n# - chunk libraries_and_data\r\n\r\n## Load R libraries and the data file                             - #\r\n\r\nlibrary(dplyr)        # version 1.1.4  # general grammar\r\nlibrary(purrr)        # version 1.0.2  # set_names, list_rbind, reduce\r\nlibrary(tidyr)        # version 1.3.1  # pivot_longer, pivot_wider\r\nlibrary(tibble)       # version 3.2.1  # deframe\r\nlibrary(purrr)        # version 1.0.2  # list_rbind\r\n\r\nlibrary(ggplot2)      # version 3.4.0  # graphs\r\nlibrary(ggbeeswarm)   # version 0.7.2  # geom_beeswarm\r\nlibrary(ggh4x)        # version 0.3.0  # facet_grid2\r\nlibrary(ggVennDiagram)# version 1.5.2  # ggVennDiagram\r\n\r\nlibrary(patchwork)    # version 1.3.0  # assembly of interactive plots, synchronous response\r\n\r\nlibrary(kableExtra)   # rendering tables in HTML format\r\n\r\ndummyAEData <- read.csv(\"https://raw.githubusercontent.com/VIS-SIG/Wonderful-Wednesdays/refs/heads/master/data/2025/2025-01-08/DummyAEData.csv\")\r\n\r\n\r\n\r\n\r\n# - chunk data_check\r\n# - Required: R libraries, dummyAEData (chunk libraries_and_data)\r\n\r\n# - This chunk reproduces my initial checks for non-informative and redundant data columns, and the following cleaning and transformation steps\r\n# - The results is a new data frame dummyAEData_ed (edited) which is required for the generation of the figures below\r\n# - Instead of this chunk, you can run chunk_dataEd below which generates dummyAEData_ed in a more concise way, without checks on intermediate results \r\n\r\ndummyAEData %>% dim()\r\n# [1] 599  93            Original data set has 599 rows and 93 columns\r\n\r\n## Remove columns that do not differentiate any patient groups\r\n\r\n# Identify columns containing duplicated information (the same values in same rows)\r\nsingleValCols <- \r\n  dummyAEData %>%\r\n    apply(., 2, function(x) unique(x) %>% \r\n    length) %>% .[as.numeric(.)==1] %>% names\r\n# singleValCols\r\n# [1] \"STUDYID\"  \"AGEU\"     \"ITTFL\"    \"SAFFL\"    \"TRTEMFL\"  \"SMQ02NAM\" \"SMQ02SC\" \r\n\r\n# Identify columns comprised of NAs \r\nnaCols <- \r\n  dummyAEData %>% \r\n    apply(., 2, function(x) unlist(x) %>% {!is.na(.)} %>% \r\n    sum == 0) %>% .[as.numeric(.)==1] %>% names\r\n# naCols\r\n#[1] \"SMQ02NAM\" \"SMQ02SC\" \r\n\r\n# Start generating a data subset with \"interesting\" columns only\r\ndummyAEData_ed <- \r\n  dummyAEData %>% \r\n    select(\r\n      !all_of(c(singleValCols, naCols) ) \r\n      )\r\n\r\n# Remove other columns with no patient-specific information\r\ndummyAEData_ed <-\r\n  dummyAEData_ed %>% \r\n  select(!X)\r\n\r\n\r\n## Remove columns with redundant information\r\n\r\n# Function for flagging redundant columns\r\ncheck_redundant_columns <- \r\n  function(data) {\r\n    pairs <- combn(names(data), 2) %>% t\r\n    redundant <- \r\n      combn(names(data), 2, function(cols) {\r\n        col1 <- data[[cols[1]]]\r\n        col2 <- data[[cols[2]]]\r\n        if (is.factor(col1)) col1 <- as.character(col1)        # converts variables that are factors to character\r\n        if (is.factor(col2)) col2 <- as.character(col2)\r\n        if (is.numeric(col1) && is.numeric(col2)) {\r\n          all(\r\n            (is.na(col1) & is.na(col2)) |                      # both NA or floating point near equality for numeric columns\r\n            (!is.na(col1) & !is.na(col2) & dplyr::near(col1, col2)) \r\n            )\r\n          } else {\r\n          all(\r\n            (is.na(col1) & is.na(col2)) |                      # both NA or exact equality for non-numeric columns\r\n            (!is.na(col1) & !is.na(col2) & col1 == col2)\r\n          )\r\n        }\r\n      }\r\n    )\r\n    data.frame(Pairs = pairs, Redundant = redundant) %>% \r\n    filter(Redundant== TRUE) %>% \r\n    filter(Pairs.1 %in% setdiff(.$Pairs.1, .$Pairs.2))  %>%  \r\n    with(., table(Pairs.1, Pairs.2)) %>% \r\n    { lapply(1:nrow(.), function(i) \r\n      c(rownames(.)[i],\r\n      colnames(.)[.[i,] == 1]\r\n      )\r\n    )\r\n    } %>% unname()\r\n  }\r\n# Note: if no redundant columns are found this function will generate: \r\n# Error in `[.default`(., i, ) : subscript out of bounds\r\n# Called from: NextMethod()\r\n\r\n# Check for identical columns (will not identify redundant columns if values are coded differently)\r\nredundant_columns <- dummyAEData_ed %>% check_redundant_columns() \r\n#redundant_columns\r\n#[[1]][1] \"ARM\"    \"ACTARM\" \"TRT01A\" \"TRT01P\"\r\n#[[2]][1] \"ARMCD\"    \"ACTARMCD\"\r\n#[[3]][1] \"ASEQ\"  \"AESEQ\"\r\n#[[4]][1] \"EOSSTT\" \"EOTSTT\"\r\n#[[5]][1] \"TRT01EDTM\" \"AP01EDTM\"  \"AP02SDTM\"  \"TRT02SDTM\"\r\n#[[6]][1] \"TRTEDTM\"   \"AP02EDTM\"  \"TRT02EDTM\"\r\n#[[7]][1] \"TRTSDTM\"   \"AP01SDTM\"  \"TRT01SDTM\"\r\n\r\n\r\n# Selection of non-redundant variables\r\n# TRT01A: actual initial treatment (other variables refer to planned treatment)\r\n# ACTARMCD: \"a value for an Actual Arm Code (ACTARMCD) variable is expected to be equal to a value of an Arm Code (ARMCD) variable\"(FDAC197 / SD2236)\r\n# AESEQ: name indicates relation to AEs, which we are specifically interested in\r\n# EOTSTT: end of treatment and end of study status seem identical in this data set, kept name referring to treatment\r\n# TRTSDTM: datetime of First Exposure to Treatment\r\n# TRT01EDTM: datetime of Last Exposure in Period 01 (identical to TRT02SDTM: Datetime of First Exposure to Treatment in Period 02)\r\n# TRT02EDTM: datetime of Last Exposure in Period 02\r\nselected_columns <- c(\"TRT01A\", \"ACTARMCD\", \"AESEQ\", \"EOTSTT\", \"TRTSDTM\", \"TRT01EDTM\", \"TRT02EDTM\")\r\n\r\ndummyAEData_ed <- \r\n  dummyAEData_ed %>% \r\n  select(\r\n    !setdiff(\r\n      unlist(redundant_columns), \r\n      selected_columns\r\n      ) \r\n    )\r\n\r\n\r\n## Remove columns with redundant information masked by different codings\r\n\r\n# Inspect adverse event variables\r\n# dummyAEData_ed %>% .[ ,grep(\"AE\", names(.))] %>% head()\r\n\r\n# Unify coding of potentially redundant variables\r\ndummyAEData_ed <- \r\n  dummyAEData_ed %>% \r\n  mutate(\r\n    AETERM = gsub(\"trm \", \"\", AETERM),                 # adverse event variables\r\n    AELLT = gsub(\"llt \", \"\", AELLT),\r\n    AEDECOD = gsub(\"dcd \", \"\", AEDECOD),\r\n    AEHLT = gsub(\"hlt \", \"\", AEHLT),\r\n    AEHLGT = gsub(\"hlgt \", \"\", AEHLGT),\r\n    AEBODSYS = gsub(\"cl \", \"\", AEBODSYS),\r\n    AESOC = gsub(\"cl \", \"\", AESOC),\r\n    ACTARMCD = case_when(                              # treatment group\r\n      ACTARMCD == \"ARM A\" ~ \"Drug X\",\r\n      ACTARMCD == \"ARM B\" ~ \"Placebo\"\r\n      ),\r\n    across(c(TRT01A, TRT02P, TRT02A), \r\n      function(x) gsub(\"^[AB]: \", \"\", x)\r\n      ),\r\n    SMQ01SC = case_when(\r\n      SMQ01NAM == \"C.1.1.1.3/B.2.2.3.1 AESI\" ~ \"C.1.1.1.3/B.2.2.3.1 AESI\",\r\n      is.na(SMQ01NAM) ~ NA\r\n      )\r\n    )\r\n\r\n# dummyAEData_ed %>% check_redundant_columns()\r\n#[1]][1] \"ACTARMCD\" \"TRT01A\"  \r\n#[[2]][1] \"AETERM\"  \"AEDECOD\" \"AELLT\"\r\n#[[3]][1] \"SMQ01NAM\" \"SMQ01SC\"\r\n\r\n# Selection of non-redundant variables, merging of 1st and 2nd treatment variables into a single cross-over group variable\r\n# TRT01A: Actual initial treatment \r\n# AEDECOD: also called preferred term, restricted to a single medical concept\r\ndummyAEData_ed <- \r\n  dummyAEData_ed %>% \r\n  select(!c(ACTARMCD, AETERM, AELLT, SMQ01SC) ) %>% \r\n  rowwise() %>% \r\n  mutate(\r\n    Group = paste(TRT01A, \"-\", TRT02A),\r\n    .keep = \"unused\"\r\n    )\r\n\r\n# Remove additional columns with information included in other columns\r\ndummyAEData_ed <- \r\n  dummyAEData_ed %>% \r\n  select(!c(USUBJID, INVID, INVNAM) )    # covered by SITEID and SUBJID \r\n\r\n\r\n## Generate some categorical variables and ordered factors\r\n\r\ndummyAEData_ed <- \r\n  dummyAEData_ed %>% \r\n  mutate(\r\n    AESEV = factor(                                    \r\n      AESEV, levels = c(\"MILD\", \"MODERATE\", \"SEVERE\")\r\n      ),\r\n    BMRKR2 = factor(\r\n      BMRKR2, levels = c(\"HIGH\", \"MEDIUM\", \"LOW\")\r\n      ),\r\n    Group = factor(\r\n      Group, \r\n      levels = c(\r\n        \"Placebo - Placebo\", \r\n        \"Drug X - Placebo\", \r\n        \"Placebo - Drug X\", \r\n        \"Drug X - Drug X\"\r\n        )\r\n      ),\r\n    AEREL = case_when (\r\n      AEREL == \"Y\" ~ \"Drug-related\", \r\n      AEREL == \"N\" ~ \"Not drug-related\"\r\n      ),\r\n    AEREL = factor(\r\n      AEREL, \r\n      levels = c(\"Drug-related\", \"Not drug-related\")\r\n      ),\r\n    AESER = factor(\r\n      AESER, \r\n      levels = c(\"Y\", \"N\")\r\n      ),\r\n    AESEV_2 = case_when(\r\n      AESEV == \"SEVERE\" ~ \"Severe\",\r\n      AESEV %in% c(\"MILD\", \"MODERATE\") ~ \"Mild-moderate\"\r\n      ),\r\n      .keep = \"unused\",\r\n    AESEV_2 = factor(AESEV_2, \r\n      levels = c(\"Severe\", \"Mild-moderate\")\r\n      ),\r\n    SEX = factor(\r\n      SEX, \r\n      levels = c(\"F\", \"M\")),\r\n    RACE = case_when(\r\n      RACE == \"NATIVE HAWAIIAN OR OTHER PACIFIC ISLANDER\" ~ \"Pacific Ilander\",\r\n      RACE == \"AMERICAN INDIAN OR ALASKA NATIVE\" ~ \"American Indian\",\r\n      RACE == \"BLACK OR AFRICAN AMERICAN\" ~ \"Black\",\r\n      RACE == \"WHITE\" ~ \"White\",\r\n      RACE == \"ASIAN\" ~ \"Asian\"\r\n      ),\r\n    RACE = factor(\r\n      RACE, \r\n      levels = c(                                                  # ordered by number of patients\r\n        \"Pacific Ilander\",\r\n        \"American Indian\",\r\n        \"Black\",\r\n        \"White\",\r\n        \"Asian\")\r\n      )\r\n    )\r\n\r\n\r\n## Some initial summaries and observations\r\n\r\n# Observations (rows) by treatment groups\r\ndummyAEData_ed %>% group_by(Group,  TRT02P) %>% summarise(n())\r\n# A tibble: 8 × 4\r\n## Groups:   TRT01A, TRT02P [4]\r\n#  TRT01A  TRT02P  TRT02A  `n()`\r\n#  <chr>   <chr>   <chr>   <int>\r\n#1 Drug X  Drug X  Drug X     53\r\n#2 Drug X  Drug X  Placebo    93\r\n#3 Drug X  Placebo Drug X     99\r\n#4 Drug X  Placebo Placebo    66\r\n#5 Placebo Drug X  Drug X     76\r\n#6 Placebo Drug X  Placebo    65\r\n#7 Placebo Placebo Drug X     79\r\n#8 Placebo Placebo Placebo    68\r\n# Possible scenario:\r\n# - TRT01A: actual treatment for the blinded placebo-controlled period\r\n# - TRT02P: planned treatment of the subsequent open label period\r\n# - TRT02A: actual subsequent treatment\r\n\r\n# Numbers of unique types of adverse events for each level of the term hierarchy (increasing order)\r\ndummyAEData_ed %>% \r\n  data.frame %>% \r\n  summarize (across(c(AEDECOD, AEHLT, AEHLGT, AEBODSYS, AESOC), function (x) unique(x) %>% length ))\r\n#  AEDECOD AEHLT AEHLGT AEBODSYS AESOC\r\n#       10     9      8        7     4\r\n\r\ndummyAEData_ed %>% group_by(AEDECOD, AEHLT, AEHLGT, AEBODSYS, AESOC) %>% summarize (n())\r\n# A tibble: 10 × 6\r\n# Groups:   AEDECOD, AEHLT, AEHLGT, AEBODSYS [10]\r\n#   AEDECOD   AEHLT   AEHLGT AEBODSYS AESOC `n()`\r\n#   <chr>     <chr>   <chr>  <chr>    <chr> <int>\r\n# 1 A.1.1.1.1 A.1.1.1 A.1.1  A.1      A        65\r\n# 2 A.1.1.1.2 A.1.1.1 A.1.1  A.1      A        65\r\n# 3 B.1.1.1.1 B.1.1.1 B.1.1  B.1      B        48\r\n# 4 B.2.1.2.1 B.2.1.2 B.2.1  B.2      B        62\r\n# 5 B.2.2.3.1 B.2.2.3 B.2.2  B.2      B        68\r\n# 6 C.1.1.1.3 C.1.1.1 C.1.1  C.1      C        63\r\n# 7 C.2.1.2.1 C.2.1.2 C.2.1  C.2      C        43\r\n# 8 D.1.1.1.1 D.1.1.1 D.1.1  D.1      D        53\r\n# 9 D.1.1.4.2 D.1.1.4 D.1.1  D.1      D        66\r\n#10 D.2.1.5.3 D.2.1.5 D.2.1  D.2      D        66\r\n\r\n# Severe vs. serious AEs\r\ndummyAEData_ed %>% group_by(AESEV, AESER) %>% summarise (N=n())\r\n# Groups:   AESEV [3]\r\n#  AESEV    AESER     N\r\n#  <fct>    <chr> <int>\r\n#1 MILD     N       131\r\n#2 MILD     Y        68\r\n#3 MODERATE N       171\r\n#4 MODERATE Y        65\r\n#5 SEVERE   N        63\r\n#6 SEVERE   Y       101\r\n\r\n# Deaths\r\n\r\n# DTHADY: relative time of death\r\n\r\n# Look up columns with with information on patient death\r\n\r\ndummyAEData_ed %>% .[ ,grep(\"DTH\", names(.))] %>% head\r\n\r\n# DTHFL, ADTHAUT, DTHCAUS, DTHCAT are redundant when filtered for DTHCAT = NA or DTHFL == \"N\"\r\ndummyAEData_ed %>% \r\n    select(DTHFL, ADTHAUT, DTHCAUS, DTHCAT) %>% \r\n    filter(is.na(DTHCAT)) %>% \r\n    mutate(DTHFL = case_when(DTHFL == \"N\" ~ NA) ) %>% \r\n    check_redundant_columns() \r\n#[[1]][1] \"DTHFL\"   \"ADTHAUT\" \"DTHCAT\"  \"DTHCAUS\"\r\n\r\ndummyAEData_ed %>% \r\n  select(DTHFL, ADTHAUT, DTHCAUS, DTHCAT) %>% \r\n  filter(DTHFL == \"N\" ) %>% \r\n  mutate(DTHFL = case_when(DTHFL == \"N\" ~ NA) ) %>% \r\n  check_redundant_columns()\r\n#[[1]][1] \"DTHFL\"   \"ADTHAUT\" \"DTHCAT\"  \"DTHCAUS\"\r\n\r\n# AETOXGR 5 is *not* defined by patient death: maximum toxicity of patients' AEs in DTHCAUS = ADVERSE EVENT can be as low as 1:\r\ndummyAEData_ed %>% select(SUBJID, AETOXGR, DTHFL, ADTHAUT, DTHCAUS, DTHCAT) %>% filter (DTHCAUS == \"ADVERSE EVENT\") %>% group_by(SUBJID) %>% slice(which.max(AETOXGR)) %>% arrange(AETOXGR) \r\n# A tibble: 9 × 6\r\n# Groups:   SUBJID [9]\r\n#  SUBJID AETOXGR DTHFL ADTHAUT DTHCAUS       DTHCAT       \r\n#  <chr>    <int> <chr> <chr>   <chr>         <chr>        \r\n#1 id-386       1 Y     Yes     ADVERSE EVENT ADVERSE EVENT\r\n#2 id-134       3 Y     Yes     ADVERSE EVENT ADVERSE EVENT\r\n#3 id-128       4 Y     Yes     ADVERSE EVENT ADVERSE EVENT\r\n#4 id-62        4 Y     Yes     ADVERSE EVENT ADVERSE EVENT\r\n#5 id-126       5 Y     Yes     ADVERSE EVENT ADVERSE EVENT\r\n#6 id-139       5 Y     Yes     ADVERSE EVENT ADVERSE EVENT\r\n#7 id-235       5 Y     Yes     ADVERSE EVENT ADVERSE EVENT\r\n#8 id-319       5 Y     Yes     ADVERSE EVENT ADVERSE EVENT\r\n#9 id-346       5 Y     Yes     ADVERSE EVENT ADVERSE EVENT\r\n# Same result with filter (DTHCAT == \"ADVERSE EVENT\" )\r\n\r\n\r\n\r\n\r\n# - chunk dataEd\r\n# - Required: R libraries, dummyAEData (chunk libraries_and_data)\r\n\r\n# - This chunk generates dummyAEData_ed (edited) in a more concise way than data_check\r\n# - dummyAEData_ed is required for the generation of all of the following figures\r\n\r\n\r\n## Remove columns without patient-specific information, comprised of NA values, or containing duplicated information (the same values in same rows)\r\n\r\nnaCols <- \r\n  dummyAEData %>% \r\n    apply(., 2, function(x) unlist(x) %>% {!is.na(.)} %>% \r\n    sum == 0) %>% .[as.numeric(.)==1] %>% names\r\n\r\nsingleValCols <- \r\n  dummyAEData %>%\r\n    apply(., 2, function(x) unique(x) %>% \r\n    length) %>% .[as.numeric(.)==1] %>% names\r\n\r\ndummyAEData_ed <- \r\n  dummyAEData %>% \r\n    select(\r\n      !X &\r\n      !all_of(c(singleValCols, naCols) )\r\n      )\r\n\r\n\r\n## Remove columns with redundant information\r\n\r\ndummyAEData_ed <- \r\n  dummyAEData_ed %>% \r\n  select(!c(\r\n    ARM, ACTARM, ARMCD, ACTARMCD, \r\n    AETERM, AELLT, SMQ01SC,\r\n    TRT01P, ASEQ, EOSSTT, \r\n    AP01EDTM, AP02SDTM, \r\n    TRT02SDTM, TRTEDTM, \r\n    AP02EDTM, AP01SDTM, TRT01SDTM, \r\n    USUBJID, INVID, INVNAM) \r\n    )\r\n\r\n\r\n# Unify coding\r\ndummyAEData_ed <- \r\n  dummyAEData_ed %>% \r\n  mutate(\r\n    AEDECOD = gsub(\"dcd \", \"\", AEDECOD),\r\n    AEHLT = gsub(\"hlt \", \"\", AEHLT),\r\n    AEHLGT = gsub(\"hlgt \", \"\", AEHLGT),\r\n    AEBODSYS = gsub(\"cl \", \"\", AEBODSYS),\r\n    AESOC = gsub(\"cl \", \"\", AESOC),\r\n    across(c(TRT01A, TRT02P, TRT02A), \r\n      function(x) gsub(\"^[AB]: \", \"\", x)\r\n      ),\r\n    SMQ01SC = case_when(\r\n      SMQ01NAM == \"C.1.1.1.3/B.2.2.3.1 AESI\" ~ \"C.1.1.1.3/B.2.2.3.1 AESI\",\r\n      is.na(SMQ01NAM) ~ NA\r\n      )\r\n    ) %>% \r\n  rowwise() %>% \r\n  mutate(\r\n    Group = paste(TRT01A, \"-\", TRT02A),\r\n    .keep = \"unused\"\r\n    )\r\n\r\n\r\n## Generate some categorical variables and ordered factors\r\n\r\ndummyAEData_ed <- \r\n  dummyAEData_ed %>% \r\n  mutate(\r\n    AESEV = factor(                                    \r\n      AESEV, levels = c(\"MILD\", \"MODERATE\", \"SEVERE\")\r\n      ),\r\n    BMRKR2 = factor(\r\n      BMRKR2, levels = c(\"HIGH\", \"MEDIUM\", \"LOW\")\r\n      ),\r\n    Group = factor(\r\n      Group, \r\n      levels = c(\r\n        \"Placebo - Placebo\", \"Placebo - Drug X\", \r\n        \"Drug X - Placebo\", \"Drug X - Drug X\"\r\n        )\r\n      ),\r\n    AEREL = case_when (\r\n      AEREL == \"Y\" ~ \"Drug-related\", \r\n      AEREL == \"N\" ~ \"Not drug-related\"\r\n      ),\r\n    AEREL = factor(\r\n      AEREL, \r\n      levels = c(\"Drug-related\", \"Not drug-related\")\r\n      ),\r\n    AESER = factor(\r\n      AESER, \r\n      levels = c(\"Y\", \"N\")\r\n      ),\r\n    AESEV_2 = case_when(\r\n      AESEV == \"SEVERE\" ~ \"Severe\",\r\n      AESEV %in% c(\"MILD\", \"MODERATE\") ~ \"Mild-moderate\"\r\n      ),\r\n      .keep = \"unused\",\r\n    AESEV_2 = factor(AESEV_2, \r\n      levels = c(\"Severe\", \"Mild-moderate\")\r\n      ),\r\n    SEX = factor(\r\n      SEX, \r\n      levels = c(\"F\", \"M\")),\r\n    RACE = case_when(\r\n      RACE == \"NATIVE HAWAIIAN OR OTHER PACIFIC ISLANDER\" ~ \"Pacific Ilander\",\r\n      RACE == \"AMERICAN INDIAN OR ALASKA NATIVE\" ~ \"American Indian\",\r\n      RACE == \"BLACK OR AFRICAN AMERICAN\" ~ \"Black\",\r\n      RACE == \"WHITE\" ~ \"White\",\r\n      RACE == \"ASIAN\" ~ \"Asian\"\r\n      ),\r\n    RACE = factor(\r\n      RACE, \r\n      levels = c(                                                  # ordered by number of patients\r\n        \"Pacific Ilander\",\r\n        \"American Indian\",\r\n        \"Black\",\r\n        \"White\",\r\n        \"Asian\")\r\n      )\r\n    )\r\n\r\n\r\n\r\nExample 3. Frequency and severity of drug-related and unrelated adverse events, in different primary organ systems and treatment groups\r\n\r\n\r\n# - Chunk 1\r\n# - Required: * R libraries (chunk libraries_and_data)\r\n# -           * dummyAEData_ed (chunk dataEd)\r\n\r\n## Function for barplots of frequency of drug-related and unrelated adverse events, in different primary organ systems and treatment groups, stacked columns colored by a 4th variable (preferably binary, or visually comparing subgroups might become difficult)\r\n\r\ndrawFacet_allAEs <- \r\n  function(data, AEtype) { \r\n    data %>%   \r\n      select(\r\n        SUBJID, Group, AEREL, AETOXGR, AESOC, \r\n        {{AEtype}}                                # {{}} ensures that the argument AEtype is treated as a column name\r\n        ) %>%    \r\n        group_by(Group, AEREL, AESOC, {{AEtype}}) %>%  \r\n        summarise(N = n()) %>% \r\n        group_by(Group) %>% \r\n        list( ., \r\n          summarise(., N_group = sum(N) )\r\n          ) %>% \r\n        reduce(\r\n          left_join, \r\n          by = \"Group\"\r\n          ) %>% \r\n        mutate(\r\n          Freq = N / N_group, \r\n          Group = paste0(Group, \" (N = \", N_group, \")\")\r\n          ) %>%  \r\n        ggplot(\r\n          aes(\r\n            x = AESOC,\r\n            y = Freq,\r\n            fill = {{AEtype}}\r\n            )    \r\n          ) + \r\n        geom_col() +\r\n        geom_text(\r\n          aes(\r\n            label = Freq %>% \r\n            { paste(\r\n              round(., digits = 2) * 100, \"%\"\r\n              ) }\r\n            ),\r\n          size = 3.5,\r\n          position = position_stack(vjust = 0.5)\r\n          ) +\r\n        facet_grid(\r\n          AEREL ~ Group\r\n          ) +\r\n        scale_y_continuous(\r\n          labels = scales::percent_format(\r\n            accuracy = 1\r\n            )\r\n          ) +\r\n  theme_light() +\r\n  theme(\r\n    plot.margin = unit(\r\n      c(0.5, 0.5, 0.5 ,1.5), \"cm\"\r\n      ),\r\n    plot.title = element_text(\r\n      size = 13,\r\n      hjust = 0.5,\r\n      vjust = 2),\r\n    plot.caption = element_text(\r\n      size = 9,\r\n      hjust = 0,\r\n      vjust = 5),\r\n    strip.background = element_rect(\r\n      fill = \"white\", \r\n      color = \"darkgrey\"\r\n      ), \r\n    strip.text = element_text(\r\n      colour=\"black\",\r\n      size = 10\r\n      ),\r\n    axis.title.y = element_text(\r\n      size = 12,\r\n      vjust = 4\r\n      ),\r\n    axis.title.x = element_text(\r\n      size = 12,\r\n      vjust = -2\r\n      ),\r\n    axis.text = element_text(\r\n      size = 11\r\n      )\r\n    ) \r\n  }\r\n\r\n## Frequency and severity of drug-related and unrelated adverse events, in different primary organ systems and treatment groups\r\n\r\npalette_1 <- c(\"#f0b27a\", \"#aed6f1\")\r\n\r\ndrawFacet_allAEs(dummyAEData_ed, AESEV_2) + \r\nscale_fill_manual(values = palette_1)  +\r\nlabs(\r\n  title = \"Frequency and severity of drug-related and unrelated adverse events in different primary organ systems and treatment groups\",\r\n  caption = \r\n    \"Non-drug related adverse events were never severe\\n\r\n    Organ system D:\\n\r\n    - more often drug-related than non-related adverse events, all severe events were drug-related\\n\r\n  Organ system C: - drug-related events only\\n\r\n  Ogan systems A and B: - only(A) or predominantly (B) non-drug related events, but all drug-related events in B were severe\",\r\n  x = \"Primary organ system class\",\r\n  y = \"Proportion of events in treatment group\",\r\n  fill = \"Adverse event \\nseverity\"    \r\n  ) \r\n\r\n\r\nBack to blog\r\n\r\nExamples 4: Frequency and seriousness of drug-related and unrelated adverse events, in different primary organ systems and treatment groups\r\n\r\n\r\n# - Chunk 2\r\n# - Required: * R libraries (chunk libraries_and_data)\r\n# -           * dummyAEData_ed (chunk dataEd)\r\n# -           * drawFacet_allAEs (chunk_1)\r\n\r\n## Frequency and seriousness of drug-related and unrelated adverse events, in different primary organ systems and treatment groups\r\n\r\n## Frequency and seriousness of drug-related and unrelated adverse events, in different primary organ systems and treatment groups\r\n\r\npalette_2 <- c(\"#e6b0aa\", \"#aab7b8\")\r\n\r\ndrawFacet_allAEs(dummyAEData_ed, AESER) + \r\nscale_fill_manual(values = palette_2)  +\r\nlabs(\r\n  title = \"Frequency and seriousness of drug-related and unrelated adverse events in different primary organ systems and treatment groups\",\r\n  caption = \r\n    \"Organ system D:\\n\r\n    - drug-related events were more frequent among patients receiving placebo, or switched between drug and placebo compared to patients treated with drug only\\n\r\n    - more often drug-related than non-related, all serious adverse events were drug-related\\n\r\n  Organ system C: - non-serious events drug-related events only\\n\r\n  Ogan systems A and B: - only(A) or predominantly (B) non-drug related events, but all drug-related events in B were serious\",\r\n  y = \"Proportion of events in treatment group\",\r\n  x = \"Primary organ system class\",\r\n  fill = \"Serious \\nadverse event\" \r\n  )\r\n\r\n\r\nBack to blog\r\n\r\nExamples 5: Frequency of drug-related and unrelated adverse events, stratified by primary organ system, treatment groups, and patient sex\r\n\r\n\r\n# - Chunk 3\r\n# - Required: * R libraries (chunk libraries_and_data)\r\n# -           * dummyAEData_ed (chunk dataEd)\r\n# -           * drawFacet_allAEs (chunk_1)\r\n\r\n## Frequency and seriousness of drug-related and unrelated adverse events, in different primary organ systems and treatment groups\r\n\r\n## Frequency and seriousness of drug-related and unrelated adverse events, in different primary organ systems and treatment groups\r\n\r\npalette_3 <- c(\"#C52A2A\", \"#4682B4\")\r\n\r\ndrawFacet_allAEs(dummyAEData_ed, SEX) + \r\nscale_fill_manual(\r\n  values = palette_3)  +\r\nlabs(\r\n  title = \"Frequency of drug-related and unrelated adverse events, stratified by primary organ system, treatment groups, and patient sex\",\r\n  y = \"Proportion of events in treatment group\",\r\n  x = \"Primary organ system class\",\r\n  fill = \"SEX\" \r\n  ) \r\n\r\n\r\nBack to blog\r\n\r\nExamples 6: Toxicity grade, affected primary organ system of the most severe adverse event, stratified by treatment, adverse event relation to drug, and patient sex\r\n\r\n\r\n# - Chunk 4\r\n# - Required: * R libraries (chunk libraries_and_data)\r\n# -           * dummyAEData_ed (chunk dataEd)\r\n# -           * palette_3 (chunk 3)\r\n\r\n## Toxicity grade and affected primary organ system of the most severe adverse event in each patient, stratified by treatment, adverse event relation to drug,\r\n## and patient sex\r\n\r\ntheme_facets_1 <- \r\n  function(base_size = 12, base_family = \"\"){\r\n  theme_light(base_size = base_size ) +\r\n  theme(\r\n    strip.background = element_rect(\r\n      fill = \"white\", \r\n      color = \"darkgrey\"\r\n      ), \r\n    strip.text = element_text(\r\n      colour=\"black\",\r\n      size = 10\r\n      ),\r\n    axis.title.y = element_text(\r\n      #size = 12,\r\n      vjust = 4\r\n      ),\r\n    axis.title.x = element_text(\r\n      #size = 12,\r\n      vjust = -2\r\n      ),\r\n    axis.title = element_text(\r\n      #size = 12,\r\n      vjust = -2\r\n      ),\r\n    axis.text = element_text(\r\n      size = 11\r\n      ),\r\n    plot.title = element_text(\r\n      size = 14,\r\n      hjust = 0.5,\r\n      vjust = 5),\r\n    panel.grid.major.y = element_blank()\r\n    )\r\n  }    \r\n\r\np1A <- \r\n  dummyAEData_ed %>%                                        \r\n  select(SUBJID, Group, AEREL, AETOXGR, AESEV, AESOC, SEX) %>% \r\n  group_by(SUBJID, AEREL) %>%                             # select AEs with the highest toxicity grade in both the treatment-related and unrelated category for each patient\r\n  slice(which.max(AETOXGR)) %>%                            \r\n  group_by(SUBJID) %>%                                    # select AEs with the highest toxicity grade for each patient\r\n  slice(which.max(AETOXGR)) %>% \r\n\r\n  group_by(AETOXGR, AESEV, AESOC, SEX) %>% \r\n  summarise(N = n()) %>%\r\n  group_by(AESOC) %>% \r\n  list( ., \r\n    summarise(., \r\n      N_group = sum(N)\r\n      )\r\n    ) %>% \r\n  reduce(\r\n    left_join, \r\n    by = \"AESOC\"\r\n    ) %>% \r\n  mutate(\r\n    Freq = N / N_group) %>% \r\n   mutate(\r\n    AESOC = paste0(AESOC, \" (N = \", N_group, \")\" ),\r\n    AESOC = factor(AESOC),\r\n    AETOXGR = factor(AETOXGR, levels = c(1:5)),\r\n    AESEV = factor(\r\n      AESEV, \r\n      levels = rev(levels(AESEV) )\r\n      )\r\n    ) %>% \r\n \r\n  ggplot(\r\n    aes(\r\n      x = AETOXGR,\r\n      y = Freq,\r\n      fill = SEX\r\n      )\r\n    ) +\r\n  geom_col(alpha = 0.8 ) +\r\n  facet_grid2(\r\n    AESEV ~ AESOC,\r\n    scales = \"free_y\",                                                  # makes facet height proportional to range of AETOXGR, and\r\n    space = \"free\"                                                      # generates custom limits for the AETOXGR scale for each AESEV category\r\n    ) +\r\n  scale_fill_manual(values = c(\"#C52A2A\", \"#4682B4\") ) +\r\n  scale_x_discrete(breaks = levels(factor(dummyAEData_ed$AETOXGR)) ) +   # generates the appropriate custom breaks for each facet\r\n  scale_y_continuous(\r\n    labels = scales::percent_format(\r\n      accuracy = 1\r\n      )\r\n    ) +\r\n  labs(\r\n    title = \"Primary organ system: summary across treatment groups\",\r\n    x = \"Toxicity grade\",\r\n    y = \"Frequency in primary organ system\",\r\n    fill = \"Sex\"\r\n    ) +\r\n  theme_facets_1() +\r\n  theme(\r\n    plot.margin = unit(\r\n      c(0.5, 0.5, 0.5 ,0.5), \"cm\"\r\n      )\r\n    ) +\r\n  coord_flip() \r\n\r\np1B <- \r\n  dummyAEData_ed %>%                                        \r\n  select(SUBJID, Group, AEREL, AETOXGR, AESOC, SEX) %>% \r\n  group_by(SUBJID, AEREL) %>%                             # select AEs with the highest toxicity grade in both the treatment-related and unrelated category for each patient\r\n  slice(which.max(AETOXGR)) %>%                            \r\n  group_by(SUBJID) %>%                                    # select AEs with the highest toxicity grade for each patient\r\n  slice(which.max(AETOXGR)) %>% \r\n  group_by(Group) %>%                                      # add group totals\r\n  list( ., summarise(., N_group = n())) %>% \r\n  reduce(left_join, by = \"Group\") %>% \r\n  mutate(\r\n    Group = paste0(Group, \" (N = \", N_group, \")\" )\r\n    ) %>% \r\n\r\n    ggplot(\r\n      aes(\r\n        x = AESOC,\r\n        y = AETOXGR + (as.numeric(SEX) - 1.5)/4,\r\n        color = SEX\r\n        )     \r\n      ) +\r\n    geom_beeswarm(\r\n      aes(shape = SEX),\r\n      cex = 3,\r\n      size = 9\r\n      ) +\r\n    scale_shape_manual(\r\n      values = c(\"\\u2640\", \"\\u2642\")             # unicode for female and male, https://www.compart.com/en/unicode/, accessed 02/02/25\r\n      ) +\r\n    geom_hline(\r\n        yintercept = c(3.5, 1.5),\r\n        color =  \"darkgrey\",\r\n        lwd = 0.7 \r\n    ) +\r\n    geom_vline(\r\n        xintercept = c(1.5:3.5),\r\n        color = \"darkgrey\"\r\n    ) +\r\n    facet_grid(\r\n      AEREL ~ Group\r\n      ) +\r\n    scale_color_manual(values = c(\"#C52A2A\", \"#4682B4\") ) +\r\n    scale_y_continuous( expand = c(0.07, 0.07)) +                              # adding limits improves alignment of the AESEV categories with p2C\r\n    labs(\r\n      title = \"Individual patients and treatment groups\",\r\n      x = \"Affected primary organ system\",\r\n      y = \"Toxicitiy grade\"\r\n      ) +\r\n  theme_facets_1() +\r\n  theme(\r\n    panel.grid.major.x = element_blank(),\r\n    legend.position = \"none\"\r\n    ) \r\n\r\n# Plot frequency of different toxicity grades of the most severe adverse event among drug-related and unrelated event categories\r\n\r\nannotations_p2C <-                                        # figure annotations for severity category\r\n  data.frame(\r\n  x = c(4.5, 2.5, 1),\r\n  y = c(0.79, 0.79, 0.79),\r\n  label = c(\"Severe\", \"Moderate\", \"Mild\")\r\n  )\r\n\r\np1C <- \r\n  dummyAEData_ed %>%                                        \r\n  select(SUBJID, Group, AEREL, AETOXGR, AESOC, SEX) %>% \r\n  group_by(SUBJID, AEREL) %>%                             # select AEs with the highest toxicity grade in both the treatment-related and unrelated category for each patient\r\n  slice(which.max(AETOXGR)) %>%                            \r\n  group_by(SUBJID) %>%                                    # select AEs with the highest toxicity grade for each patient\r\n  slice(which.max(AETOXGR)) %>% \r\n\r\n  group_by(AETOXGR, AEREL, SEX) %>% \r\n  summarise(N = n()) %>%\r\n  group_by(AEREL) %>% \r\n  list( ., \r\n    summarise(., \r\n      N_group = sum(N)\r\n      )\r\n    ) %>% \r\n  reduce(\r\n    left_join, \r\n    by = \"AEREL\"\r\n    ) %>% \r\n  mutate(\r\n    Freq = N / N_group) %>% \r\n   mutate(\r\n    AEREL = paste0(AEREL, \" (N = \", N_group, \")\" )\r\n    ) %>% \r\n \r\n  ggplot(\r\n    aes(\r\n      x = AETOXGR,\r\n      y = Freq,\r\n      fill = SEX\r\n      )\r\n    ) +\r\n  geom_col(\r\n    alpha = 0.8,\r\n    width = 0.5\r\n    ) +\r\n  geom_vline(\r\n    xintercept = c(3.5, 1.5),\r\n    color =  \"darkgrey\",\r\n    lwd = 0.7 \r\n    ) +\r\n  facet_wrap(\r\n    ~ AEREL, \r\n    strip.position=\"right\",\r\n    nrow = 2\r\n    ) +\r\n  geom_text(\r\n    data = annotations_p2C, \r\n    inherit.aes = FALSE, \r\n    aes(\r\n      x = x, \r\n      y = y, \r\n      label = label\r\n      ), \r\n    size = 3.5, \r\n    angle = 270\r\n    ) +\r\n  scale_fill_manual(values = c(\"#C52A2A\", \"#4682B4\") ) +\r\n  scale_x_discrete(limits = factor(1:5)) +\r\n  scale_y_continuous(\r\n    labels = scales::percent_format(\r\n      accuracy = 1\r\n      )\r\n    ) +\r\n  labs(\r\n    title = \"Toxicity grade: \\nsummary across treatment groups\",\r\n    y = 'Frequency among \"drug-related\" \\ncategory events',\r\n    fill = \"Sex\"\r\n    ) +\r\n  theme_facets_1() +\r\n  theme(\r\n    plot.margin = unit(\r\n      c(0.5, 0.5, 0.5 ,0.5), \"cm\"\r\n      ),\r\n    axis.title.y = element_blank(),\r\n    axis.text.y = element_blank(),\r\n    axis.ticks.y = element_blank(),\r\n    panel.grid.major.x = element_blank(),\r\n    legend.position = \"none\"\r\n    ) +\r\n  coord_flip() \r\n\r\n\r\np1As <- \r\n  p1A + plot_spacer() +       # spacers added to reduce gap between plots B and C, and align A: values adjusted for a 1400 x 1400 png image file output\r\n  plot_layout(\r\n    widths = c(8, 1.1)\r\n    ) \r\n\r\np1BC <- \r\n  p1B + plot_spacer() + p1C +                 \r\n  plot_layout(\r\n    widths = c(8, -0.3 ,2)\r\n    ) \r\n\r\np1As / p1BC + \r\n  plot_layout(\r\n    design = \"AAAAA\r\n              BBBBB\r\n              BBBBB\r\n              BBBBB\r\n              BBBBB\"      \r\n    ) +    \r\n    plot_annotation(\r\n        title = \"Highest toxicity grade events in male and female subjects, by treatment, organ system, and drug-relatedness of the event\",\r\n        theme = theme(\r\n            plot.title = element_text(\r\n                face = \"bold\",\r\n                size = 14, \r\n                hjust = 0.5\r\n            ),\r\n            plot.caption = element_text(\r\n                size = 9,\r\n                hjust = 0.5\r\n            )\r\n        )\r\n    )\r\n\r\n\r\nBack to blog\r\n\r\nExamples 7: Toxicity grade, affected primary organ system of the most severe adverse event, stratified by treatment, adverse event relation to drug, and patient race\r\n\r\n\r\n# - Chunk 5\r\n# - Required: * R libraries (chunk libraries_and_data)\r\n# -           * dummyAEData_ed (chunk dataEd)\r\n# -           * theme_facets_1 (chunk 4)\r\n\r\n## Toxicity grade and affected primary organ system of the most severe adverse event in each patient, stratified by treatment, adverse event relation to drug,\r\n## and patient race\r\n\r\np2A <- \r\n  dummyAEData_ed %>%                                        \r\n  select(SUBJID, Group, AEREL, AETOXGR, AESEV, AESOC, RACE) %>% \r\n  group_by(SUBJID, AEREL) %>%                             # select AEs with the highest toxicity grade in both the treatment-related and unrelated category for each patient\r\n  slice(which.max(AETOXGR)) %>%                            \r\n  group_by(SUBJID) %>%                                    # select AEs with the highest toxicity grade for each patient\r\n  slice(which.max(AETOXGR)) %>% \r\n\r\n  group_by(AETOXGR, AESEV, AESOC, RACE) %>% \r\n  summarise(N = n()) %>%\r\n  group_by(AESOC) %>% \r\n  list( ., \r\n    summarise(., \r\n      N_group = sum(N)\r\n      )\r\n    ) %>% \r\n  reduce(\r\n    left_join, \r\n    by = \"AESOC\"\r\n    ) %>% \r\n  mutate(\r\n    Freq = N / N_group) %>% \r\n   mutate(\r\n    AESOC = paste0(AESOC, \" (N = \", N_group, \")\" ),\r\n    AESOC = factor(AESOC),\r\n    AETOXGR = factor(AETOXGR, levels = c(1:5)),\r\n    AESEV = factor(\r\n      AESEV, \r\n      levels = rev(levels(AESEV) )\r\n      )\r\n    ) %>% \r\n \r\n  ggplot(\r\n    aes(\r\n      x = AETOXGR,\r\n      y = Freq,\r\n      fill = RACE\r\n      )\r\n    ) +\r\n  geom_col(alpha = 0.8 ) +\r\n  facet_grid2(\r\n    AESEV ~ AESOC,\r\n    scales = \"free_y\",                                                  # makes facet height proportional to range of AETOXGR, and\r\n    space = \"free\"                                                      # generates custom limits for the AETOXGR scale for each AESEV category\r\n    ) +\r\n  scale_x_discrete(breaks = levels(factor(dummyAEData_ed$AETOXGR)) ) +   # generates the appropriate custom breaks for each facet\r\n  scale_y_continuous(\r\n    labels = scales::percent_format(\r\n      accuracy = 1\r\n      )\r\n    ) +\r\n  labs(\r\n    title = \"Primary organ system: summary across treatment groups\",\r\n    x = \"Toxicity grade\",\r\n    y = \"Frequency in primary organ system\",\r\n    fill = \"Race\"\r\n    ) +\r\n  theme_facets_1() +\r\n  theme(\r\n    plot.margin = unit(\r\n      c(0.5, 0.5, 0.5 ,0.5), \"cm\"\r\n      )\r\n    ) +\r\n  coord_flip() \r\n\r\np2B <- \r\n  dummyAEData_ed %>%                                        \r\n  select(SUBJID, Group, AEREL, AETOXGR, AESOC, RACE) %>% \r\n  group_by(SUBJID, AEREL) %>%                             # select AEs with the highest toxicity grade in both the treatment-related and unrelated category for each patient\r\n  slice(which.max(AETOXGR)) %>%                            \r\n  group_by(SUBJID) %>%                                    # select AEs with the highest toxicity grade for each patient\r\n  slice(which.max(AETOXGR)) %>% \r\n  group_by(Group) %>%                                      # add group totals\r\n  list( ., summarise(., N_group = n())) %>% \r\n  reduce(left_join, by = \"Group\") %>% \r\n  mutate(\r\n    Group = paste0(Group, \" (N = \", N_group, \")\" )\r\n    ) %>% \r\n\r\n    ggplot(\r\n      aes(\r\n        x = AESOC,\r\n        y = AETOXGR + (as.numeric(RACE) - 3)/17,\r\n        color = RACE\r\n        )     \r\n      ) +\r\n    geom_beeswarm(\r\n      aes(),\r\n      cex = 3,\r\n      size = 4\r\n      ) +\r\n    geom_hline(\r\n        yintercept = c(3.5, 1.5),\r\n        color =  \"darkgrey\",\r\n        lwd = 0.7 \r\n    ) +\r\n    geom_vline(\r\n        xintercept = c(1.5:3.5),\r\n        color = \"darkgrey\"\r\n    ) +\r\n    facet_grid(\r\n      AEREL ~ Group\r\n      ) +\r\n    scale_y_continuous( expand = c(-0.06, 0.8)) +                             # adding limits improves alignment of the AESEV categories with p2C\r\n    labs(\r\n      title = \"Individual patients and treatment groups\",\r\n      x = \"Affected primary organ system\",\r\n      y = \"Toxicitiy grade\"\r\n      ) +\r\n  theme_facets_1() +\r\n  theme(\r\n    panel.grid.major.x = element_blank(),\r\n    legend.position = \"none\"\r\n    ) \r\n\r\n# Plot frequency of different toxicity grades of the most severe adverse event among drug-related and unrelated event categories\r\n\r\nannotations_p3C <-                                        # figure annotations for severity category\r\n  data.frame(\r\n  x = c(4.5, 2.5, 1),\r\n  y = c(0.79, 0.79, 0.79),\r\n  label = c(\"Severe\", \"Moderate\", \"Mild\")\r\n  )\r\n\r\np2C <- \r\n  dummyAEData_ed %>%                                        \r\n  select(SUBJID, Group, AEREL, AETOXGR, AESOC, RACE) %>% \r\n  group_by(SUBJID, AEREL) %>%                             # select AEs with the highest toxicity grade in both the treatment-related and unrelated category for each patient\r\n  slice(which.max(AETOXGR)) %>%                            \r\n  group_by(SUBJID) %>%                                    # select AEs with the highest toxicity grade for each patient\r\n  slice(which.max(AETOXGR)) %>% \r\n\r\n  group_by(AETOXGR, AEREL, RACE) %>% \r\n  summarise(N = n()) %>%\r\n  group_by(AEREL) %>% \r\n  list( ., \r\n    summarise(., \r\n      N_group = sum(N)\r\n      )\r\n    ) %>% \r\n  reduce(\r\n    left_join, \r\n    by = \"AEREL\"\r\n    ) %>% \r\n  mutate(\r\n    Freq = N / N_group) %>% \r\n   mutate(\r\n    AEREL = paste0(AEREL, \" (N = \", N_group, \")\" )\r\n    ) %>% \r\n \r\n  \r\n  ggplot(\r\n    aes(\r\n      x = AETOXGR,\r\n      y = Freq,\r\n      fill = RACE\r\n      )\r\n    ) +\r\n  geom_col(\r\n    alpha = 0.8,\r\n    width = 0.5\r\n    ) +\r\n  geom_vline(\r\n    xintercept = c(3.5, 1.5),\r\n    color =  \"darkgrey\",\r\n    lwd = 0.7 \r\n    ) +\r\n  facet_wrap(\r\n    ~ AEREL, \r\n    strip.position=\"right\",\r\n    nrow = 2\r\n    ) +\r\n  geom_text(\r\n    data = annotations_p3C, \r\n    inherit.aes = FALSE, \r\n    aes(\r\n      x = x, \r\n      y = y, \r\n      label = label\r\n      ), \r\n    size = 3.5, \r\n    angle = 270\r\n    ) +\r\n  #scale_fill_manual(values = c(\"#C52A2A\", \"#4682B4\") ) +\r\n  scale_x_discrete(limits = factor(1:5)) +\r\n  scale_y_continuous(\r\n    labels = scales::percent_format(\r\n      accuracy = 1\r\n      )\r\n    ) +\r\n  labs(\r\n    title = \"Toxicity grade: \\nsummary across treatment groups\",\r\n    y = 'Frequency among \"drug-related\" \\ncategory events',\r\n    fill = \"RACE\"\r\n    ) +\r\n  theme_facets_1() +\r\n  theme(\r\n    plot.margin = unit(\r\n      c(0.5, 0.5, 0.5 ,0.5), \"cm\"\r\n      ),\r\n    axis.title.y = element_blank(),\r\n    axis.text.y = element_blank(),\r\n    axis.ticks.y = element_blank(),\r\n    panel.grid.major.x = element_blank(),\r\n    legend.position = \"none\"\r\n    ) +\r\n  coord_flip() \r\n\r\n\r\np2As <- \r\n  p2A + plot_spacer() +       # spacers added to reduce gap between plots B and C, and align A: values adjusted for a 1400 x 1400 png image file output\r\n  plot_layout(\r\n    widths = c(8, 0.5)\r\n    ) \r\n\r\np2BC <- \r\n  p2B + plot_spacer() + p2C +                 \r\n  plot_layout(\r\n    widths = c(8, -0.3 ,2)\r\n    ) \r\n\r\np2As / p2BC + \r\n  plot_layout(\r\n    design = \"AAAAA\r\n              BBBBB\r\n              BBBBB\r\n              BBBBB\r\n              BBBBB\"      \r\n    ) +    \r\n    plot_annotation(\r\n        title = \"Highest toxicity grade events in patients from different races, by treatment, organ system, and drug-relatedness of the event\",\r\n        theme = theme(\r\n            plot.title = element_text(\r\n                face = \"bold\",\r\n                size = 14, \r\n                hjust = 0.5\r\n            ),\r\n            plot.caption = element_text(\r\n                size = 9,\r\n                hjust = 0.5\r\n            )\r\n        )\r\n    )\r\n\r\n\r\nBack to blog\r\n\r\nExamples 8: Discretisation of biomarker 1 measurements\r\n\r\n\r\n# - Chunk 6\r\n# - Required: * R libraries (chunk libraries_and_data)\r\n# -           * dummyAEData_ed (chunk dataEd)\r\n\r\n\r\n## Biomarkers\r\n\r\nBMRKR1_lims <- dummyAEData_ed %>%                 # categorise BMRKR1 by quantiles or range\r\n  select(SUBJID, BMRKR1, Group) %>%\r\n  pull(BMRKR1) %>% \r\n  quantile(c(0.33, 0.67, 1)) %>% \r\n  c(0, .)\r\n#  range() %>% \r\n#  {c(.[1] + diff(.)/3 * c(0, 1, 2, 3))}\r\n\r\n\r\n# Biomarker 1 and 2 discretised values: distribution of measurements among treatment groups\r\n\r\np3A <- \r\n  dummyAEData_ed %>%\r\n    select(SUBJID, BMRKR1, BMRKR2, Group) %>% \r\n    mutate(\r\n        \"Biomarker 1\" = case_when(\r\n            BMRKR1 < BMRKR1_lims[2] ~ \"LOW\",\r\n            BMRKR1 < BMRKR1_lims[3] ~ \"MEDIUM\",\r\n            TRUE ~ \"HIGH\"\r\n        )\r\n    ) %>%\r\n    rename(\"Biomarker 2\" = BMRKR2) %>% \r\n    pivot_longer(\r\n        cols = c(`Biomarker 1`, `Biomarker 2`),\r\n        names_to = \"Biomarker\" \r\n    ) %>% \r\n    mutate(\r\n        color = case_when(\r\n            Group %in% c(\r\n                \"Placebo - Placebo\", \"Drug X - Drug X\"\r\n            ) ~ \"1\",\r\n            TRUE ~ \"0\"          \r\n        ),\r\n    value = factor(value, levels = c(\"LOW\", \"MEDIUM\", \"HIGH\"))\r\n    ) %>%\r\n    \r\n    \r\n    ggplot() + \r\n    geom_histogram(\r\n        aes(\r\n            x = value,\r\n            fill = color),\r\n        color = \"darkgrey\",\r\n        stat = \"count\", \r\n        position=\"dodge\") +\r\n    facet_grid(\r\n        Biomarker ~ Group\r\n    ) +\r\n    scale_fill_manual (\r\n        values = c(\"lightgrey\", \"darkgrey\")\r\n    ) +\r\n    labs(\r\n      # title = \"Categorised levels of biomarker 1 and 2 in different treatment groups\",\r\n      y = \"Patients (N)\"\r\n    ) +\r\n    theme_light() +\r\n    theme(\r\n        plot.title = element_text(\r\n            size = 12,\r\n            hjust = 0.5),\r\n        strip.background = element_rect(\r\n            fill = \"white\", \r\n            color = \"darkgrey\"\r\n        ), \r\n        strip.text = element_text(\r\n            colour=\"black\",\r\n            size = 12\r\n        ),\r\n    axis.title.x = element_blank(),\r\n    legend.position = \"none\"\r\n    )  \r\n\r\n\r\n# Biomarker 1 measurements: distribution of measurements among treatment groups\r\n\r\np3B <- \r\n  dummyAEData_ed %>% \r\n  select(BMRKR1, Group) %>%\r\n  ggplot(\r\n    aes(\r\n      x = factor(Group),\r\n      y = BMRKR1\r\n    )\r\n  ) +\r\n  geom_violin(\r\n    color = \"lightgrey\",\r\n    fill  = \"lightgrey\", \r\n    width = 0.45\r\n    ) +\r\n  geom_jitter(\r\n    height = 0, width = 0.1, \r\n    size = 2, \r\n    alpha = 0.2\r\n    ) +\r\n  geom_boxplot(\r\n    width = 0.15 , \r\n    outlier.shape = NA,\r\n    color = \"salmon\",\r\n    lwd = 0.7,\r\n    alpha = 0.5\r\n    ) +\r\n  geom_hline(\r\n    yintercept = BMRKR1_lims[2:3],\r\n    colour = \"darkgrey\",\r\n    alpha = 0.3,\r\n    lwd = 1.2\r\n    ) +\r\n  annotate(\r\n    \"text\",\r\n    x = 4.5, \r\n    y = c(BMRKR1_lims %>%  {.[-1] - diff(.)/2}), \r\n    label = c(\"LOW\", \"MEDIUM\", \"HIGH\"),\r\n    size = 3.5, \r\n    angle = 270\r\n    ) +\r\n  stat_summary(\r\n    fun.data = function(x){\r\n      data.frame(\r\n        y = 0,\r\n        label = paste(\"N =\", length(x)\r\n        )\r\n      )\r\n    }, \r\n    geom = \"text\", \r\n    vjust = 0.5\r\n    ) +\r\n  labs(\r\n    #title = \"Biomarker 1 levels in different treatment groups\",\r\n    #x = \"Group\",\r\n    y = \"Biomarker 1 measurement\"\r\n  ) +\r\n  expand_limits(y = 0) +\r\n  theme_light() +\r\n  theme(\r\n    axis.text = element_text(\r\n      size = 12),\r\n    axis.title.x = element_blank(),\r\n    axis.ticks.x = element_blank(),\r\n    axis.text.x = element_blank(),\r\n    axis.text.y = element_text(size = 10)\r\n    ) \r\n\r\np3A / p3B +\r\n  plot_annotation(\r\n    title = \"Levels of biomarker 1 and 2 in different treatment groups\",\r\n    theme = theme(\r\n      plot.title = element_text(\r\n        size = 14, \r\n        hjust = 0.5\r\n        )\r\n      )\r\n    )\r\n\r\n\r\nBack to blog\r\n\r\nExamples 9: Toxicity grade and affected primary organ system of the most severe adverse event in each patient, stratified by treatment, adverse event relation to drug, and biomarker 1 categorical level\r\n\r\n\r\n# - Chunk 7\r\n# - Required: * R libraries (chunk libraries_and_data)\r\n# -           * dummyAEData_ed (chunk dataEd)\r\n# -           * theme_facets_1 (chunk 4)\r\n# -           * BMRKR1_lims (chunk 6)\r\n\r\n## Toxicity grade and affected primary organ system of the most severe adverse event in each patient, stratified by treatment, adverse event relation to drug,\r\n## and biomarker 1 categorical levels\r\n\r\npalette_4 <- c(\"#eb984e\", \"#5dade2\", \"#58d68d\")\r\n\r\ndummyAEData_bmrkr1Cat <- \r\n  dummyAEData_ed %>%                                        \r\n  select(\r\n    SUBJID, Group, \r\n    AEREL, AETOXGR, AESEV, AESOC, \r\n    BMRKR1\r\n    ) %>% \r\n    mutate(\r\n      BMRKR1cat = case_when(\r\n      BMRKR1 < BMRKR1_lims[2] ~ \"LOW\",\r\n      BMRKR1 < BMRKR1_lims[3] ~ \"MEDIUM\",\r\n      TRUE ~ \"HIGH\"\r\n      ),\r\n    BMRKR1cat = factor(BMRKR1cat, \r\n      levels = c(\"HIGH\", \"MEDIUM\", \"LOW\")\r\n      )\r\n    ) %>% \r\n  group_by(SUBJID, AEREL) %>%                             # select AEs with the highest toxicity grade in both the treatment-related and unrelated category for each patient\r\n  slice(which.max(AETOXGR)) %>%                            \r\n  group_by(SUBJID) %>%                                    # select AEs with the highest toxicity grade for each patient\r\n  slice(which.max(AETOXGR)) \r\n\r\n\r\np3A <- \r\n  dummyAEData_bmrkr1Cat %>% \r\n  group_by(AETOXGR, AESEV, AESOC, BMRKR1cat) %>% \r\n  summarise(N = n()) %>%\r\n  group_by(AESOC) %>% \r\n  list( ., \r\n    summarise(., \r\n      N_group = sum(N)\r\n      )\r\n    ) %>% \r\n  reduce(\r\n    left_join, \r\n    by = \"AESOC\"\r\n    ) %>% \r\n  mutate(\r\n    Freq = N / N_group) %>% \r\n   mutate(\r\n    AESOC = paste0(AESOC, \" (N = \", N_group, \")\" ),\r\n    AESOC = factor(AESOC),\r\n    AETOXGR = factor(AETOXGR, levels = c(1:5)),\r\n    AESEV = factor(\r\n      AESEV, \r\n      levels = rev(levels(AESEV) )\r\n      )\r\n    ) %>% \r\n  \r\n  ggplot(\r\n    aes(\r\n      x = AETOXGR,\r\n      y = Freq,\r\n      fill = BMRKR1cat\r\n      )\r\n    ) +\r\n  geom_col(alpha = 0.8 ) +\r\n  facet_grid2(\r\n    AESEV ~ AESOC,\r\n    scales = \"free_y\",                                                  # makes facet height proportional to range of AETOXGR, and\r\n    space = \"free\"                                                      # generates custom limits for the AETOXGR scale for each AESEV category\r\n    ) +\r\n  scale_fill_manual(values = palette_4) +\r\n  scale_x_discrete(breaks = levels(factor(dummyAEData_ed$AETOXGR)) ) +   # generates the appropriate custom breaks for each facet\r\n  scale_y_continuous(\r\n    labels = scales::percent_format(\r\n      accuracy = 1\r\n      )\r\n    ) +\r\n  labs(\r\n    title = \"Primary organ system: summary across treatment groups\",\r\n    x = \"Toxicity grade\",\r\n    y = \"Frequency in primary organ system\",\r\n    fill = \"Biomarker 1\"\r\n    ) +\r\n  theme_facets_1() +\r\n  theme(\r\n    plot.margin = unit(\r\n      c(0.5, 0.5, 0.5 ,0.5), \"cm\"\r\n      )\r\n    ) +\r\n  coord_flip()\r\n\r\n\r\np3B <- \r\n  dummyAEData_bmrkr1Cat %>% \r\n  group_by(Group) %>%                                      # add group totals\r\n  list( ., summarise(., N_group = n())) %>% \r\n  reduce(left_join, by = \"Group\") %>% \r\n  mutate(\r\n    Group = paste0(Group, \" (N = \", N_group, \")\" )\r\n    ) %>% \r\n\r\n    ggplot(\r\n      aes(\r\n        x = AESOC,\r\n        y = AETOXGR + (as.numeric(BMRKR1cat) - 3)/17,\r\n        color = BMRKR1cat\r\n        )     \r\n      ) +\r\n    geom_beeswarm(\r\n      aes(),\r\n      cex = 3,\r\n      size = 4\r\n      ) +\r\n    geom_hline(\r\n        yintercept = c(3.5, 1.5),\r\n        color =  \"darkgrey\",\r\n        lwd = 0.7 \r\n    ) +\r\n    geom_vline(\r\n        xintercept = c(1.5:3.5),\r\n        color = \"darkgrey\"\r\n    ) +\r\n    facet_grid(\r\n      AEREL ~ Group\r\n      ) +\r\n  scale_color_manual(values = palette_4) +\r\n  scale_y_continuous( expand = c(-0.06, 0.8)) +                             # adding limits improves alignment of the AESEV categories with p2C\r\n    labs(\r\n      title = \"Individual patients and treatment groups\",\r\n      x = \"Affected primary organ system\",\r\n      y = \"Toxicitiy grade\"\r\n      ) +\r\n  theme_facets_1() +\r\n  theme(\r\n    panel.grid.major.x = element_blank(),\r\n    legend.position = \"none\"\r\n    ) \r\n\r\n\r\n# Plot frequency of different toxicity grades of the most severe adverse event among drug-related and unrelated event categories\r\n\r\nannotations_p3C <-                                        # figure annotations for severity category\r\n  data.frame(\r\n  x = c(4.5, 2.5, 1),\r\n  y = c(0.79, 0.79, 0.79),\r\n  label = c(\"Severe\", \"Moderate\", \"Mild\")\r\n  )\r\n\r\np3C <- \r\n  dummyAEData_bmrkr1Cat %>%                                        \r\n  group_by(AETOXGR, AEREL, BMRKR1cat) %>% \r\n  summarise(N = n()) %>%\r\n  group_by(AEREL) %>% \r\n  list( ., \r\n    summarise(., \r\n      N_group = sum(N)\r\n      )\r\n    ) %>% \r\n  reduce(\r\n    left_join, \r\n    by = \"AEREL\"\r\n    ) %>% \r\n  mutate(\r\n    Freq = N / N_group) %>% \r\n   mutate(\r\n    AEREL = paste0(AEREL, \" (N = \", N_group, \")\" )\r\n    ) %>% \r\n \r\n  ggplot(\r\n    aes(\r\n      x = AETOXGR,\r\n      y = Freq,\r\n      fill = BMRKR1cat\r\n      )\r\n    ) +\r\n  geom_col(\r\n    alpha = 0.8,\r\n    width = 0.5\r\n    ) +\r\n  geom_vline(\r\n    xintercept = c(3.5, 1.5),\r\n    color =  \"darkgrey\",\r\n    lwd = 0.7 \r\n    ) +\r\n  facet_wrap(\r\n    ~ AEREL, \r\n    strip.position=\"right\",\r\n    nrow = 2\r\n    ) +\r\n  geom_text(\r\n    data = annotations_p3C, \r\n    inherit.aes = FALSE, \r\n    aes(\r\n      x = x, \r\n      y = y, \r\n      label = label\r\n      ), \r\n    size = 3.5, \r\n    angle = 270\r\n    ) +\r\n  scale_fill_manual(values = palette_4) +\r\n  scale_x_discrete(limits = factor(1:5)) +\r\n  scale_y_continuous(\r\n    labels = scales::percent_format(\r\n      accuracy = 1\r\n      )\r\n    ) +\r\n  labs(\r\n    title = \"Toxicity grade: \\nsummary across treatment groups\",\r\n    y = 'Frequency among \"drug-related\" \\ncategory events',\r\n    fill = \"Biomarker 1\"\r\n    ) +\r\n  theme_facets_1() +\r\n  theme(\r\n    plot.margin = unit(\r\n      c(0.5, 0.5, 0.5 ,0.5), \"cm\"\r\n      ),\r\n    axis.title.y = element_blank(),\r\n    axis.text.y = element_blank(),\r\n    axis.ticks.y = element_blank(),\r\n    panel.grid.major.x = element_blank(),\r\n    legend.position = \"none\"\r\n    ) +\r\n  coord_flip()\r\n\r\n\r\np3As <- \r\n  p3A + plot_spacer() +       # spacers added to reduce gap between plots B and C, and align A: values adjusted for a 1400 x 1400 png image file output\r\n  plot_layout(\r\n    widths = c(8, 0.7)\r\n    ) \r\n\r\np3BC <- \r\n  p3B + plot_spacer() + p3C +                 \r\n  plot_layout(\r\n    widths = c(8, -0.3 ,2)\r\n    ) \r\n\r\np3As / p3BC + \r\n  plot_layout(\r\n    design = \"AAAAA\r\n              BBBBB\r\n              BBBBB\r\n              BBBBB\r\n              BBBBB\"      \r\n    ) +    \r\n    plot_annotation(\r\n        title = \"Patient biomarker 1 levels and highest toxicity grade events, by treatment, organ system, and drug-related type of event\",\r\n        theme = theme(\r\n            plot.title = element_text(\r\n                face = \"bold\",\r\n                size = 14, \r\n                hjust = 0.5\r\n            ),\r\n            plot.caption = element_text(\r\n                size = 9,\r\n                hjust = 0.5\r\n            )\r\n        )\r\n    )\r\n\r\n\r\nBack to blog\r\n\r\nExamples 10: Fatal AEs and cause of death: Visualising membership in multiple sets and their intersections\r\n\r\n\r\n# - Chunk_11\r\n# - Required: * R libraries (chunk libraries_and_data)\r\n# -           * dummyAEData_ed (chunk dataEd)\r\n\r\n\r\n## Frequency of patients who suffered \"Fatal\" and/or \"Cause of death\" adverse events \r\n\r\n# Function for generating the Venn diagrams\r\n\r\ndrawVenn_fatalAE <- \r\n\r\n  function(data, treatment) {\r\n\r\n  patients_n <- \r\n    dummyAEData_ed %>% \r\n    group_by(SUBJID) %>% \r\n    slice(which.max(AETOXGR)) %>% \r\n    group_by(Group) %>% \r\n    summarise(n()) %>% \r\n    deframe()\r\n  \r\n  data %>% \r\n    filter(Group == treatment) %>%  \r\n    group_by(SUBJID) %>% \r\n    {list(\r\n      \"All\\n\" = slice(., which.max(AETOXGR)),\r\n      \"Fatal\\n\" = filter(., AEOUT == \"FATAL\") %>% \r\n        slice(which.max(AETOXGR)),\r\n      \"Death cause\\n\" = filter(., DTHCAUS == \"ADVERSE EVENT\") %>% \r\n        slice(which.max(AETOXGR)),\r\n      \"Serious\\n\" = filter(., AESER == \"Y\") %>% \r\n        slice(which.max(AETOXGR))\r\n        )} %>% \r\n      lapply(function(x) pull(x, SUBJID) ) %>% \r\n      ggVennDiagram(\r\n        label = \"percent\"\r\n        ) +\r\n      scale_fill_distiller(\r\n        palette = \"BuPu\", \r\n        direction = 1\r\n        ) +\r\n        labs(\r\n        title = paste(treatment),\r\n        subtitle = paste0(\"N = \", patients_n[paste(treatment)] )\r\n        ) +\r\n      theme(\r\n        plot.title = element_text(\r\n          size = 12,\r\n          hjust = 0.5\r\n          ),\r\n        plot.subtitle = element_text(\r\n          hjust = 0.5\r\n          ),\r\n        legend.position = \"none\"\r\n        )\r\n      }\r\n\r\n# Generate and combine Venn diagrams\r\n\r\np5A <- \r\n  drawVenn_fatalAE(dummyAEData_ed, \"Placebo - Placebo\") + \r\n  plot_spacer() +\r\n  drawVenn_fatalAE(dummyAEData_ed, \"Drug X - Placebo\") +\r\n  plot_layout(widths = c(1, 0.1, 1)\r\n  )\r\n\r\np5B <-\r\n  drawVenn_fatalAE(dummyAEData_ed, \"Placebo - Drug X\") +\r\n  plot_spacer() +\r\n  drawVenn_fatalAE(dummyAEData_ed, \"Drug X - Drug X\") +\r\n  plot_layout(widths = c(1, 0.1, 1)\r\n  )\r\n\r\np5A / p5B +\r\n  plot_annotation(\r\n    title = 'Frequency of patients who suffered \"Fatal\" and/or \"Cause of death\" adverse events',\r\n    caption = 'What is the difference between AEs recorded in AEOUT and DTHCAUS? \\nIf \"fatal adverse events\", represent actual deaths, than their frequency appears extremely high. \\nOn the other hand, if \"cause of death\" represents real fatal events, why is there so little overlap with \"fatal\" or \"serious\" adverse events? \\nAll: all whole treatment group, Fatal: AEOUT = \"Fatal\", Death cause: DTHCAUS = \"Y\", Serious = AESER = \"Y\"', \r\n    theme = theme(\r\n    plot.title = element_text(\r\n      size = 12,\r\n      hjust = 0.5,\r\n      vjust = 3.5\r\n      ),   \r\n    plot.caption = element_text(\r\n      size = 10,\r\n      hjust = 0.5,\r\n      vjust = -2\r\n      ),\r\n    plot.margin = unit(\r\n      c(1, 1, 1 , 1), \"cm\"\r\n      )\r\n    )\r\n  )\r\n\r\n\r\nBack to blog\r\n\r\n\r\n\r\n",
    "preview": "posts/2025-02-12-wonderful-wednesday-february-2025/./images/Fig5_bmkrs-ThomasWeissensteiner.png",
    "last_modified": "2025-08-27T22:01:23+02:00",
    "input_file": {},
    "preview_width": 800,
    "preview_height": 800
  },
  {
    "path": "posts/2024-12-20-wonderful-wednesdays-december-2024/",
    "title": "Wonderful Wednesdays December 2024",
    "description": "Use Visualizations to answer the following questions: Inter-goniometer: do the two goniometers agree? Intra-goniometer: do the goniometers measure consistently the knee joint angle across the three repeated measurements?",
    "author": [
      {
        "name": "PSI VIS SIG",
        "url": "https://www.psiweb.org/sigs-special-interest-groups/visualisation"
      }
    ],
    "date": "2024-12-11",
    "categories": [
      "Inter-rater reliability",
      "Intra-rater reliability",
      "Wonderful Wednesdays"
    ],
    "contents": "\r\n\r\nData set:\r\nThe data is based on a paper by Eliasziw et al., 1994.\r\nOne therapist uses two goniometers (i.e., electro vs. manual) to measure knee joint angles three times.\r\nTwenty-nine subjects (n=29) were measured three consecutive times (m=3) on each goniometer (t=2) at one joint position (i.e., full passive extension)\r\nThe Challenge:\r\nVisualize the data to answer the following questions:\r\nInter-goniometer: do the two goniometers agree?\r\nIntra-goniometer: do the goniometers measure consistently the knee joint angle across the three repeated measurements?\r\nReference:\r\nEliasziw M, Young SL, Woodbury MG, Fryday-Field K. Statistical methodology for the concurrent assessment of interrater and intrarater reliability: using goniometric measurements as an example. Phys Ther. 1994 Aug;74(8):777-88. doi: 10.1093/ptj/74.8.777. PMID: 8047565.\r\nA description of the challenge can also be found here.\r\nA recording of the session can be found here.\r\n\r\nExample 1. Faceted line plot\r\npdf file\r\nlink to code\r\n\r\nExample 2. Visualization by subject\r\nhigh resolution image\r\nlink to code\r\n\r\nExample 3. Bland-Altman plot\r\nhigh resolution imagehigh resolution image\r\nlink to code\r\n\r\nExample 4. Raw data\r\n\r\nThe html file can be found here.\r\nlink to code\r\n\r\nExample 5. Distribution\r\n\r\nThe html file can be found here.\r\nlink to code\r\nExample 6. Distribution adjusted\r\n\r\nThe html file can be found here.\r\nlink to code\r\nExample 7. QQ plots\r\nhigh resolution image\r\nlink to code\r\nExample 8. BA plot\r\n\r\nThe html file can be found here.\r\nlink to code\r\nExample 9. Probability of agreement\r\nhigh resolution image\r\nlink to code\r\nExample 10. Accuracy, precision, and reliability\r\nhigh resolution image\r\nlink to code\r\nExample 11. BA adjusted\r\n\r\nThe html file can be found here.\r\nlink to code\r\nExample 12. Probability of agreement (adj.)\r\nhigh resolution image\r\nlink to code\r\nCode\r\n\r\nExample 1. Faceted line plot\r\nThe SAS file can be found here.\r\nBack to blog\r\n\r\nExample 2. Visualization by subject\r\nThe Python file can be found here.\r\nBack to blog\r\n\r\nExample 3. Bland-Altman plot\r\n\r\n\r\nlibrary(readxl)\r\nlibrary(dplyr)\r\nlibrary(tidyr)\r\nlibrary(ggplot2)\r\n\r\n\r\n# Load data\r\nd <- read_excel('Data/2024-12-11-psi-vissig-goniometer.xlsx') |>\r\n  mutate(time=as.numeric(time))\r\n\r\n# Bland-Altman plot - Inter-goniometer agreement\r\ndf<-d |>\r\n    pivot_wider(names_from = `rater`, values_from = `y`) |>\r\n    mutate(\r\n      time = paste(\"T\", time),\r\n      diff = manual - electro,\r\n      avg = (manual + electro) / 2)\r\ndf2 <- df |>\r\n  group_by(time) |>\r\n  summarise(\r\n    g_avg = mean(avg),\r\n    g_diff = mean(diff),\r\n    sd_diff = sd(diff),\r\n    n = n()\r\n  )\r\ndf2  \r\ndf <- df |>\r\n  left_join(df2)\r\n\r\nggplot(data=df, aes(x = avg, y = diff, col = ifelse(diff>(g_diff+1.96*sd_diff) | diff<(g_diff-1.96*sd_diff), \"1\", \"0\"))) +\r\n  geom_point() +\r\n    geom_rug(col=\"grey\") +\r\n  # orange and blue colors do not show legend  \r\n  scale_color_manual(values = c(\"black\", \"red\")) +\r\n  geom_hline(aes(yintercept = g_diff)) +\r\n    geom_hline(aes(yintercept = g_diff+1.96*sd_diff), linetype = \"dashed\") +\r\n    geom_hline(aes(yintercept = g_diff-1.96*sd_diff), linetype = \"dashed\") +\r\n  #geom_smooth(method = \"lm\", se = F) +\r\n  labs(\r\n    title = \"Bland-Altman plot - Inter-goniometer agreement (electro vs. manual)\",\r\n    x = \"Average\",\r\n    y = \"Difference\",\r\n    caption = \"Solid line represents average of differences. \\nDashed lines represent limits of agreement (±1.96xSD). \\nData outside 95% limits of agreement are labeled\"\r\n  ) +\r\n  facet_wrap(time~.) +\r\n  #plot data outside g_diff+1.96*sd_diff\r\n  geom_text(data=df, aes(label = ifelse(diff>(g_diff+1.96*sd_diff) | diff<(g_diff-1.96*sd_diff), id, NA), hjust = -0.5)) +\r\n  scale_y_continuous(limits = c(-10, 10)) +\r\n  theme_bw() +\r\n  theme(legend.position = \"none\")\r\n# save the plot\r\nggsave(\"Figures/inter-goniometer-agreement.png\", width = 10, height = 5)\r\n\r\n# Bland-Altman plot - Intra-goniometer agreement\r\ndf<-NULL\r\nfor (i in 1:3){\r\n  c <- combn(1:3,2)[,i]\r\n  d1 <- d |>\r\n    filter(time %in% c) |>\r\n    pivot_wider(names_from = `time`, values_from = `y`) \r\n  \r\n  names(d1) <- c(\"id\", \"goniometer\", \"A\", \"B\") \r\n  \r\n  d2 <- d1 |>\r\n    mutate(\r\n      diff = A - B,\r\n      avg = (A + B) / 2,\r\n      comparison=paste(\"T\",c[1],\"vs\", \"T\", c[2]))\r\n  \r\n  df <- rbind(df, d2)\r\n}\r\n\r\ndf2 <- df |>\r\n  group_by(goniometer, comparison) |>\r\n  summarise(\r\n    g_avg = mean(avg),\r\n    g_diff = mean(diff),\r\n    sd_diff = sd(diff),\r\n    n = n()\r\n  )\r\n\r\ndf <- df |>\r\n  left_join(df2)\r\nggplot(data=df, aes(x = avg, y = diff, col = ifelse(diff>(g_diff+1.96*sd_diff) | diff<(g_diff-1.96*sd_diff), \"1\", \"0\"))) +\r\n  geom_point() +\r\n  geom_rug(col=\"grey\") +\r\n  # orange and blue colors do not show legend  \r\n  scale_color_manual(values = c(\"black\", \"red\")) +\r\n  geom_hline(aes(yintercept = g_diff)) +\r\n  geom_hline(aes(yintercept = g_diff+1.96*sd_diff), linetype = \"dashed\") +\r\n  geom_hline(aes(yintercept = g_diff-1.96*sd_diff), linetype = \"dashed\") +\r\n  #geom_smooth(method = \"lm\", se = F) +\r\n  labs(\r\n    title = \"Bland-Altman plot - Intra-goniometer agreement\",\r\n    x = \"Average\",\r\n    y = \"Difference\",\r\n    caption = \"Solid line represents average of differences. \\nDashed lines represent limits of agreement (±1.96xSD). \\nData outside 95% limits of agreement are labeled\"\r\n  ) +\r\n  # add text to geom_hline\r\n  facet_wrap(goniometer~comparison) +\r\n  geom_text(aes(label = ifelse(diff>(g_diff+1.96*sd_diff) | diff<(g_diff-1.96*sd_diff), id, NA), hjust = -0.5)) +\r\n  theme_bw() +\r\n  theme(legend.position = \"none\")\r\n# save the plot\r\nggsave(\"Figures/intra-goniometer-agreement.png\", width = 9, height = 6)\r\n\r\n\r\nBack to blog\r\n\r\nExamples 4 - 12.\r\nThe html file can be found here.\r\nBack to blog\r\n\r\n\r\n\r\n",
    "preview": "posts/2024-12-20-wonderful-wednesdays-december-2024/./images/Fig1_raw - Thomas Weissensteiner.png",
    "last_modified": "2025-08-22T14:49:33+02:00",
    "input_file": {},
    "preview_width": 937,
    "preview_height": 770
  },
  {
    "path": "posts/2024-12-01-wonderful-wednesdays-november-2024/",
    "title": "Wonderful Wednesdays November 2024",
    "description": "The challenge was about improving a bad chart.",
    "author": [
      {
        "name": "PSI VIS SIG",
        "url": "https://www.psiweb.org/sigs-special-interest-groups/visualisation"
      }
    ],
    "date": "2024-11-13",
    "categories": [
      "Bad chart",
      "Improve",
      "Wonderful Wednesdays"
    ],
    "contents": "\r\nImproving a Bad Chart\r\nThe challenge was about improving a bad chart.\r\nA description of the challenge can be found here.\r\nA recording of the session can be found here.\r\n\r\nExample 1. Separate Line Plots\r\nhigh resolution image\r\nlink to code\r\n\r\nExample 2. Combined Line Plots\r\nhigh resolution image\r\nhigh resolution image\r\nhigh resolution image\r\nhigh resolution image\r\nlink to code\r\n\r\nExample 3. Step-by-Step Example\r\nhigh resolution imagehigh resolution imagehigh resolution imagehigh resolution image\r\nlink to code\r\n\r\nCode\r\n\r\nExample 1. Separate Line Plots\r\nNo code has been submitted.\r\nBack to blog\r\n\r\nExample 2. Combined Line Plots\r\nThe Rmd file can be found here.\r\nThe html file can be found here.\r\nBack to blog\r\n\r\nExample 3. Step-by-Step Example\r\nNo code has been submitted.\r\nBack to blog\r\n\r\n\r\n\r\n",
    "preview": "posts/2024-12-01-wonderful-wednesdays-november-2024/./images/WW55_fig1 - Thomas Weissensteiner.png",
    "last_modified": "2025-08-22T14:49:32+02:00",
    "input_file": {},
    "preview_width": 1085,
    "preview_height": 842
  },
  {
    "path": "posts/2024-12-01-wonderful-wednesdays-october-2024/",
    "title": "Wonderful Wednesdays October 2024",
    "description": "Why personalized dosing? „Again and again, it has been shown that certain patients benefit more from individual drugs, while others suffer more heavily from side effects… …and still they are usually treated with a standard dose.\" Free translation of a quote from Prof. Dr. Dr. Gerd Geisslinger, Executive Director, Fraunhofer Institute for Translational Medicine and Pharmacology, Frankfurt",
    "author": [
      {
        "name": "PSI VIS SIG",
        "url": "https://www.psiweb.org/sigs-special-interest-groups/visualisation"
      }
    ],
    "date": "2024-10-09",
    "categories": [
      "Personalised dosing",
      "Wonderful Wednesdays"
    ],
    "contents": "\r\nPersonalised dosing\r\nAim of the visualisation\r\nIdentify subgroups with a dose response that deviates from the remaining study participants\r\nTherewith potential subgroups for personalized dosing could be identified\r\nA description of the challenge can be found here.\r\nA recording of the session can be found here.\r\n\r\nExample 1. Identification of patients for personalized dosing with DoRiS\r\nhigh resolution image\r\nlink to code\r\n\r\nExample 2. Boxplots\r\nhigh resolution image\r\nhigh resolution image\r\nhigh resolution image\r\nhigh resolution image\r\nlink to code\r\n\r\nExample 3. Plots by dose and subgroup\r\nhigh resolution image\r\nhigh resolution image\r\nhigh resolution image\r\nhigh resolution image\r\nhigh resolution image\r\nhigh resolution image\r\nhigh resolution image\r\nhigh resolution image\r\nhigh resolution image\r\nlink to code\r\n\r\nCode\r\n\r\nExample 1. Identification of patients for personalized dosing with DoRiS\r\n\r\n\r\n# Install if needed:\r\n\r\ninstall.packages(\"devtools\")\r\ninstall.packages(\"shiny\")\r\ninstall.packages(\"shinyWidgets\")\r\ninstall.packages(\"bslib\")\r\ninstall.packages(\"bsplus\")\r\ninstall.packages(\"shinyBS\")\r\ninstall.packages(\"DT\")\r\ninstall.packages(\"tidyr\")\r\ninstall.packages(\"dplyr\")\r\n\r\n\r\n# Install and start doris\r\n\r\ndevtools::install_github(\"bayer-group/BIC-doris\")\r\nlibrary(doris)\r\n\r\nrun_doris()\r\n\r\n\r\nBack to blog\r\n\r\nExample 2. Boxplots\r\nNo code has been submitted.\r\nBack to blog\r\n\r\nExample 3. Plots by dose and subgroup\r\nThe Rmd file can be found here\r\nBack to blog\r\n\r\n\r\n\r\n",
    "preview": "posts/2024-12-01-wonderful-wednesdays-october-2024/./images/doris - Bodo Kirsch.png",
    "last_modified": "2025-08-22T14:49:32+02:00",
    "input_file": {},
    "preview_width": 1774,
    "preview_height": 760
  },
  {
    "path": "posts/2024-12-01-wonderful-wednesdays-september-2024/",
    "title": "Wonderful Wednesdays September 2024",
    "description": "Visualise the pattern of events (disease progression, death, etc) on a summary data level or on a patient level data. Highlight differences between treatments or subgroups.",
    "author": [
      {
        "name": "PSI VIS SIG",
        "url": "https://www.psiweb.org/sigs-special-interest-groups/visualisation"
      }
    ],
    "date": "2024-09-11",
    "categories": [
      "Progression free survival",
      "Wonderful Wednesdays"
    ],
    "contents": "\r\nProgression free survival\r\nThe example simulated data set is based on large phase III clinical trials in Breast cancer such as ALTTO.\r\nThe “trial” aims to determine if a combination of two therapies tablemab (T) plus vismab (V) improves outcomes for metastatic human epidermal growth factor 2–positive breast cancer and increases the pathologic complete response in the neoadjuvant setting (treatment given as a first step to shrink a tumor before the main treatment or surgery).\r\nThe trial has four treatment arms, patients with centrally confirmed human epidermal growth factor 2-positive early breast cancer were randomly assigned to 1 year of adjuvant therapy with V, T, their sequence (T→V), or their combination (T+V) for 52 weeks. The primary end point was progression-free survival (PFS).\r\nAs defined by Cancer.gov: “the length of time during and after the treatment of a disease, such as cancer, that a patient lives with the disease but it does not get worse. In a clinical trial, measuring the progression-free survival is one way to see how well a new treatment works”.\r\nA description of the challenge can be found here.\r\nA recording of the session can be found here.\r\n\r\nExample 1. Augmented survival plots\r\nhigh resolution image\r\nhigh resolution image\r\nlink to code\r\n\r\nExample 2. Sorted lollipop plots\r\nhigh resolution image\r\nhigh resolution image\r\nlink to code\r\n\r\nCode\r\n\r\nExample 1. Augmented survival plots\r\nSecond version:\r\n\r\n\r\nlibrary(dplyr)\r\nlibrary(ggplot2)\r\nlibrary(broom)\r\nlibrary(survival)\r\nlibrary(patchwork)\r\n\r\n# load data\r\nADTTE <- read_csv('2024-08-12-psi-vissig-adtte.csv') %>%\r\n  mutate(EVNTDESCN=case_when(\r\n    EVNTDESC==\"Death\" ~ 1,\r\n    EVNTDESC==\"PD\" ~ 2,\r\n    EVNTDESC==\"Lost to follow-up\" ~ 3,\r\n    EVNTDESC==\"No next-line therapy initiated\" ~ 4,\r\n    EVNTDESC==\"Ongoing on first next-line therapy\" ~ 5,\r\n    EVNTDESC==\"Second next-line therapy initiated\" ~ 6))\r\n\r\n# plot KM curve by treatment \r\nd <- survfit(Surv(AVAL, CNSR == 0) ~ TRT01P  , data = ADTTE )  %>%\r\n  tidy(fit) %>%\r\n  rename(TRT01P=strata) %>%\r\n  mutate(TRT01P=gsub('TRT01P=', '', TRT01P))\r\n\r\na <- ggplot(data=d, aes(x=time, y=estimate, group = TRT01P, colour = TRT01P)) +\r\n  # do not inherit legend from ggplot\r\n  geom_line(show.legend = T) +\r\n  geom_point(pch=ifelse(d$n.censor>0,\"|\",\"\")) +\r\n  theme_bw() +\r\n  theme(legend.position=\"top\",\r\n        legend.text = element_text(size=12)) +\r\n  guides(colour = guide_legend(title = \"\")) +\r\n  labs(y=\"\", x=\"Time (days)\") +\r\n  scale_color_brewer(palette=\"Set1\")+\r\n  annotate(\"text\", x=-250, 0.35, label = \"Progression Free Survival\", hjust = 0, vjust = 1, angle=90) +\r\n  coord_cartesian(xlim = c(0, 2000),  clip = 'off')\r\na\r\n\r\nb <- ggplot(data = ADTTE, aes(x=AVAL, y=reorder(EVNTDESC, -EVNTDESCN), colour=TRT01P)) + \r\n  geom_point(pch=ifelse(ADTTE$CNSR==1, \"|\", \"x\"), size=3, alpha=0.5) +\r\n  facet_grid(cols = vars(TRT01P)) +\r\n  theme_bw() +\r\n  theme(legend.position=\"none\") +\r\n  labs(y=\"\", x=\"Time (days)\") +\r\n  scale_color_brewer(palette=\"Set1\")\r\nb\r\n\r\na/b +\r\n  plot_layout(heights = c(2, 1))\r\n\r\nggsave(\"figures/survplot_v1_2024-09-07.png\", width = 16, height = 9)\r\n\r\n\r\nBack to blog\r\n\r\nExample 2. Sorted lollipop plots\r\nNo code has been submitted.\r\nBack to blog\r\n\r\n\r\n\r\n",
    "preview": "posts/2024-12-01-wonderful-wednesdays-september-2024/./images/augmented_survival_1.png",
    "last_modified": "2025-08-22T14:49:32+02:00",
    "input_file": {},
    "preview_width": 1200,
    "preview_height": 675
  },
  {
    "path": "posts/2024-12-01-wonderful-wednesdays-august-2024/",
    "title": "Wonderful Wednesdays August 2024",
    "description": "When a new patient-reported outcome (PRO) is developed, there is interest in deriving the following, to support interpretation of data collected using the new tool: Minimal Clinically Important Difference (MCID) / Responder Definition (RD), Meaningful Between-Group Difference, Meaningful Score Categories. These are usually derived by using an existing, validated measure as the ‘gold standard’ to quantify e.g. disease status.",
    "author": [
      {
        "name": "PSI VIS SIG",
        "url": "https://www.psiweb.org/sigs-special-interest-groups/visualisation"
      }
    ],
    "date": "2024-08-14",
    "categories": [
      "Responder definition",
      "Wonderful Wednesdays"
    ],
    "contents": "\r\nResponder definition\r\nWhen a new patient-reported outcome (PRO) is developed, there is interest in deriving the following, to support interpretation of data collected using the new tool: Minimal Clinically Important Difference (MCID) / Responder Definition (RD), Meaningful Between-Group Difference, Meaningful Score Categories. These are usually derived by using an existing, validated measure as the ‘gold standard’ to quantify e.g. disease status.\r\nChallenge: Use visualisations to support in the derivation in any or all of the following:\r\nMCID\r\nMeaningful between-group difference\r\nMeaningful score categories\r\nA description of the challenge can be found here.\r\nA recording of the session can be found here.\r\n\r\nExample 1. Part 1\r\nhigh resolution image\r\nhigh resolution image\r\nhigh resolution image\r\nhigh resolution image\r\nlink to code\r\n\r\nExample 2. Part 2\r\nhigh resolution image\r\nhigh resolution image\r\nlink to code\r\n\r\nExample 3. November 2021\r\nhigh resolution image\r\nhigh resolution image\r\nhigh resolution image\r\nhigh resolution image\r\nhigh resolution image\r\nhigh resolution image\r\nlink to code\r\n\r\nCode\r\n\r\nExample 1. \r\nNo code has been submitted.\r\nBack to blog\r\n\r\nExample 2. \r\nNo code has been submitted.\r\nBack to blog\r\n\r\nExample 3. \r\nNo code has been submitted.\r\nBack to blog\r\n\r\n\r\n\r\n",
    "preview": "posts/2024-12-01-wonderful-wednesdays-august-2024/./images/improvement.png",
    "last_modified": "2025-08-22T14:49:32+02:00",
    "input_file": {},
    "preview_width": 959,
    "preview_height": 742
  },
  {
    "path": "posts/2024-12-01-wonderful-wednesdays-july-2024/",
    "title": "Wonderful Wednesdays July 2024",
    "description": "The data set is based on a platform trial design. How can we investigate the effectiveness of early stopping for futility? What is the relationship between the quality of the surrogate endpoint and the average number of patients enrolled? Is there an interaction with futility stopping and treatment effect scenario? How do FWER and FWER_BA differ from each other with respect to treatment effect scenario and maximum number of cohorts? Can you find other interesting patterns in the data?",
    "author": [
      {
        "name": "PSI VIS SIG",
        "url": "https://www.psiweb.org/sigs-special-interest-groups/visualisation"
      }
    ],
    "date": "2024-07-10",
    "categories": [
      "Platform Trial Design",
      "Wonderful Wednesdays"
    ],
    "contents": "\r\nPlatform Trial Design II\r\nIt is known that sometimes at the design stage of a clinical trial, simulations are conducted to better understand the operating characteristics of the design. In a recently published paper, a simulation study was conducted for a platform trial design in the context of NASH (Non-Alcoholic Steatohepatitis). Different assumptions regarding e.g. treatment effect and correlation between the surrogate interim endpoint and the final endpoint, as well as design choices such as sample size and maximum number of cohorts allowed in the platform were investigated.\r\nA description of the challenge can be found here.\r\nA recording of the session can be found here.\r\n\r\nExample 1. Shiny App - Gareth\r\nhigh resolution image\r\nlink to code\r\n\r\nExample 2. Exploratory visualisation\r\n\r\nThe app can be found here\r\nAuthor: Steve Mallett\r\nlink to code\r\n\r\nExample 3. Explanatory visualisation\r\nhigh resolution image\r\nlink to code\r\nCode\r\n\r\nExample 1. Shiny App - Gareth\r\nNo code has been submitted.\r\nBack to blog\r\n\r\nExample 2. Exploratory visualisation\r\n\r\n\r\nlibrary(shiny)\r\nlibrary(tidyverse)\r\nlibrary(ggplot2)\r\nlibrary(ggbeeswarm)\r\nlibrary(introdataviz)\r\nlibrary(ggforce)\r\n\r\n\r\nmax_c <- c(\"All\", \"3\", \"5\", \"7\")\r\ncir <- c(\"All\", \"0.01\", \"0.03\")\r\nseq <- c(\"All\", \"0.065\", \"0.9\", \"1\")\r\nyn <- c(\"No\", \"Yes\")\r\nvarlist1 <- c(\"Avg_Pat\", \"Avg_Pat_First_Suc\", \"Avg_Perc_Pat_Sup_Plac\", \"Avg_Cohorts\", \"FDR\", \"PTP\", \"PTT1ER\",\"FWER\", \"FWER_BA\",  \"Disj_Power\", \"Disj_Power_BA\")\r\nvarlist2 <- c(\"ShortTermEndpointQuality\", \"Maximumnumberofcohorts\", \"TypeofDataSharing\", \"CohortInclusionRate\", \"FinalCohortSampleSize\", \"InterimFutilityStopping\", \"TreatmentEfficacySetting\")\r\nvarlist3 <- c(\"None\", \"ShortTermEndpointQuality\", \"Maximumnumberofcohorts\", \"TypeofDataSharing\", \"CohortInclusionRate\", \"FinalCohortSampleSize\", \"InterimFutilityStopping\", \"TreatmentEfficacySetting\")\r\nvarlist4 <- c(\"None\", \"CohortInclusionRate\", \"InterimFutilityStopping\")\r\n\r\nmy_lgrey <-\"#f0f0f0\" \r\nmy_dgrey <- \"#636363\"\r\nmy_green <- \"#639CA4FF\"\r\nmy_orange <- \"#BE7245FF\"\r\nfill_cols <- c(my_green, my_orange)\r\n\r\nmy_theme <- theme(text=element_text(\r\n  colour = my_dgrey,\r\n  size = 20),\r\n  panel.background=element_rect(fill=\"white\"),\r\n  panel.border=element_rect(fill=NA),\r\n  panel.grid=element_line(colour = my_lgrey,\r\n                          linewidth = 0.5,\r\n                          linetype = 1),\r\n  axis.line=element_line(colour = my_dgrey,\r\n                         linewidth = 0.5,\r\n                         linetype = 1),\r\n  axis.text=element_text(\r\n    colour = my_dgrey,\r\n    size = 20),\r\n  axis.title=element_blank(),\r\n  plot.caption = element_text(hjust = 0, face= \"italic\"),\r\n  legend.title = element_blank()\r\n) \r\n\r\nui <- fluidPage(\r\n  titlePanel(\"Platform Trial Design Tool\"),\r\nfluidRow(\r\n  column(2,\r\n         selectInput(\"yvar\", \"Y-Axis Variable\", varlist1, selected=\"Disj_Power\"),\r\n         selectInput(\"xvar\", \"X-Axis Variable\", varlist2, selected=\"FinalCohortSampleSize\"),\r\n         selectInput(\"trelvar\", \"Trellis Variable\", varlist3),\r\n         selectInput(\"groupvar\", \"Group Variable\", varlist4),\r\n         radioButtons(\"lg\", \"Log Transform?\", yn),\r\n         ),\r\n column(5,\r\n        plotOutput(\"distPlot\", width = \"1200px\", height = \"1000px\"))\r\n))\r\n\r\nserver <- function(input, output) {\r\n\r\n  \r\n  mydata <- read_csv(\"./data/ExampleDataNASH.csv\") \r\n\r\n    output$distPlot <- renderPlot({\r\n  \r\n      mydata <- mydata %>%\r\n        mutate(\r\n          yv = get(input$yvar),\r\n          xv = factor(get(input$xvar)))\r\n      \r\n      if(input$trelvar != \"None\") {\r\n        mydata <- mydata %>%\r\n          mutate(\r\n            rv = factor(get(input$trelvar)))\r\n      }\r\n\r\n      if(input$groupvar != \"None\") {\r\n        mydata <- mydata %>%\r\n          mutate(\r\n            gv = factor(get(input$groupvar)))\r\n      }      \r\n\r\n     if(input$groupvar == \"None\") {\r\n        my_plot <- ggplot() +\r\n          geom_violin(data=mydata, aes(x=xv, y=yv, group = xv),\r\n                      fill=my_green, alpha=0.6, trim=FALSE)\r\n      }      \r\n      else{\r\n          my_plot <- ggplot(mydata, aes(x=xv, y=yv, \r\n                                        group = interaction(gv, xv),\r\n                                        fill = gv)) +\r\n            geom_split_violin(alpha=0.6, trim=FALSE) +\r\n            scale_fill_manual(values=fill_cols)\r\n          \r\n      }\r\n      if(input$trelvar != \"None\") {\r\n        \r\n        my_plot <- my_plot +\r\n          facet_wrap(~rv)\r\n\r\n      }\r\n\r\n       if(input$lg == \"Yes\") {\r\n        \r\n        my_plot <- my_plot +\r\n          scale_y_log10()\r\n        \r\n      }\r\n      else {}\r\n      my_plot <- my_plot + my_theme\r\n      my_plot\r\n    })\r\n}\r\n\r\n# Run the application \r\nshinyApp(ui = ui, server = server)\r\n\r\n\r\nBack to blog\r\n\r\nExample 3. Explanatory visualisation\r\n\r\n\r\nlibrary(shiny)\r\nlibrary(tidyverse)\r\nlibrary(ggplot2)\r\nlibrary(introdataviz)\r\nlibrary(stringr)\r\nlibrary(ggforce)\r\n\r\nmy_lgrey <-\"#f0f0f0\" \r\nmy_dgrey <- \"#636363\"\r\nmy_green <- \"#639CA4FF\"\r\nmy_orange <- \"#BE7245FF\"\r\nfill_cols <- c(my_green, my_orange)\r\n\r\nmy_theme <- theme(text=element_text(\r\n  colour = my_dgrey,\r\n  size = 14),\r\n  panel.background=element_rect(fill=\"white\"),\r\n  panel.border=element_rect(fill=NA),\r\n  panel.grid=element_line(colour = my_lgrey,\r\n                          linewidth = 0.5,\r\n                          linetype = 1),\r\n  axis.line=element_line(colour = my_dgrey,\r\n                         linewidth = 0.5,\r\n                         linetype = 1),\r\n  axis.text=element_text(\r\n    colour = my_dgrey),\r\n  axis.title=element_text(colour = my_dgrey),\r\n  plot.caption = element_text(hjust = 0, face= \"italic\"),\r\n  legend.title = element_text(colour = my_dgrey,\r\n                              size = 12),\r\n    plot.title = element_text(colour = my_dgrey)\r\n) \r\n# my_title <- \"When the therapy is effective, inclusion of interim futility stopping rules reduces the disjunctive power when the short term endpoint quality is poor.\\n\"\r\n  my_cap <- \"Treatment effect scenario: Both monotherapies are superior to SoC and combination therapy is better than monotherapies.\"\r\n  \r\n  mydata <- read_csv(\"./data/ExampleDataNASH.csv\") %>%\r\n    mutate(tes = if_else(TreatmentEfficacySetting==6, \"Monotherapies > SoC. Combination > monotherapies\", \"Null Hypothesis\")) %>%\r\n    mutate(steq = paste0(\"Short Term Endpoint Quality: \", ShortTermEndpointQuality)) %>%\r\n    filter(TreatmentEfficacySetting %in% c(1)) %>%\r\n    filter(ShortTermEndpointQuality %in% c(0.65, 1)) %>%\r\n    filter(FinalCohortSampleSize %in% c(100, 300, 500))\r\n    \r\n      my_plot <- ggplot(mydata, aes(x=factor(FinalCohortSampleSize), y=Disj_Power, \r\n                                    group = interaction(InterimFutilityStopping, factor(FinalCohortSampleSize)),\r\n                                    fill = InterimFutilityStopping)) +\r\n        geom_sina(alpha=0.6, size=3, shape=21) +\r\n        # scale_fill_manual(values=fill_cols) +\r\n        scale_fill_manual(\"Interim\\nFutility\\nStopping?\\n\", values=fill_cols) +\r\n        scale_y_continuous(\"Disjunctive Power\\n\") +\r\n        scale_x_discrete(\"Final Cohort Sample Size\\n\") +\r\n        facet_wrap(~steq) +\r\n        labs(\r\n          # title = str_wrap(my_title, 200),\r\n             caption = str_wrap(my_cap, 100))  + \r\n        my_theme\r\n\r\nggsave(\"./WW_Jul24_03.png\",  my_plot, width=1250, height=900, units=\"px\", dpi=150)\r\n\r\n\r\nBack to blog\r\n\r\n\r\n\r\n",
    "preview": "posts/2024-12-01-wonderful-wednesdays-july-2024/./images/WW_Jul24_03 - Steve Mallett.png",
    "last_modified": "2025-08-22T14:49:32+02:00",
    "input_file": {},
    "preview_width": 1250,
    "preview_height": 1000
  },
  {
    "path": "posts/2024-12-01-wonderful-wednesdays-june-2024/",
    "title": "Wonderful Wednesdays June 2024",
    "description": "The data set is based on a platform trial design. How can we best show the effect of sample size on the power/type 1 error? Does sample size affect PTP and Disj_Power in the same way? How about in interaction with the type of data sharing? What is the relationship between number of cohorts, cohort inclusion rate and power? How can we investigate the effectiveness of early stopping for futility? What is the relationship between the quality of the surrogate endpoint and the average number of patients enrolled? Is there an interaction with futility stopping and treatment effect scenario? How do FWER and FWER_BA differ from each other with respect to treatment effect scenario and maximum number of cohorts? Can you find other interesting patterns in the data?",
    "author": [
      {
        "name": "PSI VIS SIG",
        "url": "https://www.psiweb.org/sigs-special-interest-groups/visualisation"
      }
    ],
    "date": "2024-06-12",
    "categories": [
      "Platform Trial Design",
      "Wonderful Wednesdays"
    ],
    "contents": "\r\nPlatform Trial Design I\r\nIt is known that sometimes at the design stage of a clinical trial, simulations are conducted to better understand the operating characteristics of the design. In a recently published paper, a simulation study was conducted for a platform trial design in the context of NASH (Non-Alcoholic Steatohepatitis). Different assumptions regarding e.g. treatment effect and correlation between the surrogate interim endpoint and the final endpoint, as well as design choices such as sample size and maximum number of cohorts allowed in the platform were investigated.\r\nA description of the challenge can be found here.\r\nA recording of the session can be found here.\r\n\r\nExample 1. Power by Cohort Size/Data Sharing\r\nhigh resolution image\r\nlink to code\r\n\r\nExample 2. Shiny App\r\n\r\nThe app can be found here\r\nAuthor: Steve Mallett\r\nlink to code\r\n\r\nExample 3. Power/Error Rate by Number of Cohorts/Data Sharing (from paper)\r\nhigh resolution image\r\nlink to code\r\n\r\nExample 4. Power by Cohort Sample Size and Cohort Number and Inclusion Rate​\r\nhigh resolution image\r\nlink to code\r\nCode\r\n\r\nExample 1. Power by Cohort Size/Data Sharing\r\n\r\n\r\n# Microbiome Challenge\r\n\r\n# WonderfulWednesday\r\n\r\nlibrary(tidyverse)\r\nlibrary(stringr)\r\nlibrary(scales)\r\nlibrary(RColorBrewer)\r\nlibrary(glue)\r\nlibrary(janitor)\r\nlibrary(readr)\r\n\r\nroot_dir <- here::here()\r\nweds_dir <- file.path(root_dir,\r\n                      \"PlatformTrials\")\r\ntt_theme <- \"power\"\r\nauthor_initials <- \"TomMarlow\"\r\n\r\ned <- file.path(weds_dir, \"ExampleDataNASH.csv\")\r\n\r\ned_dat <- read.csv(ed, sep = \",\")\r\n\r\npt_avg <- ed_dat %>%\r\n  filter(!is.na(Disj_Power_BA)) %>%\r\n  group_by(FinalCohortSampleSize, Maximumnumberofcohorts, TypeofDataSharing) %>%\r\n  summarise(mean = mean(Disj_Power_BA)) %>%\r\n  mutate(power = mean * 100)\r\n\r\nfig1 <- ggplot(pt_avg,\r\n               aes(x = FinalCohortSampleSize,\r\n                   y = power,\r\n                   colour = as.factor(Maximumnumberofcohorts))) +\r\n  geom_line(linewidth = 2) +\r\n  labs(title = \"Power by cohort size and type of data sharing\",\r\n       colour = \"Max number of cohorts\") +\r\n  xlab(\"Final cohort sample size\") +\r\n  ylab(\"Disjunctive Power (%)\") +\r\n  theme_bw() +\r\n  theme(axis.title.x = element_text(size = 10),\r\n        strip.text =  element_text(size = 12),\r\n        panel.grid.minor.x = element_blank(),\r\n        axis.text = element_text(size = 8),\r\n        legend.position = \"bottom\") +\r\n  scale_colour_viridis_d() +\r\n  scale_fill_discrete(name = \"Cohort Size\") +\r\n  facet_wrap(str_to_sentence(TypeofDataSharing) ~ .)\r\n\r\nfig1\r\n\r\nggsave(\r\n  plot = fig2,\r\n  filename = glue(\"{root_dir}/{tt_theme}_{author_initials}_{Sys.Date()}.jpg\"))\r\n\r\n\r\nBack to blog\r\n\r\nExample 2. Shiny App\r\n\r\n\r\nlibrary(shiny)\r\nlibrary(tidyverse)\r\nlibrary(ggplot2)\r\nlibrary(ggbeeswarm)\r\n\r\nmax_c <- c(\"All\", \"3\", \"5\", \"7\")\r\ncir <- c(\"All\", \"0.01\", \"0.03\")\r\nseq <- c(\"All\", \"0.065\", \"0.9\", \"1\")\r\nds <- c(\"No\", \"Yes\")\r\nvp <- c(\"Beeswarm\", \"Violin Plot\")\r\npe <- c(\"Power\", \"Error Rate\")\r\n# tes <- c(\"All\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\")\r\n\r\ncohort_text <- \"all: At interim/final analysis, all SoC and backbone monotherapy data available from all cohorts; \r\ncohort: No sharing occurs; \r\nconcurrent: At interim/final analysis, all SoC and backbone monotherapy data that was collected during the active enrollment time of the cohort under investigation are used; \r\ndynamic: Whenever in any cohort an interim or final analysis is performed, the degree of data sharing of SoC and backbone monotherapy data from\r\nother cohorts increases with the homogeneity of the observed response rate of the respective arms\"\r\nmy_lgrey <-\"#f0f0f0\" \r\nmy_dgrey <- \"#636363\"\r\n\r\nui <- fluidPage(\r\n  titlePanel(\"Decision rules for identifying combination therapies in\r\nopen-entry, randomized controlled platform trials\"),\r\nfluidRow(\r\n  column(2,\r\n         radioButtons(\"pe\", \"Display Power or Error Rate?\", pe),\r\n         radioButtons(\"ds\", \"Display By Data Sharing Category?\", ds),\r\n         radioButtons(\"vp\", \"Chart Type\", vp),\r\n         radioButtons(\"mc\", \"Maximum Number of Cohorts\", max_c),\r\n         radioButtons(\"cir\", \"Cohort Inclusion Rate\", cir),\r\n         radioButtons(\"seq\", \"Short Term Endpoint Quality\", seq)\r\n\r\n\r\n         ),\r\n column(5,\r\n        plotOutput(\"distPlot\", width = \"1200px\", height = \"1000px\"))\r\n))\r\n\r\nserver <- function(input, output) {\r\n\r\n  \r\n  data1 <- read_csv(\"./data/ExampleDataNASH.csv\") %>%  \r\n    mutate(PTT1ER = log10(PTT1ER)) %>%\r\n    mutate(FWER = log10(FWER))\r\n    # arrange(FinalCohortSampleSize) %>%\r\n    # select(FinalCohortSampleSize, PTP, Disj_Power, TypeofDataSharing) %>%\r\n    # filter(!is.na(PTP))\r\n \r\n    output$distPlot <- renderPlot({\r\n \r\n      temp <- data1\r\n      \r\n      if(input$mc == \"All\") {}\r\n      else {\r\n        temp <- temp %>% \r\n          filter(Maximumnumberofcohorts == as.numeric(input$mc))\r\n      }\r\n      if(input$cir == \"All\") {}\r\n      else {\r\n        temp <- temp %>% \r\n          filter(CohortInclusionRate == as.numeric(input$cir))\r\n      }\r\n      if(input$seq == \"All\") {}\r\n      else {\r\n        temp <- temp %>% \r\n          filter(ShortTermEndpointQuality == as.numeric(input$seq))\r\n      }\r\n\r\n      if(input$pe == \"Power\") {\r\n        ptp <- temp$PTP\r\n        disj <- temp$Disj_Power\r\n        t <- c(ptp, disj)\r\n        t2 <- rep(\"Per-Cohort-Power\", length(ptp))\r\n        t3 <- rep(\"Disjunctive Power\", length(disj))\r\n      }\r\n      else {\r\n        ptt1er <- temp$PTT1ER\r\n        fwer <- temp$FWER\r\n        t <- c(ptt1er, fwer)\r\n        t2 <- rep(\"Per-Cohort-Type 1 Error (log)\", length(ptt1er))\r\n        t3 <- rep(\"FWER (log)\", length(fwer))\r\n      }\r\n      \r\n      ss <- temp$FinalCohortSampleSize  \r\n      ds <- paste0(\"Data Sharing: \", temp$TypeofDataSharing)\r\n      \r\n      ss2 <- rep(ss, 2)\r\n      ds2 <- rep(ds,2)\r\n      \r\n\r\n      t4 <- c(t2, t3)\r\n      new <- cbind(ss2, ds2, t, t4) %>%\r\n        as.data.frame() %>%\r\n        mutate(tn = as.numeric(t))\r\n      \r\n      my_plot <- ggplot(new, aes(x=ss2, y=tn, color=factor(t4))) +\r\n        scale_x_discrete(\"Cohort Sample Size\") +\r\n        scale_y_continuous(\" \") +\r\n        scale_color_manual(\" \", \r\n                           values = c(\"#1b9e77\", \"#d95f02\")) +\r\n        theme(text=element_text(\r\n          colour = my_dgrey,\r\n          size = 20),\r\n          panel.background=element_rect(fill=\"white\"),\r\n          panel.border=element_rect(fill=NA),\r\n          panel.grid=element_line(colour = my_lgrey,\r\n                                  linewidth = 0.5,\r\n                                  linetype = 1),\r\n          axis.line=element_line(colour = my_dgrey,\r\n                                 linewidth = 0.5,\r\n                                 linetype = 1),\r\n          axis.text=element_text(\r\n            colour = my_dgrey,\r\n            size = 20),\r\n          axis.title=element_text(\r\n            colour = my_dgrey,\r\n            size =20),\r\n          plot.caption = element_text(hjust = 0, face= \"italic\")\r\n        )          \r\n      \r\n      if(input$ds == \"Yes\") {\r\n        \r\n        my_plot <- my_plot +\r\n          facet_wrap(~ds2)\r\n\r\n      }\r\n      else {}\r\n      \r\n      if(input$vp == \"Violin Plot\") {\r\n        my_plot <- my_plot +\r\n          geom_violin()\r\n      }\r\n      else {\r\n        my_plot <- my_plot +\r\n          geom_beeswarm(cex=0.5, method=\"hex\") \r\n        }\r\n      my_plot\r\n    })\r\n}\r\n\r\n# Run the application \r\nshinyApp(ui = ui, server = server)\r\n\r\n\r\nBack to blog\r\n\r\nExample 3. Power/Error Rate by Number of Cohorts/Data Sharing (from paper)\r\nNo code has been submitted.\r\nBack to blog\r\n\r\nExample 4. \r\nNo code has been submitted.\r\nBack to blog\r\nAdditional code\r\n\r\n\r\nlibrary(tidyverse)\r\nlibrary(ggplot2)\r\nlibrary(ggbeeswarm)\r\n\r\n### Simulation setup (default) ###\r\n\r\n# Maximumnumberofcohorts (7) : Max number of cohorts allowed to enter the platform\r\n# CohortInclusionRate (0.03) : Rate at which new cohorts enter the platform (higher levels indicate faster entry)\r\n# TreatmentEfficacySetting (1) \" Treatment effect scenario\r\n# FinalCohortSampleSize (500)\r\n# TypeofDataSharing : How is data shared across cohorts\r\n# InterimFutilityStopping :  Binding early futility stopping yes/no\r\n\r\n### Other variables ###\r\n\r\n# ShortTermEndpointQuality : Correlation between surrogate interim and final endpoint\r\n\r\n### Output (operating characteristics) ###\r\n\r\n# PTP : per cohort power\r\n# PTT1ER : per cohort type I error\r\n# FWER \r\n# FWER_BA : ignores sims where only efficacious cohorts\r\n# FDR : false discovery rate\r\n# Disj_Power : disjoint power\r\n# Disj_Power_BA : ignores sims where no efficacious cohorts \r\n\r\n### Other output\r\n# Avg_Pat = Average number of participants enrolled in the trial\r\n\r\nindata <- read_csv(\"./ExampleDataNASH.csv\")\r\nderived <- indata %>%\r\n  mutate(PTT1ER_log = log10(PTT1ER)) %>%\r\n  mutate(FWER_log = log10(FWER))\r\n\r\ndefault <- derived %>%\r\n  filter(TreatmentEfficacySetting == 1) %>%\r\n  filter(Maximumnumberofcohorts == 7) %>% \r\n  filter(CohortInclusionRate == 0.03) %>%\r\n  filter(FinalCohortSampleSize == 500)\r\n\r\n### Q1: How can we best show the effect of sample size on the power/type 1 error?\r\n\r\nggplot(derived, aes(x=factor(FinalCohortSampleSize), y=Disj_Power)) +\r\n  geom_violin() +\r\n  geom_beeswarm(cex=0.3) \r\n\r\nggplot(derived, aes(x=factor(FinalCohortSampleSize), y=FWER)) +\r\n  # geom_violin() +\r\n  geom_beeswarm(cex=0.3, method=\"square\") +\r\n  facet_wrap(~TypeofDataSharing)\r\n\r\n### Q2: Does sample size affect PTP and Disj_Power in the same way? \r\n# How about in interaction with the type of data sharing?\r\n\r\ntemp <- derived %>%\r\n  arrange(FinalCohortSampleSize) %>%\r\n  select(FinalCohortSampleSize, PTP, Disj_Power, TypeofDataSharing) %>%\r\n  filter(!is.na(PTP))\r\n\r\nss <- temp$FinalCohortSampleSize  \r\nptp <- temp$PTP\r\ndisj <- temp$Disj_Power\r\nds <- temp$TypeofDataSharing\r\n\r\nss2 <- rep(ss, 2)\r\nds2 <- rep(ds,2)\r\n\r\nt <- c(ptp, disj)\r\nt2 <- rep(\"PTP\", length(ptp))\r\nt3 <- rep(\"DISJ\", length(disj))\r\nt4 <- c(t2, t3)\r\nnew <- cbind(ss2, ds2, t, t4) %>%\r\n  as.data.frame() %>%\r\n  mutate(tn = as.numeric(t))\r\n\r\nmy_lgrey <-\"#f0f0f0\" \r\nmy_dgrey <- \"#636363\"\r\n\r\ncohort_text <- \"all: At interim/final analysis, all SoC and backbone monotherapy data available from all cohorts; \r\ncohort: No sharing occurs; \r\nconcurrent: At interim/final analysis, all SoC and backbone monotherapy data that was collected during the active enrollment time of the cohort under investigation are used; \r\ndynamic: Whenever in any cohort an interim or final analysis is performed, the degree of data sharing of SoC and backbone monotherapy data from\r\nother cohorts increases with the homogeneity of the observed response rate of the respective arms\"\r\nggplot(new, aes(x=ss2, y=tn, color=factor(t4))) +\r\n  geom_beeswarm(cex=0.6, alpha=0.5, method=\"hex\") +\r\n  facet_wrap(~ds2) +\r\n  scale_x_discrete(\"Cohort Sample Size\") +\r\n  scale_y_continuous(\"Power\", limits=c(0, 1)) +\r\n  scale_color_manual(\" \", labels = c(\"Disjunctive\", \"Per Cohort\"), values = c(\"#1b9e77\", \"#d95f02\")) +\r\n  labs(title = \"Effect of Sample Size on Disjunctive and Per Cohort Power, by Data Sharing Category\",\r\n       caption = cohort_text , align=\"left\") +\r\n  theme(text=element_text(\r\n    colour = my_dgrey,\r\n    size = 14),\r\n    panel.background=element_rect(fill=\"white\"),\r\n    panel.border=element_rect(fill=NA),\r\n        panel.grid=element_line(colour = my_lgrey,\r\n                                      linewidth = 0.5,\r\n                                      linetype = 1),\r\n        axis.line=element_line(colour = my_dgrey,\r\n                               linewidth = 0.5,\r\n                               linetype = 1),\r\n        axis.text=element_text(\r\n          colour = my_dgrey,\r\n          size = 14),\r\n        axis.title=element_text(\r\n          colour = my_dgrey,\r\n          size =14),\r\n    plot.caption = element_text(hjust = 0, face= \"italic\")\r\n        ) \r\n\r\n\r\n### Q3: What is the relationship between number of cohorts, cohort inclusion rate and power?\r\n\r\nsum <- derived %>%\r\n  group_by(Maximumnumberofcohorts, CohortInclusionRate) %>%\r\n  filter(!is.na(Disj_Power)) %>%\r\n  summarise(power_mn = mean(Disj_Power))\r\n\r\nggplot(sum, aes(x=factor(Maximumnumberofcohorts), y=power_mn, fill=factor(CohortInclusionRate))) +\r\n  geom_bar(stat=\"identity\", position=\"dodge\") +\r\n  scale_fill_discrete() \r\n\r\n### Q4: How can we investigate the effectiveness of early stopping for futility?\r\n\r\nsum <- derived %>%\r\n  group_by(InterimFutilityStopping) %>%\r\n  filter(!is.na(Disj_Power)) %>%\r\n  summarise(power_mn = mean(Disj_Power))\r\n\r\nggplot(sum, aes(x=factor(InterimFutilityStopping), y=power_mn)) +\r\n  geom_bar(stat=\"identity\") \r\n\r\n### Q5: What is the relationship between the quality of the surrogate endpoint and the average \r\n# number of patients enrolled? Is there an interaction with futility stopping and treatment effect scenario?\r\n\r\nsum <- derived %>%\r\n  group_by(ShortTermEndpointQuality, InterimFutilityStopping, TreatmentEfficacySetting) %>%\r\n  filter(!is.na(Avg_Pat)) %>%\r\n  summarise(mn = mean(Avg_Pat))\r\n\r\ncohort_text <- \"_______________________________________________________________________________________________________________________________________________________________________________________________________________________\r\n1: Backbone monotherapy superior to SoC, add-on monotherapy has 50:50 chance to be superior to SoC; in case add-on monotherapy not superior to SoC, combination therapy as effective as backbone monotherapy, otherwise combination therapy significantly\r\nbetter than monotherapies; \r\n2: Backbone monotherapy superior to SoC, but add-on monotherapy not superior to SoC and combination therapy not better than backbone monotherapy\r\n3: Backbone monotherapy superior to SoC and combination therapy superior to backbone monotherapy, but add-on monotherapy not superior to SoC \r\n4: Backbone monotherapy superior to SoC and combination terapy superior to backbone monotherapy (increased combination treatment effect compared to setting 4), but add-on monotherapy not superior to SoC \r\n5: Both monotherapies are superior to SoC, but combination therapy is not better than monotherapies\r\n6: Both monotherapies are superior to SoC and combination therapy is better than monotherapies \r\n7: Both monotherapies are superior to SoC and combination therapy is superior to monotherapies (increased combination treatment effect compared to setting 7) \r\n8: Global null hypothesis; 9: Global null hypothesis with higher response rates \r\n10: Backbone monotherapy superior to SoC, add-on monotherapy has 50:50 chance to be superior to SoC; combination therapy interaction effect can either be antagonistic/non-existent, additive or synergistic (with equal probabilities) \r\n11: Time-trend null scenario; every new cohort (first cohort c = 1, second cohort c = 2, ...) will have SoC response rate that is by 3%-points higher than that of the previous cohort \r\n12: Time-trend scenario, whereby monotherapies superior to SoC and combination therapy superior to monotherapies; every new cohort (first cohort c = 1, second cohort c = 2, ...) will have SoC response rate that is by 3%-points higher than that of the previous cohort \r\n13: Analogous to setting 7, but SoC response rate is 20% \r\n14: Analogous to setting 8, but SoC response rate is 20%\"\r\n\r\nggplot(sum, aes(x=factor(ShortTermEndpointQuality), y=mn, fill=factor(InterimFutilityStopping))) +\r\n  geom_bar(stat=\"identity\", position=\"dodge\") +\r\n  scale_fill_manual(\"Futility Stopping? \", labels = c(\"No\", \"Yes\"), \r\n                    values = c(\"#1b9e77\", \"#d95f02\")) +\r\n  scale_x_discrete(\"Short Term Endpoint Quality\") +\r\n  scale_y_continuous(\"Average Number of Patients Enrolled\") +\r\n  facet_wrap(~TreatmentEfficacySetting) +\r\n  labs(title = \"Effect of Short Term Endpoint Quality on Average Number of Patients Enrolled, by Treatment Effect Scenario\",\r\n       caption = cohort_text , align=\"left\") +\r\n  theme(text=element_text(\r\n    colour = my_dgrey,\r\n    size = 14),\r\n    panel.background=element_rect(fill=\"white\"),\r\n    panel.border=element_rect(fill=NA),\r\n    panel.grid=element_line(colour = my_lgrey,\r\n                            linewidth = 0.5,\r\n                            linetype = 1),\r\n    axis.line=element_line(colour = my_dgrey,\r\n                           linewidth = 0.5,\r\n                           linetype = 1),\r\n    axis.text=element_text(\r\n      colour = my_dgrey,\r\n      size = 14),\r\n    axis.title=element_text(\r\n      colour = my_dgrey,\r\n      size =14),\r\n    plot.caption = element_text(hjust = 0, face= \"italic\")\r\n  ) \r\n\r\n\r\n\r\n\r\n\r\n",
    "preview": "posts/2024-12-01-wonderful-wednesdays-june-2024/./images/power_TomMarlow_2024-06-04 - T M.jpg",
    "last_modified": "2025-08-22T14:49:32+02:00",
    "input_file": {}
  },
  {
    "path": "posts/2024-09-12-wonderful-wednesdays-may-2024/",
    "title": "Wonderful Wednesdays May 2024",
    "description": "In almost every study there is a flow chart to present the patient's path through the trial. What could the next level of study flow charts look like? Sandard study flow charts are basically organised lookup tables. A true visualisation can do much more. For example colour coding or indenting boxes can help organising. Also additional information can be embedded. This can easily done in R. For patient disposition Sankey diagrams can be extremely useful. This is even more powerful if used interactively. People charts even go without explanation.",
    "author": [
      {
        "name": "PSI VIS SIG",
        "url": "https://www.psiweb.org/sigs-special-interest-groups/visualisation"
      }
    ],
    "date": "2024-05-08",
    "categories": [
      "Study flow charts",
      "Wonderful Wednesdays"
    ],
    "contents": "\r\nStudy flow charts\r\nIn almost every study there is a flow chart to present the patient’s\r\npath through the trial. What could the next level of study flow charts\r\nlook like? Sandard study flow charts are basically organised lookup\r\ntables. A true visualisation can do much more. For example colour coding\r\nor indenting boxes can help organising. Also additional information can\r\nbe embedded. This can easily done in R. For patient disposition Sankey\r\ndiagrams can be extremely useful. This is even more powerful if used\r\ninteractively. People charts even go without explanation.\r\nA description of the challenge can be found here.\r\nA recording of the session can be found here.\r\n\r\nExample 1. Typical Study\r\nFlow Diagram\r\nhigh resolution image\r\nlink to code\r\n\r\nExample 2. Novel Study Flow\r\nChart\r\nhigh resolution image\r\nlink to code\r\n\r\nExample 3. Typical\r\nStudy Disposition Chart\r\nhigh resolution image\r\nlink to code\r\n\r\nExample 4. Automate in R\r\n\r\nhigh resolution image\r\nlink to code\r\n\r\nExample 5. Novel Study\r\nDisposition Chart\r\nhigh resolution\r\nimage\r\n(A summary of the discussion will be added shortly.)\r\nlink to code\r\n\r\nExample 6. Individual\r\nsubjects\r\nhigh resolution image\r\nhigh resolution image\r\nhigh resolution image\r\nhigh resolution image\r\nlink to code\r\nCode\r\n\r\nExample 1. Typical\r\nStudy Flow Diagram\r\nNo code available.\r\nBack to blog\r\n\r\nExample 2. Novel Study Flow\r\nChart\r\nNo code available.\r\nBack to blog\r\n\r\nExample 3. Typical\r\nStudy Disposition Chart\r\nNo code available.\r\nBack to blog\r\n\r\nExample 4. Automate in R\r\n\r\nBack to blog\r\n\r\nExample 5. Novel\r\nStudy Disposition Chart\r\nNo code available.\r\nBack to blog\r\n\r\nExample 6. Individual\r\nsubjects\r\nNo code available.\r\nBack to blog\r\n\r\n\r\n\r\n",
    "preview": "posts/2024-09-12-wonderful-wednesdays-may-2024/./images/Sankey - SNZ Skrivanek.png",
    "last_modified": "2025-08-22T14:49:32+02:00",
    "input_file": {},
    "preview_width": 800,
    "preview_height": 334
  },
  {
    "path": "posts/2024-09-10-wonderful-wednesdays-april-2024/",
    "title": "Wonderful Wednesdays April 2024",
    "description": "As statisticians, we often have to deal with power or sample size calculations. It can be very beneficial to visualise the impact that different factors have on the sample size or power. Produce data visualisation(s) or share tools that help your audience understand how power and sample size calculations work and what impacts the actual results of these calculations.",
    "author": [
      {
        "name": "PSI VIS SIG",
        "url": "https://www.psiweb.org/sigs-special-interest-groups/visualisation"
      }
    ],
    "date": "2024-04-10",
    "categories": [
      "Power Calculations",
      "Wonderful Wednesdays"
    ],
    "contents": "\r\nPower and sample size\r\ncalculations\r\nBackground:\r\nAs statisticians, we often have to deal with power or sample size\r\ncalculations. It can be very beneficial to visualise the impact that\r\ndifferent factors have on the sample size or power.\r\nChallenge:\r\nProduce data visualisation(s) or share tools that help your audience\r\nunderstand how power and sample size calculations work and what impacts\r\nthe actual results of these calculations.\r\nYou can pick a design with\r\nany number of treatment groups\r\na continuous, categorical/binary, or survival endpoint\r\nany kind of a null hypothesis (leading, for example, to a\r\nsuperiority or non-inferiority test)\r\nA description of the challenge can be found here.\r\nA recording of the session can be found here.\r\n\r\nExample 1. Shiny App\r\n\r\nThe app can be found here.\r\nlink to code\r\n\r\nExample 2. Statulator Tool\r\n\r\nThe tool can be found here.\r\nlink to code\r\n\r\nExample 3. Trellised Power\r\nCurves\r\nhigh resolution image\r\nlink to code\r\n\r\nExample 4. Power Analysis\r\nSoftware\r\n\r\nThe software can be found here.\r\nlink to code\r\nCode\r\n\r\nExample 1. Shiny App\r\n\r\n\r\nlibrary(tidyverse)\r\nlibrary(cowplot)\r\nlibrary(ggtext)\r\nlibrary(stringr)\r\n\r\nui <- fluidPage(\r\n  \r\n  # Application title\r\n  titlePanel(\"Power and Sample Size Tool\"),\r\n  \r\n  # Sidebar with a slider input for number of bins \r\n  sidebarLayout(\r\n    sidebarPanel(\r\n      numericInput(inputId = \"ALPHA\",\r\n                   label = h4(\"Alpha\"),\r\n                   value = 0.05, min = 0, max = 1),\r\n      numericInput(inputId = \"SD\",\r\n                  label = h4(\"Standard deviation\"),\r\n                  value = 50),\r\n      numericInput(inputId = \"TE\",\r\n                  label = h4(\"Average treatment difference (drug - placebo)\"),\r\n                  value = 15),\r\n     sliderInput(inputId = \"N\",\r\n                       label = h4(\"Sample size (per arm)\"),\r\n                       min = 0,\r\n                       max = 500,\r\n                       value = 200,\r\n                       step=10),\r\n    ),\r\n   \r\n\r\n    # Show a plot of the generated distribution\r\n    mainPanel(\r\n      plotOutput(outputId = \"myPlot1\"\r\n                 , width = \"800px\", height = \"1000px\"))\r\n    )\r\n  )\r\n\r\nserver <- function(input, output, session) {\r\n\r\n   output$myPlot1 <- renderPlot({\r\n\r\n    n <- as.numeric(input$N)\r\n    sd <- as.numeric(input$SD)\r\n    alpha <- as.numeric(input$ALPHA)\r\n    te <- as.numeric(input$TE)\r\n    \r\n    sides <- 1   \r\n    se_diff = sqrt(2*(sd^2/n))\r\n    power1 <- power.t.test(n = n, delta = te, sd = sd, sig.level = alpha,\r\n                           power = NULL,\r\n                           type = \"two.sample\",\r\n                           alternative = \"two.sided\")\r\n    powern <- power1$power\r\n    powerc <-  paste0(\"Power: \", round(powern, 2)*100, \"%\")\r\n \r\n    # Null   \r\n    mu_null <- 0\r\n    lower_null <- -3 * se_diff + mu_null \r\n    upper_null <- 3 * se_diff + mu_null \r\n    crit_null <- qnorm(1-alpha/2, mean = mu_null, sd = se_diff)\r\n    crit <- paste0(\"Critical value: \", round(crit_null, 1))\r\n    fpos <- paste0(\"False positive rate: \", round(alpha, 2)*100, \"%\")\r\n    fneg <- paste0(\"False negative rate: \", round(1-powern, 2)*100, \"%\")\r\n    x_null <- seq(lower_null, upper_null, length = 1000) \r\n    y_null <- dnorm(x_null, mu_null, se_diff)\r\n    df_null <- data.frame(cbind(x_null, y_null))\r\n    \r\n    df_rej_null_r <- df_null %>% \r\n      filter(x_null > crit_null) %>% \r\n      arrange(desc(x_null))\r\n    \r\n    df_rej_null_l <- df_null %>% \r\n      filter(x_null < crit_null*-1) %>% \r\n      arrange(x_null)\r\n    \r\n    temp_r <- data.frame(x_null = crit_null, y_null = df_rej_null_r$y_null[1])\r\n    temp_l <- data.frame(x_null = crit_null*-1, y_null = df_rej_null_l$y_null[1])\r\n    df_rej_null_r <- rbind(temp_r, df_rej_null_r)\r\n    df_rej_null_l <- rbind(temp_l, df_rej_null_l)\r\n    \r\n    # Alternative\r\n    mu_alt <- te \r\n    lower_alt <- -3 * se_diff + mu_alt \r\n    upper_alt <- 3 * se_diff + mu_alt \r\n    x_alt <- seq(lower_alt, upper_alt, length = 1000) \r\n    y_alt <- dnorm(x_alt, mu_alt, se_diff)\r\n    df_alt <- data.frame(cbind(x_alt, y_alt))\r\n    \r\n    df_rej_alt_l <- df_alt %>% \r\n      filter(x_alt < crit_null) %>% \r\n      arrange(x_alt)\r\n\r\n    temp <- data.frame(x_alt = crit_null, y_alt = df_rej_alt_l$y_alt[1])\r\n    df_rej_alt_l2 <- rbind(df_rej_alt_l, temp)\r\n    \r\n    df_rej_alt_r <- df_alt %>% \r\n      filter(x_alt > crit_null) %>% \r\n      arrange(desc(x_alt))\r\n    \r\n    temp <- data.frame(x_alt = crit_null, y_alt = df_rej_alt_r$y_alt[1])\r\n    df_rej_alt_r2 <- rbind(temp, df_rej_alt_r)\r\n    \r\n\r\n\r\n gnull <-  ggplot(df_null, aes(x = x_null, y = y_null)) +\r\n      geom_polygon(data = df_null, color=\"black\", fill=\"white\") +\r\n      geom_polygon(data = df_rej_null_r, color=\"black\", fill=\"#fb6a4a\", alpha=0.9) +\r\n      geom_polygon(data = df_rej_null_l, color=\"black\", fill=\"#fb6a4a\", alpha=0.9) +\r\n      geom_segment(x=crit_null, xend=crit_null, y=y_null[1], yend=y_null[500], color=\"#2b8cbe\", linetype=\"dashed\") +\r\n      geom_segment(x=mu_null, xend=mu_null, y=0, yend=y_null[500], color=\"black\", linetype=\"dotted\") +\r\n      scale_x_continuous(limits = c(lower_null, upper_alt)) +\r\n      theme(plot.title = element_markdown(colour = \"#636363\", size = 12),\r\n            panel.background=element_blank(),\r\n            axis.line.x=element_line(color=\"black\"),\r\n            axis.line.y=element_blank(),\r\n            axis.ticks.x=element_line(color=\"black\"),\r\n            axis.ticks.y=element_blank(),\r\n            axis.title=element_blank(),\r\n            axis.text.y=element_blank(),\r\n            axis.text.x=element_text(color=\"black\", size=20)) +\r\n   annotate(\"text\", x = lower_null, y = y_null[500]*1.1, color=\"#252525\", label = \"Null Hypothesis\", hjust=0, size=8) +\r\n   annotate(\"text\", x = crit_null+upper_alt/80, y = y_null[500]*0.6, color=\"#2b8cbe\", label = crit, hjust=0, size=8)  +\r\n   annotate(\"text\", x = crit_null+upper_alt/80, y = y_null[500]*0.5, color=\"#fb6a4a\", label = fpos, hjust=0, size=8)\r\n    \r\n    galt <- ggplot(df_alt, aes(x = x_alt, y = y_alt)) +\r\n      geom_polygon(data = df_alt, color=\"black\", fill=\"white\") +\r\n      geom_polygon(data = df_rej_alt_r2, color=\"black\", fill=\"#74c476\") +\r\n      geom_polygon(data = df_rej_alt_l2, color=\"black\", fill=\"#fb6a4a\") +\r\n      geom_segment(x=crit_null, xend=crit_null, y=y_alt[1], yend=y_alt[500], color=\"#2b8cbe\", linetype=\"dashed\") +\r\n      geom_segment(x=mu_alt, xend=mu_alt, y=0, yend=y_alt[500], color=\"black\", linetype=\"dotted\") +\r\n      scale_x_continuous(\"Treatment Effect: (treatment - placebo)\",\r\n                         limits = c(lower_null, upper_alt)) +\r\n       theme(panel.background=element_blank(),\r\n            axis.line.x=element_line(color=\"#252525\"),\r\n            axis.line.y=element_blank(),\r\n            axis.ticks.x=element_line(color=\"#252525\"),\r\n            axis.ticks.y=element_blank(),\r\n            axis.title.x=element_text(color=\"#252525\", size=20),\r\n            axis.title.y=element_blank(),\r\n            axis.text.y=element_blank(),\r\n            axis.text.x=element_text(color=\"#252525\", size=20)) +\r\n      annotate(\"text\", x = lower_null, y = y_null[500]*0.9, color=\"#252525\", label = \"Alternative Hypothesis\", hjust=0, size=8) +\r\n      annotate(\"text\", x = lower_null, y = y_null[500]*0.6, color=\"#238b45\", label = powerc, hjust=0, size=8) +\r\n      annotate(\"text\", x = lower_null, y = y_null[500]*0.5, color=\"#fb6a4a\", label = fneg, hjust=0, size=8)\r\n    \r\n    \r\n    title0 <- ggdraw() + draw_label(\"Test title\", size = 22)\r\n    plot_grid(gnull, galt, ncol=1, rel_heights = c(50, 50), align = \"v\")\r\n    \r\n     }) \r\n\r\n   output$myPlot2 <- renderPlot({\r\n     \r\n   df <- data.frame(matrix(nrow=1, ncol = 1))\r\n   names(df) <- \"percentage\"\r\n   df$percentage <- power\r\n   df <- df %>% mutate(label = paste0(round(percentage, 2)*100, \"%\"))\r\n   \r\n   ggplot(data=df) +\r\n     geom_rect(aes(ymax=1, ymin=0, xmax=2, xmin=1), fill =\"#ece8bd\") +\r\n     geom_rect(aes(ymax = percentage, ymin = 0, xmax = 2, xmin = 1), fill = \"#74c476\") + \r\n     coord_polar(theta = \"y\",start=-pi/2) + xlim(c(0, 2)) + ylim(c(0,2)) +\r\n     geom_text(aes(x = 0, y = 0, label = label), colour=\"#74c476\", size=14) +\r\n     # geom_text(aes(x=1.5, y=1.5), label=\"Power\",  size=4.2) + \r\n     theme_void() +\r\n     # scale_colour_manual(values = c(\"red\"=\"#C9146C\", \"orange\"=\"#DA9112\", \"green\"=\"#129188\")) +\r\n     theme(strip.background = element_blank(),\r\n           strip.text.x = element_blank()) \r\n   }) \r\n}\r\n\r\nshinyApp(ui, server)\r\n\r\n\r\n\r\nBack to blog\r\n\r\nExample 2. Statulator Tool\r\nNo code available.\r\nBack to blog\r\n\r\nExample 3. Trellised Power\r\nCurves\r\n\r\n\r\n# Wonderful Wednesday\r\n# Statistical Power\r\n\r\n# by Tom Marlow\r\n\r\n\r\n# T-test that shows poewr to detcet difference of 5 ot 8% in EF\r\n\r\n# Assumptions\r\n\r\nlibrary(tidyverse)\r\nlibrary(pwr)\r\n\r\nfn_pwr <- function(n, d) {\r\n  power <- pwr.t.test(n = n,\r\n                      d = d,\r\n                      sig.level = 0.05,\r\n                      alternative = \"two.sided\",\r\n                      type = \"two.sample\")$power\r\n  return(power * 100)\r\n}\r\n\r\nssize = c(2:12)\r\nmsd <- tibble(effect = rep(c(6, 8, 10), each = 3),\r\n              sd_inc = rep(c(1, 1.25, 1.5), 3)) %>%\r\n  mutate(sd = 4 * sd_inc) %>%\r\n  mutate(delta = effect / sd)\r\n\r\npwr_tab <- tibble(effect = factor(rep(msd$effect, each = length(ssize)),\r\n                                  levels = c(6, 8, 10),\r\n                                  labels = c(\"6%\", \"8%\", \"10%\")),\r\n                  sd_inc = as.factor(rep(msd$sd_inc, each = length(ssize))),\r\n                  n = rep(ssize, length(msd$delta)),\r\n                  d = rep(msd$delta, each = length(ssize))) %>%\r\n  mutate(power = fn_pwr(n, d)) \r\n\r\npwr_fig <- ggplot(data = pwr_tab,\r\n                  aes(x = n, y = power, colour = sd_inc)) +\r\n  geom_line() +\r\n  geom_hline(yintercept = 80) +\r\n  geom_line(linewidth = 1) +\r\n  scale_x_continuous(breaks = ssize, name = \"Sample size\") +\r\n  scale_y_continuous(breaks = seq(0, 100, by = 20)) +\r\n  labs(\r\n    y = \"Power (%)\",\r\n    title = \"Power to detect deltas of 6, 8 and 10% in ejection fraction\",\r\n    subtitles = \"Two-sided, two-sample t-test, alpha=0.05, sd=4\",\r\n    colour = \"SD increase\"\r\n  ) +\r\n  geom_point(size = 2, shape = 21, fill = \"white\") +\r\n  theme_bw() +\r\n  theme(\r\n    axis.text = element_text(size = 10),\r\n    axis.title = element_text(size = 12),\r\n    panel.grid.minor = element_blank(),\r\n    legend.position = \"bottom\") +\r\n  scale_colour_viridis_d() +\r\n  facet_wrap(effect ~ .)\r\n\r\npwr_fig\r\n\r\n\r\n\r\nBack to blog\r\n\r\nExample 4. Power Analysis\r\nSoftware\r\nNo code available.\r\nBack to blog\r\n\r\n\r\n\r\n",
    "preview": "posts/2024-09-10-wonderful-wednesdays-april-2024/./images/power - T M.jpg",
    "last_modified": "2025-08-22T14:49:32+02:00",
    "input_file": {}
  },
  {
    "path": "posts/2024-09-09-wonderful-wednesdays-march-2024/",
    "title": "Wonderful Wednesdays March 2024",
    "description": "Produce data visualisation(s) providing insights into how microbiome profiles change over time and what the differences are in microbiome profiles between Pre-Term Birth and Term Birth.",
    "author": [
      {
        "name": "PSI VIS SIG",
        "url": "https://www.psiweb.org/sigs-special-interest-groups/visualisation"
      }
    ],
    "date": "2024-03-13",
    "categories": [
      "Microbiome",
      "Wonderful Wednesdays"
    ],
    "contents": "\r\nMicrobiome dataset\r\nMulti-Omic Microbiome Study:Pregnancy Initiative (MOMS-PI) is part\r\nof the longitudinal Human Microbiome Project (HMP)\r\nMOMS-PI Pre-Term Birth study dataset generated from a case-control\r\nstudy of 194 women predominantly of African ancestry, who delivered\r\nspontaneously preterm, and 388 case-matched women who delivered at\r\nterm.\r\nFocus on vaginal microbiome profiles from pregnant women.\r\nChallenge:\r\nProduce data visualisation(s) providing insights into if the vaginal\r\nmicrobiome profiles can be associated with Pre-Term Birth.\r\nHow do microbiome profiles change over time?\r\nWhat are the differences in microbiome profiles between Pre-Term\r\nBirth and Term Birth?\r\nA description of the challenge can be found here.\r\nA recording of the session can be found here.\r\n\r\nExample 1. Wheel charts\r\nhigh resolution\r\nimage\r\nAccessibility check:\r\nhigh\r\nresolution image\r\nlink to code\r\n\r\nExample 2. Raincloud Plot\r\n(App)\r\n\r\nThe app can be found here\r\nlink to code\r\n\r\nExample 3. Line plots\r\nhigh\r\nresolution image\r\nlink to code\r\n\r\nExample 4. Variance\r\ncomponents\r\n\r\nThe pptx file can be found here.\r\nlink to code\r\nCode\r\n\r\nExample 1. Wheel chart\r\n\r\n\r\nlibrary(readr)\r\nlibrary(tidyr)\r\nlibrary(tidyverse)\r\nlibrary(ggplot2)\r\nlibrary(cowplot)\r\nlibrary(RColorBrewer)\r\nlibrary(paletteer)\r\nlibrary(colorspace)\r\n\r\n\r\n################################################\r\n# Combine abundance, taxonomy and clinical data\r\n\r\nclin1 <- read_csv2(\"./Data/Metadata.csv\") %>%\r\n  arrange(subject_id, visit_number)\r\n\r\ntax <- read_csv2(\"./Data/Taxonomy_info.csv\")\r\n\r\nabun1 <- read_csv2(\"./Data/Relative_abundance.csv\") %>%\r\n  gather(key = \"sample_id\", value = \"Value\", -taxID) %>%\r\n  group_by(taxID, sample_id) %>%\r\n  filter(Value>0)\r\n\r\nabun3 <- left_join(clin1, abun1, by = \"sample_id\") \r\nabun4 <- left_join(tax, abun3, by = \"taxID\") %>% \r\n  arrange(subject_id, visit_number, taxID)\r\n\r\n################################################\r\n# Identify most prevalent taxIDs and subset data\r\n\r\nnum_gen <- 6\r\n\r\ntax_prev <- abun4 %>% \r\n  group_by(genus) %>% \r\n  summarise(mn = mean(Value)) %>% \r\n  arrange(desc(mn)) %>% \r\n  select(genus) \r\n\r\ntax_prev2 <- tax_prev[1:num_gen,] %>% \r\n  as_vector()\r\n\r\nabun5 <- abun4 %>% \r\n  filter(genus %in% tax_prev2)\r\n\r\n################################################\r\n# Groups subjects by most prevalent genus\r\n\r\noverall_most.prev<- abun5 %>% \r\n  group_by(genus) %>% \r\n  summarise(sum = sum(Value)) %>% \r\n  arrange(desc(sum)) %>% \r\n  select(genus) %>% \r\n  mutate(sort.order = row_number())\r\n\r\n################################################\r\n# Create plots\r\n\r\nmyColors <- brewer.pal(num_gen,\"Set1\")\r\nnames(myColors) <- levels(overall_most.prev$genus)\r\n\r\nmake.plot <- function(gp, vs) {\r\n\r\n  tmp <- abun5 %>% \r\n    filter(group == gp & visit_number == vs) %>% \r\n    group_by(subject_id, genus) %>% \r\n    summarise(sum = sum(Value)) %>% \r\n    arrange(subject_id, desc(sum))\r\n  # select(subject_id, genus, Value)\r\n\r\n  sub_most.prev <- tmp %>% \r\n    group_by(subject_id, genus) %>% \r\n    arrange(subject_id, desc(sum)) %>% \r\n    group_by(subject_id) %>%\r\n    slice(1) %>% \r\n    select(subject_id, genus)\r\n  \r\n  sub_most.prev2 <- left_join(sub_most.prev, overall_most.prev, by = \"genus\") %>% \r\n    ungroup() %>% \r\n    select(subject_id, sort.order)\r\n  \r\n  tmp2 <- left_join(tmp, sub_most.prev2, by = \"subject_id\")\r\n  \r\n  subID <- tmp2 %>% \r\n    group_by(sort.order, subject_id) %>% \r\n    distinct(subject_id) %>% \r\n    arrange(sort.order) %>% \r\n    ungroup() %>% \r\n    mutate(new.subjid = row_number()) %>% \r\n    select(subject_id, new.subjid)\r\n  \r\n  tmp3 <- left_join(tmp2, subID, by = \"subject_id\") \r\n  \r\n  ggplot(tmp3, aes(fill=genus, y=sum, x=new.subjid)) + \r\n    geom_bar(show.legend = TRUE,\r\n             position=\"fill\", stat=\"identity\", width=1, color=\"black\", linewidth=0.1) +\r\n    coord_polar(theta=\"x\") +\r\n    scale_fill_manual(name = \"genus\", values = myColors) +\r\n    scale_y_continuous(limits=c(-0.2, 1)) +\r\n    theme(\r\n      panel.background=element_rect(fill=\"white\"),\r\n      axis.text=element_blank(),\r\n      axis.ticks=element_blank(),\r\n      axis.title=element_blank(),\r\n      legend.text=element_text(size=14),\r\n      legend.title=element_text(size=14)\r\n    ) +\r\n    annotate(\"text\", label = str_c(\"Visit \", vs), x = 0, y = -0.2, color = \"black\", size=5)\r\n}\r\n\r\np1 <- make.plot(\"Preterm delivery\", 1)\r\np2 <- make.plot(\"Preterm delivery\", 2)\r\np3 <- make.plot(\"Preterm delivery\", 3)\r\np4 <- make.plot(\"Preterm delivery\", 4)\r\np5 <- make.plot(\"Term delivery\", 1)\r\np6 <- make.plot(\"Term delivery\", 2)\r\np7 <- make.plot(\"Term delivery\", 3)\r\np8 <- make.plot(\"Term delivery\", 4)\r\n\r\np_ptd <- plot_grid(\r\n  p1 + theme(legend.position=\"none\"),\r\n  p2 + theme(legend.position=\"none\"),\r\n  p3 + theme(legend.position=\"none\"),\r\n  p4 + theme(legend.position=\"none\"),\r\n  align = 'vh',\r\n  hjust = -1,\r\n  ncol = 4,\r\n  nrow = 1\r\n)\r\n\r\np_td <- plot_grid(\r\n  p5 + theme(legend.position=\"none\"),\r\n  p6 + theme(legend.position=\"none\"),\r\n  p7 + theme(legend.position=\"none\"),\r\n  p8 + theme(legend.position=\"none\"),\r\n  align = 'vh',\r\n  labels = c(\"  \", \" \", \" \", \" \"),\r\n  hjust = -1,\r\n  ncol = 4,\r\n  nrow = 1\r\n)\r\n\r\n################################################\r\n# Formatting and output to file\r\n\r\ntitle0 <- ggdraw() +\r\n  draw_label(\"Longitudinal Human Microbiome Project (MOMS-PI Pre-Term Birth Study)\\n\", size = 20, color = \"blue\")\r\n\r\ntitle1 <- ggdraw() +\r\n  draw_label(\"Pre-Term Delivery\", size = 22)\r\n\r\ntitle2 <- ggdraw() + \r\n  draw_label(\"Term Delivery\", size = 22)\r\n\r\nlegend <- get_legend(\r\n  p2 + theme(legend.box.margin = margin(0, 0, 0, 12))\r\n)\r\n\r\ncap <- \"How to read this chart: Each wheel represents a set of samples from the Pre-Term or Term Delivery cohort at a particular visit. Each spoke in the wheel represents a single participant in the study, with coloured segments representing the relative abundance\r\nof bacteria types (genus) in the sample. For simplicity, only the most prevalent genus types and the first four visits are included. Approximately 75-80% of samples had Lactobacillus as the dominant genus, with no obvious difference between visits or cohorts.\"\r\n\r\ncaption <- ggdraw() + \r\n  draw_label(cap, size = 14)\r\n\r\nptd2 <- plot_grid(title1, p_ptd, ncol=1, rel_heights = c(1.7, 25), align = \"v\")  \r\ntd2 <- plot_grid(title2, p_td, ncol=1, rel_heights = c(1.7, 25), align = \"v\") \r\nall1 <- plot_grid(ptd2, td2, ncol=1, rel_heights = c(1, 1), align = \"v\") \r\nall2 <- plot_grid(all1, legend, rel_widths = c(3, 0.5))\r\nall3 <- plot_grid(title0, all2, caption, ncol=1, rel_heights = c(8, 100, 5), align = \"v\") +\r\n  theme(plot.background = element_rect(fill = \"white\", colour = \"blue\"))\r\n\r\nggsave(\"./WW_Mar24_01_OkabeIto.png\", all3, width=24, height=12, dpi=300)\r\n\r\n################################################\r\n\r\n\r\n# Accessibility check:\r\n\r\nlibrary(readr)\r\nlibrary(tidyr)\r\nlibrary(tidyverse)\r\nlibrary(ggplot2)\r\nlibrary(cowplot)\r\nlibrary(RColorBrewer)\r\nlibrary(paletteer)\r\nlibrary(colorspace)\r\nlibrary(dichromat)\r\n\r\n################################################\r\n# Combine abundance, taxonomy and clinical data\r\n\r\nclin1 <- read_csv2(\"./Data/Metadata.csv\") %>%\r\n  arrange(subject_id, visit_number)\r\n\r\ntax <- read_csv2(\"./Data/Taxonomy_info.csv\")\r\n\r\nabun1 <- read_csv2(\"./Data/Relative_abundance.csv\") %>%\r\n  gather(key = \"sample_id\", value = \"Value\", -taxID) %>%\r\n  group_by(taxID, sample_id) %>%\r\n  filter(Value>0)\r\n\r\nabun3 <- left_join(clin1, abun2, by = \"sample_id\") \r\nabun4 <- left_join(tax, abun3, by = \"taxID\") %>% \r\n  arrange(subject_id, visit_number, taxID)\r\n\r\n################################################\r\n# Identify most prevalent taxIDs and subset data\r\n\r\nnum_gen <- 6\r\n\r\ntax_prev <- abun4 %>% \r\n  group_by(genus) %>% \r\n  summarise(mn = mean(Value)) %>% \r\n  arrange(desc(mn)) %>% \r\n  select(genus) \r\n\r\ntax_prev2 <- tax_prev[1:num_gen,] %>% \r\n  as_vector()\r\n\r\nabun5 <- abun4 %>% \r\n  filter(genus %in% tax_prev2)\r\n\r\n################################################\r\n# Groups subjects by most prevalent genus\r\n\r\noverall_most.prev<- abun5 %>% \r\n  group_by(genus) %>% \r\n  summarise(sum = sum(Value)) %>% \r\n  arrange(desc(sum)) %>% \r\n  select(genus) %>% \r\n  mutate(sort.order = row_number())\r\n\r\n################################################\r\n# Create plots\r\n\r\nmyColors <- brewer.pal(num_gen,\"Set1\")\r\nprotan <- dichromat(myColors , type = \"protan\")\r\ndeutan <- dichromat(myColors , type = \"deutan\")\r\ntritan <- dichromat(myColors , type = \"tritan\")\r\n\r\nnames(myColors) <- levels(overall_most.prev$genus)\r\n\r\nmake.plot <- function(pal_lab,pal) {\r\n\r\n  tmp <- abun5 %>% \r\n    filter(group == \"Preterm delivery\" & visit_number == 1) %>% \r\n    group_by(subject_id, genus) %>% \r\n    summarise(sum = sum(Value)) %>% \r\n    arrange(subject_id, desc(sum))\r\n  # select(subject_id, genus, Value)\r\n\r\n  sub_most.prev <- tmp %>% \r\n    group_by(subject_id, genus) %>% \r\n    arrange(subject_id, desc(sum)) %>% \r\n    group_by(subject_id) %>%\r\n    slice(1) %>% \r\n    select(subject_id, genus)\r\n  \r\n  sub_most.prev2 <- left_join(sub_most.prev, overall_most.prev, by = \"genus\") %>% \r\n    ungroup() %>% \r\n    select(subject_id, sort.order)\r\n  \r\n  tmp2 <- left_join(tmp, sub_most.prev2, by = \"subject_id\")\r\n  \r\n  subID <- tmp2 %>% \r\n    group_by(sort.order, subject_id) %>% \r\n    distinct(subject_id) %>% \r\n    arrange(sort.order) %>% \r\n    ungroup() %>% \r\n    mutate(new.subjid = row_number()) %>% \r\n    select(subject_id, new.subjid)\r\n  \r\n  tmp3 <- left_join(tmp2, subID, by = \"subject_id\") \r\n  \r\n  ggplot(tmp3, aes(fill=genus, y=sum, x=new.subjid)) + \r\n    geom_bar(show.legend = TRUE,\r\n             position=\"fill\", stat=\"identity\", width=1, color=\"black\", linewidth=0.1) +\r\n    coord_polar(theta=\"x\") +\r\n    scale_fill_manual(name = \"genus\", values = pal) +\r\n    scale_y_continuous(limits=c(-0.2, 1)) +\r\n    theme(\r\n      panel.background=element_rect(fill=\"white\"),\r\n      axis.text=element_blank(),\r\n      axis.ticks=element_blank(),\r\n      axis.title=element_blank(),\r\n      legend.text=element_text(size=14),\r\n      legend.title=element_text(size=14)\r\n    ) +\r\n    labs(title=pal_lab)\r\n}\r\n\r\np1 <- make.plot(\"Original\", myColors)\r\np2 <- make.plot(\"Protanopic\", protan)\r\np3 <- make.plot(\"Deutanopic\", deutan)\r\np4 <- make.plot(\"Tritanopic\", tritan)\r\n\r\nall <- plot_grid(p1, p2, p3, p4, \r\n  align = 'vh',\r\n  hjust = -1,\r\n  ncol = 2,\r\n  nrow = 2\r\n)\r\n\r\n\r\nggsave(\"./WW_Mar24_colorblindness.png\", all, width=24, height=12, dpi=300)\r\n\r\n################################################\r\n\r\n\r\n\r\nBack to blog\r\n\r\nExample 2. Raincloud Plot\r\n(App)\r\n\r\n\r\nlibrary(shiny)\r\nlibrary(readr)\r\nlibrary(tidyr)\r\nlibrary(tidyverse)\r\nlibrary(ggplot2)\r\nlibrary(RColorBrewer)\r\nlibrary(introdataviz)\r\n\r\n# Define UI for application that draws a histogram\r\nnum_gen <- 15\r\nabun5 <- read_csv(\"./Data/abun5.csv\")\r\n\r\ngenus_list <- abun5 %>% \r\n  group_by(genus) %>% \r\n  summarise(mn = mean(Value)) %>% \r\n  arrange(desc(mn)) %>% \r\n  select(genus) %>% \r\n  slice_head(n=num_gen) \r\n\r\ngenus_list_v <- collect(select(genus_list, genus))[[1]]\r\n\r\nui <- fluidPage(\r\n  \r\n    titlePanel(\"Multi-Omic Microbiome Study:Pregnancy Initiative (MOMS-PI)\"),\r\n\r\n    sidebarLayout(\r\n        sidebarPanel(\r\n            radioButtons(\"genus_select\", \"Select Genus\", genus_list_v),\r\n            radioButtons(\"visit_select\", \"Select Visit\", c(\"All\", \"1\", \"2\", \"3\", \"4\" ,\"5\")),\r\n            sliderInput(\"age_select\", \"Select Age Range\", value = c(20, 50), step = 5, min = 20, max = 50, width=400),\r\n            radioButtons(\"income_select\", \"Select Annual Income\", c(\"All\", \"<US$20,000\", \"US$20,000-59,999\", \"US$60,000+\")),\r\n            width=3),\r\n\r\n        mainPanel(\r\n          shinycssloaders::withSpinner(\r\n            plotOutput(\"myplot\", width = \"1200px\", height = \"800px\")\r\n          )\r\n        )\r\n    )\r\n)\r\n\r\nserver <- function(input, output) {\r\n\r\n\r\n  rain_height <- .5\r\n  \r\n    output$myplot <- renderPlot({\r\n\r\n      if(input$visit_select == \"All\") {}\r\n      else {\r\n        abun5 <- abun5 %>% \r\n          filter(visit_number == input$visit_select)\r\n      }\r\n      \r\n      if(input$income_select == \"All\") {}\r\n      else {\r\n        abun5 <- abun5 %>% \r\n          filter(subject_annual_income == input$income_select)\r\n      }   \r\n      \r\n     abun5 <- abun5 %>% \r\n        filter(genus == input$genus_select) %>% \r\n        filter(subject_age > input$age_select[1], subject_age < input$age_select[2]) %>% \r\n        mutate(log_val = log(Value))\r\n     \r\n # browser()\r\n      ggplot(data=abun5, aes(x=\" \", y=log_val)) +\r\n        geom_flat_violin(aes(fill=group),\r\n                         trim=FALSE, alpha = 0.3,\r\n                         position = position_nudge(x = rain_height+.05)) +\r\n        geom_point(aes(colour = group), shape = 1, size = 3, alpha = .9, show.legend = FALSE,\r\n                   position = position_jitter(width = rain_height, height = 0)) +\r\n        scale_y_continuous(\"Log(Abundance)\") +\r\n        # scale_color_brewer(palette = \"Set1\") +\r\n        # scale_fill_brewer(palette = \"Set1\") +\r\n        coord_flip() +\r\n        theme(\r\n          panel.background=element_blank(),\r\n          axis.title.y=element_blank(),\r\n          axis.text.x=element_text(size = 15),\r\n          axis.line.x=element_line(color=\"grey\"),\r\n          axis.title.x=element_text(size = 18),\r\n          legend.text=element_text(size = 18),\r\n          legend.title=element_blank()\r\n        )\r\n      \r\n    })\r\n}\r\n\r\n# Run the application \r\nshinyApp(ui = ui, server = server)\r\n\r\n\r\n\r\nBack to blog\r\n\r\nExample 3. Line plots\r\n\r\n\r\n# Microbiome Challenge\r\n\r\n# WonderfulWednesday\r\n\r\nlibrary(tidyverse)\r\nlibrary(stringr)\r\nlibrary(scales)\r\nlibrary(RColorBrewer)\r\nlibrary(glue)\r\nlibrary(janitor)\r\nlibrary(readr)\r\n\r\nroot_dir <- here::here()\r\ntues_dir <- file.path(root_dir,\r\n                      \"microbiome\")\r\ntt_theme <- \"microbiome\"\r\nauthor_initials <- \"TomMarlow\"\r\nazTidyTuesday_date <- \"20240228\"\r\n\r\n# Relative abundance of each microbial community in each woman in pregnancy and the perinatal period\r\nra <- file.path(tues_dir, \"202402_Collaboration_DataVizESIG-BiomarkersESIG_relative_abundance.csv\")\r\n# Taxonomy information of each microbial community\r\nti <- file.path(tues_dir, \"202402_Collaboration_DataVizESIG-BiomarkersESIG_taxonomy_info.csv\")\r\n# Clinical information of each woman (simulated data)\r\nsm <- file.path(tues_dir, \"202402_Collaboration_DataVizESIG-BiomarkersESIG_simulated_metadata.csv\")\r\n\r\nrel_dat <- read.csv(ra, sep = \";\")\r\nsim_dat <- read.csv(sm, sep = \";\")\r\ntax_dat <- read.csv(ti, sep = \";\")\r\n\r\nrel_id <- rel_dat %>%\r\n  pivot_longer(.,\r\n               cols = 2:ncol(.),\r\n               names_to = \"id\",\r\n               values_to = \"rel_abu\",\r\n               values_drop_na = TRUE) %>%\r\n  mutate(sample_id = substr(id, 2, nchar(id))) %>%\r\n  filter(rel_abu != 0)\r\n\r\n# Merge to get audio characteristics\r\n\r\nmicrob <- merge(x = rel_id, \r\n                y = sim_dat, \r\n              by.x = c(\"sample_id\"), \r\n              by.y = c(\"sample_id\"), \r\n              all.y = FALSE) \r\n        \r\n\r\n# Taxonomy details\r\n\r\nmicro_tax <- merge(x = microb, \r\n                y = tax_dat, \r\n                by.x = c(\"taxID\"), \r\n                by.y = c(\"taxID\"), \r\n                all.y = FALSE) %>%\r\n  mutate(abu = as.numeric(gsub(\",\", \".\", rel_abu)))\r\n\r\ntable(micro_tax$phylum, micro_tax$group)\r\ntable(micro_tax$class, micro_tax$group)\r\n\r\ntable(sim_dat$subject_id)\r\n\r\nmsd_pat <- micro_tax %>%\r\n  group_by(group, subject_id, visit_number, class) %>%\r\n  summarise(suma = sum(abu)) %>%\r\n  mutate(sump = suma * 100) %>%\r\n  mutate(visits = if_else(visit_number >= 5, 5, visit_number)) %>%\r\n  mutate(Class = gsub(\"c__\", \"\", class))\r\n\r\nunique(msd_pat$Class)\r\n\r\ncls_avg <- msd_pat %>%\r\n  group_by(Class) %>%\r\n  summarise(mean = mean(sump)) %>%\r\n  arrange(-mean)\r\n\r\ncls_pop <- as.data.frame(table(msd_pat$Class)) %>%\r\n  arrange(-Freq) %>%\r\n  rename(Class = Var1)\r\n\r\nmsd_pat <- micro_tax %>%\r\n  group_by(group, subject_id, visit_number, phylum) %>%\r\n  summarise(suma = sum(abu)) %>%\r\n  mutate(sump = suma * 100) %>%\r\n  mutate(visits = if_else(visit_number >= 5, 5, visit_number)) %>%\r\n  mutate(Phylum = gsub(\"p__\", \"\", phylum))\r\nwrite.csv(msd_pat, file.path(tues_dir, \"pat.csv\"))\r\n\r\nphy_avg <- msd_pat %>%\r\n  group_by(Phylum) %>%\r\n  summarise(mean = mean(sump)) %>%\r\n  arrange(-mean)\r\n\r\nphy_pop <- as.data.frame(table(msd_pat$Phylum)) %>%\r\n  arrange(-Freq) %>%\r\n  rename(Phylum = Var1)\r\n\r\n# Remove low frequency phylums / classes\r\n\r\nphy_hi <- c(unlist(phy_pop$Phylum[phy_pop$Freq >= 20]))\r\ncls_hi <- c(unlist(cls_pop$Class[cls_pop$Freq >= 1000]))\r\n\r\n\r\n# Line plot\r\n\r\nlin_dat <- msd_pat %>%\r\n  group_by(Class, group, visit_number) %>%\r\n  summarise(meanab = mean(sump)) %>%\r\n  mutate(Class = factor(Class,\r\n                         levels = cls_avg$Class,\r\n                         labels = cls_avg$Class)) %>%\r\n  filter(Class %in% cls_hi) \r\n\r\nline_fig <- ggplot() +\r\n  geom_line(\r\n    data = lin_dat, linewidth = 2,\r\n    aes(\r\n      x = visit_number, y = meanab, group = group,\r\n      colour = group\r\n    )\r\n  ) +\r\n  xlab(\"\") +\r\n  ylab(NULL) +\r\n  labs(\r\n    title = \"Mean relative abundance by microbiome class, term and visit number\",\r\n    caption = \"Multi-Omic Microbiome Study: Pregnancy Initiative (MOMS-PI) is part of the longitudinal Human Microbiome Project (HMP)\",\r\n    colour = \"Term\",\r\n    x = \"Visit number\",\r\n    y = \"Mean abundance %\"\r\n  ) +\r\n  theme_bw() +\r\n  theme(\r\n    strip.text.x = element_text(size = 10),\r\n    axis.title = element_text(size = 10),\r\n    axis.text.y = element_text(size = 8),\r\n    axis.text.x = element_text(size = 8, angle = 0, hjust = .5),\r\n    legend.position = \"bottom\"\r\n  ) +\r\n  scale_color_viridis_d(option = \"viridis\") +\r\n  scale_fill_viridis_d(option = \"viridis\") +\r\n  facet_wrap(. ~ Class)\r\n\r\nline_fig\r\n\r\nggsave(\r\n  plot = line_fig,\r\n  filename = glue(\"{root_dir}/azTidyTuesday_{azTidyTuesday_date}_{tt_theme}_{author_initials}_{Sys.Date()}.jpg\"),\r\n  width = 16,\r\n  height = 9)\r\n\r\n\r\n\r\nBack to blog\r\n\r\nExample 4. Variance\r\ncomponents\r\nThe jmp file can be found here\r\nBack to blog\r\n\r\nExample 5. \r\nThe rmd file can be found here.\r\nBack to blog\r\n\r\n\r\n\r\n",
    "preview": "posts/2024-09-09-wonderful-wednesdays-march-2024/./images/WW_Mar24_01 - Steve Mallett.png",
    "last_modified": "2025-08-22T14:49:32+02:00",
    "input_file": {},
    "preview_width": 7200,
    "preview_height": 3600
  },
  {
    "path": "posts/2024-09-01-wonderful-wednesdays-february-2024/",
    "title": "Wonderful Wednesdays February 2024",
    "description": "Find a plot in a healthcare related publication and improve the visual presentation with only the data available from the publication.",
    "author": [
      {
        "name": "PSI VIS SIG",
        "url": "https://www.psiweb.org/sigs-special-interest-groups/visualisation"
      }
    ],
    "date": "2024-02-08",
    "categories": [
      "Wonderful Wednesdays"
    ],
    "contents": "\r\nImproving a plot\r\nFind a plot in a healthcare related publication and improve the\r\nvisual presentation with only the data available from the\r\npublication.\r\nA description of the challenge can be found here.\r\nA recording of the session can be found here.\r\n\r\nExample 1. AEs\r\nOriginal:\r\nhigh\r\nresolution image\r\nUpdated version:\r\n\r\nThe Shiny app can be found here.\r\nlink to code\r\n\r\nExample 2. COVID data\r\nOriginal:\r\nhigh resolution image\r\nUpdated version:\r\n\r\nThe Shiny app can be found here.\r\n\r\nlink to code\r\nExample 3. DLQI data I\r\nOriginal:\r\nhigh resolution image\r\nUpdated version:\r\nhigh resolution image\r\nlink to code\r\n\r\nExample 4. DLQI data II\r\nOriginal:\r\n\r\nhigh resolution image\r\nSource: Figure 2 in Muntyanu A, Gabrielli S, Donovan J, Gooderham M,\r\nGuenther L, Hanna S, et al. The burden of alopecia areata: A scoping\r\nreview focusing on quality of life, mental health and work productivity.\r\nJ Eur Acad Dermatol Venereol. 2023; 37: 1490–1520. https://doi.org/10.1111/jdv.18926\r\nUpdated version 1:\r\n\r\nhigh resolution\r\nimage\r\nUpdated version 2:\r\n\r\nhigh resolution\r\nimage\r\n\r\nlink to code\r\nCode\r\n\r\nExample 1. AEs\r\nNo code available.\r\nBack to blog\r\n\r\nExample 2. COVID data\r\n\r\n\r\nlibrary(tidyverse)\r\nlibrary(haven)\r\nlibrary(ggplot2)\r\nlibrary(readr)\r\n\r\n### Bring in data\r\n\r\n# Replacing missing counts with 0 assuming no deaths on dates where\r\n# no deaths reported for purpose of this plot\r\n# Also some negative numbers of deaths reported in plot, assuming\r\n# the negative sign added in error for purpose of this plot\r\ndf_raw <- read_csv(\"WHO-COVID-19-global-data.csv\") %>%\r\n  select(Date_reported, WHO_region, New_deaths) %>%\r\n  mutate(New_deaths = ifelse(is.na(New_deaths), 0, abs(New_deaths)))\r\n\r\n# Numeric variable for dates in order\r\n# Dataset contains 211 unique dates repeated across 240 countries\r\ndf_raw$date_n <- rep(c(1:211), times=240)\r\n\r\n# Total counts by region and overall\r\ndf_reg <- aggregate(df_raw$New_deaths,\r\n                    by=list(df_raw$date_n, df_raw$WHO_region),\r\n                    FUN=sum)\r\ndf_total <- aggregate(df_raw$New_deaths,\r\n                      by=list(df_raw$date_n),\r\n                      FUN=sum) \r\n\r\n### Function for plot\r\n\r\ncovid_plot <- function(Region, text_y, cap_text){\r\n  \r\n  # Data for other regions - ggplot below will stack \r\n  # this and data for region to get overall counts\r\n  # (Update - later fill these additional regions in white\r\n  #  so now somewhat redundant)\r\n  df_filt <- df_raw %>% filter(WHO_region != Region)\r\n  \r\n  df_other <- aggregate(df_filt$New_deaths,\r\n                        by=list(df_filt$date_n),\r\n                        FUN=sum) %>%\r\n    mutate(Group.2 = \"Other\")\r\n  \r\n  # Data for region of interest\r\n  df_red <- df_reg %>% filter(Group.2 == Region)\r\n  \r\n  df <- rbind(df_red, df_other) %>%\r\n    mutate(Group.2_n = as.factor(if_else(Group.2 == \"Other\", 1, 2)))\r\n  \r\n  outplot <- \r\n    ggplot() +\r\n    geom_area(data= df, aes(x = Group.1, y = x, \r\n                            group = Group.2_n, fill = Group.2_n)) + \r\n    scale_x_continuous(breaks = c(0, 53, 105, 157, 211),\r\n                       labels=c(\"05/01/2020\", \"03/01/2021\",\r\n                                \"02/01/2022\", \"01/01/2023\", \"14/01/2024\")) +\r\n    scale_fill_manual(values = c(\"white\", \"red\")) +\r\n    geom_line(data = df_total, mapping = aes(x = Group.1, y = x)) + \r\n    theme_bw() +\r\n    theme(\r\n      plot.title.position = \"plot\", \r\n      panel.border = element_blank(), \r\n      panel.grid.major.x = element_blank(), \r\n      panel.grid.minor.x = element_blank(),\r\n      panel.grid.minor.y = element_blank(), \r\n      axis.line.x = element_line(colour = \"black\"), \r\n      axis.ticks.y = element_blank(),\r\n      axis.text.x = element_text(margin = margin(t = 5, unit = \"pt\")),\r\n      axis.title.x = element_blank(),\r\n      axis.title.y = element_blank(),\r\n      legend.position = \"none\"\r\n    ) + \r\n    geom_segment(aes(x = 14+6/7, y = 0, xend = 14+6/7, yend = 80000),\r\n                 linetype=2) +\r\n    labs(title = \"Weekly COVID Deaths\",\r\n         caption = cap_text) +\r\n    annotate(geom=\"text\", x=78, y=90000, label=\"TOTAL\",\r\n             size=4, fontface=2) +\r\n    annotate(geom=\"text\", x=78, y=text_y, label = Region,\r\n             size=4, fontface=2, color = \"red\") +\r\n    annotate(geom=\"text\", x=14+6/7, y=82500, label=\" WHO Declares Pandemic\",\r\n             size=3, fontface=3)\r\n  \r\n  return(outplot)\r\n  \r\n  \r\n}\r\n\r\nAFRO_plot <- covid_plot(Region = \"AFRO\", text_y = 7500,\r\n           cap_text = \"AFRO = African Region\")\r\n\r\nAMRO_plot <- covid_plot(Region = \"AMRO\", text_y = 40000,\r\n           cap_text = \"AMRO = Region of the Americas\")\r\n\r\nEMRO_plot <- covid_plot(Region = \"EMRO\", text_y = 7500,\r\n           cap_text = \"EMRO = Eastern Mediterranean Region\")\r\n\r\nEURO_plot <- covid_plot(Region = \"EURO\", text_y = 25000,\r\n           cap_text = \"EURO = European Region\")\r\n\r\nSEARO_plot <- covid_plot(Region = \"SEARO\", text_y = 35000,\r\n           cap_text = \"SEARO = South-East Asian Region\")\r\n\r\nWPRO_plot <- covid_plot(Region = \"WPRO\", text_y = 7500,\r\n           cap_text = \"WPRO = Western Pacific Region\")\r\n\r\n\r\n\r\nBack to blog\r\n\r\nExample 3. DLQI data I\r\nNo code available.\r\nBack to blog\r\n\r\nExample 4. DLQI data II\r\nNo code available.\r\nBack to blog\r\n\r\n\r\n\r\n",
    "preview": "posts/2024-09-01-wonderful-wednesdays-february-2024/./images/dlqi_II_updated_2.png",
    "last_modified": "2025-08-22T14:49:31+02:00",
    "input_file": {},
    "preview_width": 675,
    "preview_height": 666
  },
  {
    "path": "posts/2024-09-01-wonderful-wednesdays-january-2024/",
    "title": "Wonderful Wednesdays January 2024",
    "description": "Best of 2023",
    "author": [
      {
        "name": "PSI VIS SIG",
        "url": "https://www.psiweb.org/sigs-special-interest-groups/visualisation"
      }
    ],
    "date": "2024-01-10",
    "categories": [
      "Wonderful Wednesdays"
    ],
    "contents": "\r\nYour favorite visualisation\r\nBest of 2023\r\nA description of the challenge can be found here.\r\nA recording of the session can be found here.\r\n\r\nExample 1.\r\nCumulative distribution function\r\nhigh\r\nresolution image\r\n\r\nExample 2. Vaccine\r\nefficiency\r\nhigh\r\nresolution image\r\n\r\nExample 3. Dirty data I\r\nhigh resolution image\r\n\r\nExample 4. Dirty data II\r\n\r\nhigh resolution image\r\n\r\nExample 5. Dumbbell or\r\nlollipop plot\r\nhigh resolution image\r\nExample 6. Double dot\r\nplot of DetectoR\r\nhigh resolution image\r\nCode\r\nThe code can be found in the original posts.\r\n\r\n\r\n\r\n",
    "preview": "posts/2024-09-01-wonderful-wednesdays-january-2024/./images/meas_inc - Bodo Kirsch - Steve Mallett.png",
    "last_modified": "2025-08-22T14:49:31+02:00",
    "input_file": {},
    "preview_width": 1000,
    "preview_height": 687
  },
  {
    "path": "posts/2023-12-17-wonderful-wednesdays-december-2023/",
    "title": "Wonderful Wednesdays December 2023",
    "description": "Demographic data display: The challenge is based on CDISC data. It is a standard ADSL data set for subject level data (demographics and baseline).",
    "author": [
      {
        "name": "PSI VIS SIG",
        "url": "https://www.psiweb.org/sigs-special-interest-groups/visualisation"
      }
    ],
    "date": "2023-12-13",
    "categories": [
      "Demographic data display",
      "Wonderful Wednesdays"
    ],
    "contents": "\r\nDemographic data display\r\nThe challenge is based on CDISC data. It is a standard ADSL data set\r\nfor subject level data (demographics and baseline)\r\nA description of the challenge can be found here.\r\nA recording of the session can be found here.\r\n\r\nExample 1. Animated density\r\nplot\r\nhigh\r\nresolution gif\r\nlink to code\r\n\r\nExample 2.\r\nInteractive trellis plot (plotly)\r\ninteractive\r\nversion\r\nlink to code\r\n\r\nExample 3. GGally 1\r\nhigh resolution image\r\nlink to code\r\n\r\nExample 4. GGally 2\r\nhigh resolution image\r\nlink to code\r\nCode\r\n\r\nExample 1. Animated density\r\nplot\r\n\r\n\r\nlibrary(ggplot2)\r\nlibrary(dplyr)\r\nlibrary(tidyr)\r\nlibrary(haven)\r\nlibrary(emojifont)\r\nlibrary(ggtext)\r\n\r\nadsl <- read_xpt(\"adsl.xpt\")\r\n\r\nadsl2 <- adsl %>%\r\n  mutate(agegp2 = cut(AGE, quantile(AGE, c(0:6/6)))) %>%\r\n  group_by(agegp2) %>%\r\n  arrange(AGE) %>%\r\n  select(agegp2, BMIBL, SEX, AGE) %>%\r\n  mutate(id = as.numeric(substr(agegp2,2,3))) %>%\r\n  drop_na(id)\r\n\r\n# Create a vector containing unique values for age group identifier\r\nid <- adsl2 %>%\r\n  group_by(id) %>%\r\n  slice(1) %>%\r\n  select(id) %>%\r\n  unlist() %>%\r\n  as.vector()\r\n\r\nfor (i in id) {\r\n  \r\n  ADSLloop <- adsl2 %>%\r\n    filter(id == i)\r\n  \r\n  plot <- ggplot(ADSLloop, aes(x = BMIBL, colour = SEX)) +\r\n    geom_density(show.legend = FALSE) +\r\n    geom_text(aes(x=25, y=0.19, label=\"Age Group:\"), size=16, color=\"#7570b3\") +\r\n    geom_text(aes(x=28, y=0.19, label=agegp2), size=16, color=\"#7570b3\") +\r\n    scale_x_continuous(\"BMI\", limits=c(15, 40)) +\r\n    scale_y_continuous(\"Frequency\", limits=c(0, 0.2)) +\r\n    scale_color_discrete(type=c(\"#1b9e77\", \"#d95f02\")) +\r\n    theme(plot.title = element_markdown(colour = \"#636363\",\r\n                                        size = 50),\r\n          panel.background=element_rect(fill=\"white\"),\r\n          panel.grid.major=element_line(colour = \"#f0f0f0\",\r\n                                        linewidth = 0.5,\r\n                                        linetype = 1),\r\n          axis.line=element_line(colour = \"#bdbdbd\",\r\n                                 linewidth = 0.5,\r\n                                 linetype = 1),\r\n          axis.text=element_text(\r\n            colour = \"#636363\",\r\n            size = 28),\r\n          axis.title=element_text(\r\n            colour = \"#636363\",\r\n            size = 32)) +\r\n    labs(title=\"<b>Distribution of BMI by Sex (<span style='color:#1b9e77'>Female<\/span> and <span style='color:#d95f02'>Male<\/span>) and  <span style='color:#7570b3'>Age Group<\/span><\/b>\") \r\n\r\n  ggsave(\r\n    filename = paste0(\"frames/plot\", sprintf(\"%03d\", i) , \".png\"),\r\n    plot = plot,\r\n    device = \"png\",\r\n    height = 1500,\r\n    width = 2757,\r\n    units = \"px\"\r\n  )\r\n}\r\n\r\n# Additional steps to create animated gif file:\r\n# 1. Install ImageMagick\r\n# 2. Open a command line\r\n# 3. cd to the folder containing the *.png files \r\n# 4. Enter the following command:\r\n#   magick convert -delay 150 -loop 0 *.png -scale 4800x2700 WW_Dec23_SM01.gif\r\n\r\n\r\n\r\nBack to blog\r\n\r\nExample 2.\r\nInteractive trellis plot (plotly)\r\n\r\n\r\nlibrary(plotly)\r\n\r\nadsl <- read_xpt(\"adsl.xpt\")\r\n\r\npl_colorscale=list(c(0.0, '#19d3f3'),\r\n                   c(0.333, '#19d3f3'),\r\n                   c(0.333, '#e763fa'),\r\n                   c(0.666, '#e763fa'),\r\n                   c(0.666, '#636efa'),\r\n                   c(1, '#636efa'))\r\n\r\nfig <- adsl %>%\r\n  plot_ly() \r\nfig <- fig %>%\r\n  add_trace(\r\n    type = 'splom',\r\n    dimensions = list(\r\n      list(label='Age', values=~AGE),\r\n      list(label='Height', values=~HEIGHTBL),\r\n      list(label='Weight', values=~WEIGHTBL),\r\n      list(label='BMI', values=~BMIBL)\r\n    ),\r\n    text=~TRT01P,\r\n    marker = list(\r\n      color = as.integer(adsl$TRT01PN),\r\n      colorscale = pl_colorscale,\r\n      size = 7,\r\n      line = list(\r\n        width = 1,\r\n        color = 'rgb(230,230,230)'\r\n      )\r\n    )\r\n  ) \r\n\r\nfig <- fig %>%\r\n  layout(\r\n    title= 'ADSL Data set',\r\n    plot_bgcolor='rgba(240,240,240, 0.95)'\r\n  )\r\n\r\nfig2 <-  fig %>% style(diagonal = list(visible = F))\r\nhtmlwidgets::saveWidget(as_widget(fig2), \"WW Dec2023b.html\")\r\n\r\n\r\n\r\nBack to blog\r\n\r\nExample 3. GGally 1\r\nNo code is available.\r\nBack to blog\r\n\r\nExample 4. GGally 2\r\nNo code is available.\r\nBack to blog\r\n\r\n\r\n\r\n",
    "preview": "posts/2023-12-17-wonderful-wednesdays-december-2023/./images/WW_Dec23_SM01 - Steve Mallett.gif",
    "last_modified": "2025-08-22T14:49:31+02:00",
    "input_file": {}
  },
  {
    "path": "posts/2023-12-17-wonderful-wednesdays-november-2023/",
    "title": "Wonderful Wednesdays November 2023",
    "description": "Gatekeeping Procedure: Results are provided from a simulation of a phase III study in schizophrenia patients, investigating efficacy at 3 dose levels (Low, Medium, High) versus placebo. The study includes a primary endpoint and two key secondary endpoints. The study includes a total of 9 hypotheses, and multiplicity adjustments are required to control for type I error.",
    "author": [
      {
        "name": "PSI VIS SIG",
        "url": "https://www.psiweb.org/sigs-special-interest-groups/visualisation"
      }
    ],
    "date": "2023-11-08",
    "categories": [
      "Gatekeeping Procedure",
      "Wonderful Wednesdays"
    ],
    "contents": "\r\nGatekeeping Procedure\r\nResults are provided from a simulation of a phase III study in\r\nschizophrenia patients, investigating efficacy at 3 dose levels (Low,\r\nMedium, High) versus placebo. The study includes a primary endpoint and\r\ntwo key secondary endpoints. The study includes a total of 9 hypotheses,\r\nand multiplicity adjustments are required to control for type I\r\nerror.\r\nA description of the challenge can be found here.\r\nA recording of the session can be found here.\r\n\r\nExample 1. Panel plot\r\nhigh resolution image\r\nlink to code\r\n\r\nExample 2. Response surface\r\nplot\r\nhigh resolution image\r\nlink to code\r\n\r\nExample 3. Trellis plot\r\n(Shiny app)\r\nhigh resolution image\r\n(A summary of the discussion will be added shortly.)\r\nlink to code\r\nCode\r\n\r\nExample 1. \r\nNo code is available.\r\nBack to blog\r\n\r\nExample 2. \r\nNo code is available.\r\nBack to blog\r\n\r\nExample 3. \r\nNo code is available.\r\nBack to blog\r\n\r\n\r\n\r\n",
    "preview": "posts/2023-12-17-wonderful-wednesdays-november-2023/./images/example_2.png",
    "last_modified": "2025-08-22T14:49:31+02:00",
    "input_file": {},
    "preview_width": 938,
    "preview_height": 825
  },
  {
    "path": "posts/2023-12-17-wonderful-wednesdays-october-2023/",
    "title": "Wonderful Wednesdays October 2023",
    "description": "Leverage visual analytics to identify data issues.",
    "author": [
      {
        "name": "PSI VIS SIG",
        "url": "https://www.psiweb.org/sigs-special-interest-groups/visualisation"
      }
    ],
    "date": "2023-10-11",
    "categories": [
      "data cleaning",
      "visual analytics",
      "Wonderful Wednesdays"
    ],
    "contents": "\r\n\r\nDirty Data\r\nLeverage visual analytics to identify data issues. Consider 4\r\nquestions on a Likert scale. 5 rating levels (Strongly disagree,\r\nDisagree, Neutral, Agree, Strongly Agree) coded as 1, 2, 3, 4 and 5,\r\nrespectively. The higher the number the better. 400 Subjects (200\r\nactive, 200 control).\r\n— # The data contains - USUBJID: Unique subject identifier to the 400\r\nsubjects - TRT: Either “Active” (200 patients) or “Control” (200\r\npatients) - Q1-Q4: results from 4 questionnaires evaluated on the Likert\r\nscale - AGE: age of the patient - SEX: sex of the patient - SITE: there\r\nare 10 sites numbered accordingly\r\n— # Use exploratory visual analytics to identify [data points that\r\nare not plausible, the SITE where patients were given the wrong\r\ninstructions and they interpreted the scale wrong and score 1 as 5, 5 as\r\n1, 2 as 4 and 4 as 2]\r\nA recording of the session can be found here: [Link to PSI Video on\r\nDemand] (https://psiweb.org/vod/item/psi-vissig-wonderful-wednesday-43-dirty-data)\r\n\r\nExample 1. Alluvial Chart\r\nhigh resolution image\r\nA paneled Alluvial plot was used to illustrate that Site 4 is\r\ndifferent from the other sites. The panels are by site 4 vs all other\r\nsites and within each of these groups they are paneled by treatment:\r\n‘Active’ and ‘Control’. The dimensions are the results from the 4\r\nquestionnaires: Q1, Q2, Q3 and Q4. We see that there are consistently\r\nhigher scores in the Control group and consistently lower scores in the\r\nActive group for Site 4 and the pattern is the exact opposite for the\r\nother sites, grouped together. In Site 4 you can see a thin band of\r\nscores from people that were consistently 1 across all questionnaires\r\nfor the Active group and you can see a thing band of scores that were\r\nconsistently 5 across all questionnaires for the Control group. You see\r\nthe exact opposite pattern for all other sites combined. This is\r\nevidence that Site 4 was a visual outlier from the data.\r\nThe missing data is included as value in each of the dimensions which\r\nis misleading since the data for each result is ordered. The “NA” at the\r\nbottom of the Active group for Site 4 makes it look like there are more\r\nanswers for the higher numbers (the y-axis is sorted from high to low)\r\nwhen in reality these probably would have been lower scores if they were\r\nnot missing.\r\nThe data viz was created using a code free, open source, web-based\r\nsoftware called rawgraphs\r\n\r\nExample 2. Histograms\r\nhigh resolution image\r\nThe author correctly identified the site that had incorrect data for\r\nall questionnaire data, but it is still a mystery to the panelist how he\r\ngot this insight since the treatment groups were combined and the\r\ndifference Site 4 and the other sites essentially averaged out. The\r\nauthor provided his R markdown code where you can see each site\r\nindividually. It is still a mystery how he figured it out.\r\nThe author also discovered an inadvertent programming error in the\r\nprogram that was used to generate this data set. Apparently all of the\r\nfemales were under 50 and all of the males were over 50. See his R\r\nMarkdown rendered HTML link rendered\r\nR Markdown\r\n\r\n\r\nExample\r\n3. Notebook with Historgram and Side by Side Barchart\r\n\r\nThis was an exploratory visual analytics example. The author did a\r\nhistogram of the categorical questionnaire data with large bins.\r\nHistograms are typically applied to continuous data, but for exploratory\r\npurposes this meets the needs. One can clearly see that the data on the\r\nrow labeled Site 4 is a visual outlier.\r\nThe author finishes the entry by correcting the discovered error and\r\nthe creating an explanatory data viz using a side by side bar chart\r\nvisual idiom, which is more appropriate for this type of data.\r\n\r\n\r\nExample 4. Stacked Bar Chart\r\nhigh resolution image\r\nThe author uses annotation (circling Site 4 in red) and sorting (Site\r\n4 in the upper left hand corner) to make clear that Site 4 is a visual\r\noutlier. The visual idiom is a stacked bar chart, one color for each\r\nquestionnaire. Stacked barcharts are limited when comparing any of the\r\ncomponents except the one on the bottom. For the purpose of this data\r\nviz challenge, it was only necessary to compare the totals, ie the\r\nheights of the stacked bars. This is easy to do for the stacked bars\r\nfrom a visual perception point of view. But the colors for the different\r\ncomponents (Q1, Q2, Q3 and Q4) can be distracting.\r\nThe panelists suggested doing a slope plot to clearly see the\r\ndifference in patterns between Site 4 and the other sites.\r\nThe data viz was created using a code free, open source, web-based\r\nsoftware called rawgraphs\r\n\r\nExample 5. Slope Plots\r\nhigh resolution image\r\nThis plot was inspired at the live session on October 11th, 2023. We\r\ncan clearly see that Site 4 is a visual outlier. The Active data for\r\nSite 4 looks like it belongs with the Control data from the other sites\r\nand likewise the Contorl data for Site 4 looks like it belo9ngs with the\r\nActive data from the other sites. Color and a useful title are used to\r\nhighlight the difference.\r\nlink to code\r\nCode\r\n\r\n\r\nExample 5. Slope Plot\r\n\r\n\r\n## do the slope data viz for active to control by site\r\n\r\n#*********#\r\n# DATA    #\r\n# MUNGING #\r\n#*********#\r\n \r\n\r\n  PROdata.slopes <- PROdata.vert %>%\r\n    group_by(SITE, TRT) %>%\r\n    summarise(total.score=sum(result, na.rm=TRUE))\r\n  \r\n\r\n#************#\r\n# CREATE THE #\r\n# DATA VIZ   #\r\n#************#\r\n\r\n## apply a plot to a data set where this works\r\n\r\n  library(ggrepel)\r\n\r\np <- ggplot(PROdata.slopes, aes(\r\n  x = TRT,\r\n  y = total.score,\r\n  group = SITE \r\n)) +\r\n  geom_line(\r\n    size = 0.75,\r\n    color = \"grey\" \r\n  ) +\r\n  geom_point(\r\n    size = 2.5,\r\n    #color = unhcr_pal(n = 1, \"pal_blue\")\r\n    color = \"grey\" \r\n  ) +\r\n  labs(\r\n    title = \"Total Scores By Site\",\r\n    caption = \"Site 04 is Visual Outlier\"\r\n  ) +\r\n  geom_text_repel(\r\n    data = PROdata.slopes |> filter(TRT==\"Active\"),\r\n    aes(label = paste(SITE, TRT,\"=\", total.score)),\r\n    size = 8 / .pt,\r\n    hjust = 1,\r\n    direction = \"y\",\r\n    nudge_x = -0.3,\r\n  ) + \r\n  geom_text_repel(\r\n    data = PROdata.slopes |> filter(TRT==\"Control\"),\r\n    aes(label = paste(SITE, TRT,\"=\", total.score)),\r\n    size = 8 / .pt,\r\n    hjust = 1,\r\n    direction = \"y\",\r\n    nudge_x = 0.5,\r\n  ) +\r\n ## Make Site 04 appear in blue\r\n  geom_line(\r\n    data=PROdata.slopes |> filter(SITE==\"SITE04\"),\r\n    size = 0.75,\r\n    color = \"blue\" \r\n  ) +\r\n  geom_point(\r\n    data=PROdata.slopes |> filter(SITE==\"SITE04\"),\r\n    size = 2.5,\r\n    #color = unhcr_pal(n = 1, \"pal_blue\")\r\n    color = \"blue\" \r\n  ) + \r\n  xlab(\"Treatment\") + ylab(\"Total Scores (Q1 + Q2 + Q3 + Q4)\")\r\n\r\n  ggsave(plot=p, ofile(\"slopes.png\"))\r\n\r\n\r\n\r\nBack to blog\r\n\r\n\r\n\r\n",
    "preview": "posts/2023-12-17-wonderful-wednesdays-october-2023/./images/slopes.png",
    "last_modified": "2025-08-22T14:49:31+02:00",
    "input_file": {},
    "preview_width": 840,
    "preview_height": 506
  },
  {
    "path": "posts/2023-12-17-wonderful-wednesdays-september-2023/",
    "title": "Wonderful Wednesdays September 2023",
    "description": "The PRIMUM study aimed to improve medication appropriateness in elderly patients with multimorbidity. A complex intervention involving general practitioners (GPs) and their healthcare assistants (HCA) was developed and compared to usual care. Check for a treatment effect on the MAI score after the intervention. Visualize the effect of adjusting the treatment effect for the MAI score at baseline.",
    "author": [
      {
        "name": "PSI VIS SIG",
        "url": "https://www.psiweb.org/sigs-special-interest-groups/visualisation"
      }
    ],
    "date": "2023-09-13",
    "categories": [
      "Treatment effect",
      "Wonderful Wednesdays"
    ],
    "contents": "\r\nTreatment effect\r\nThe PRIMUM study aimed to improve medication appropriateness in\r\nelderly patients with multimorbidity. A complex intervention involving\r\ngeneral practitioners (GPs) and their healthcare assistants (HCA) was\r\ndeveloped and compared to usual care. Check for a treatment effect on\r\nthe MAI score after the intervention. Visualize the effect of adjusting\r\nthe treatment effect for the MAI score at baseline.\r\nA description of the challenge can be found here.\r\nA recording of the session can be found here.\r\n\r\nExample 1. Line plot\r\nhigh resolution image\r\nlink to code\r\n\r\nExample 2. Box plot\r\nhigh resolution image\r\nlink to code\r\n\r\nExample 3. Dumbbell plot 1\r\nhigh resolution image\r\nlink to code\r\n\r\nExample 4. Dumbbell plot 2\r\nhigh resolution image\r\nlink to code\r\n\r\nExample 5. Scatter plot\r\nhigh resolution image\r\nlink to code\r\n\r\nExample 6. Bar chart\r\nhigh resolution image\r\nlink to code\r\nCode\r\n\r\nExample 1. Line plot\r\nNo code is available.\r\nBack to blog\r\n\r\nExample 2. Box plot\r\nNo code is available.\r\nBack to blog\r\n\r\nExample 3. Dumbbell plot 1\r\nNo code is available.\r\nBack to blog\r\n\r\nExample 4. Dumbbell plot 2\r\nNo code is available.\r\nBack to blog\r\n\r\nExample 5. Scatter plot\r\nNo code is available.\r\nBack to blog\r\n\r\nExample 6. Bar chart\r\nNo code is available.\r\nBack to blog\r\n\r\n\r\n\r\n",
    "preview": "posts/2023-12-17-wonderful-wednesdays-september-2023/./images/example_1.png",
    "last_modified": "2025-08-22T14:49:31+02:00",
    "input_file": {},
    "preview_width": 1792,
    "preview_height": 983
  },
  {
    "path": "posts/2023-12-17-wonderful-wednesdays-august-2023/",
    "title": "Wonderful Wednesdays August 2023",
    "description": "Benefit-Risk Assessment: For a drug to be approved for marketing, regulatory authorities must determine that the drug is effective and that its expected benefits outweigh its potential risks to patients. An Alzheimer’s Disease drug might have a positive benefit-risk profile for lowering blood pressure. To generate a hypothesis, an exploratory benefit-risk assessment will be conducted.",
    "author": [
      {
        "name": "PSI VIS SIG",
        "url": "https://www.psiweb.org/sigs-special-interest-groups/visualisation"
      }
    ],
    "date": "2023-08-09",
    "categories": [
      "Benefit-Risk Assessment",
      "Wonderful Wednesdays"
    ],
    "contents": "\r\nBenefit-Risk Assessment\r\nFor a drug to be approved for marketing, regulatory authorities must\r\ndetermine that the drug is effective and that its expected benefits\r\noutweigh its potential risks to patients. An Alzheimer’s Disease drug\r\nmight have a positive benefit-risk profile for lowering blood pressure.\r\nTo generate a hypothesis, an exploratory benefit-risk assessment will be\r\nconducted.\r\nA description of the challenge can be found here.\r\nA recording of the session can be found here.\r\n\r\nExample 1. \r\nhigh resolution image\r\nlink to code\r\nCode\r\n\r\nExample 1. \r\nNo code is available.\r\nBack to blog\r\n\r\n\r\n\r\n",
    "preview": "posts/2023-12-17-wonderful-wednesdays-august-2023/./images/app.png",
    "last_modified": "2025-08-22T14:49:31+02:00",
    "input_file": {},
    "preview_width": 1536,
    "preview_height": 768
  },
  {
    "path": "posts/2023-12-17-wonderful-wednesdays-july-2023/",
    "title": "Wonderful Wednesdays July 2023",
    "description": "US Disease Incidence",
    "author": [
      {
        "name": "PSI VIS SIG",
        "url": "https://www.psiweb.org/sigs-special-interest-groups/visualisation"
      }
    ],
    "date": "2023-07-12",
    "categories": [
      "US Disease Incidence",
      "Epidemiology data",
      "Wonderful Wednesdays"
    ],
    "contents": "\r\nUS Disease Incidence\r\nA description of the challenge can be found here.\r\nA recording of the session can be found here.\r\n\r\nExample 1. Heatmap 1\r\nhigh resolution\r\nimage\r\nlink to code\r\n\r\nExample 2. Heatmap 2\r\nhigh resolution\r\nimage\r\nlink to code\r\n\r\nCode\r\n\r\nExample 1. \r\n\r\n\r\nlibrary(tidyverse)\r\nlibrary(stringr)\r\nlibrary(lubridate)\r\nlibrary(gridExtra)\r\nlibrary(readr)\r\nlibrary(ggpubr)\r\nlibrary(grid)\r\nlibrary(plotly)\r\nlibrary(ggdark)\r\n\r\ndf <- read_csv(\"C:/Users/AW0204TU/Desktop/TidyTuesday/disease_data.csv\")\r\n\r\n# Records of the year for which each vaccine was introduced\r\nvac_dat <- data.frame(disease = c(\"MEASLES\", \"POLIO\", \"RUBELLA\"), \r\n                      Z = c(1963, 1955, 1969))\r\n\r\ndf %>%\r\n  na.omit() %>%\r\n  ggplot() +\r\n  geom_tile(aes(x = year, y = state, fill = incidence)) +\r\n  scale_fill_gradient2(trans = \"log10\", high = \"red\", low = \"blue\", \r\n                       mid = \"white\", midpoint = 0, na.value = \"white\") +\r\n  scale_x_continuous(expand = c(0.02, 0.02)) +\r\n  geom_vline(data = vac_dat, aes(xintercept = Z), linewidth = 1.5, color = \"darkred\") +\r\n  facet_wrap(~disease, scales = \"free\") +\r\n  dark_theme_minimal() +\r\n  theme(axis.text.y =  element_text(size = 5), \r\n        plot.title = element_text(hjust = 0.5, size = 16)) +\r\n  labs(y = \"State\", fill = \"Log \\nIncidence\", x = \"Year\", \r\n       title = \"Visulaizing Effect of Vaccines\",\r\n       caption = \"Dark Red Line Indicates Introduction of Vaccine\")\r\n\r\n\r\n\r\nBack to blog\r\n\r\nExample 2. \r\n\r\n\r\nlibrary(tidyverse)\r\nlibrary(ggtext)\r\n\r\ninc <- read_csv('vaccine_data.csv') \r\n\r\nmeasles <- inc %>%\r\n  filter(disease == \"MEASLES\") %>%\r\n  mutate(inc_cat = cut(incidence, c(0, 200, 400, 600, 800, 1000, 1200, Inf))) %>%\r\n  mutate(inc_fac = factor(inc_cat)) \r\n\r\nggplot(data=measles) +\r\n  geom_tile(aes(x=year, y=state, fill=inc_fac), color=\"gray\") +\r\n  scale_x_continuous(\"Year\", breaks=seq(1930, 2010, by=10), limits = c(1928, 2000)) +\r\n  scale_y_discrete(\"State\", limits=rev) +\r\n  geom_vline(xintercept = 1963, size = 1, color = \"#d7191c\") +\r\n  scale_fill_brewer(\"Incidence\\nPer\\n100,0000\\nPopulation\", \r\n                    labels=c(\"0-<200\", \"200-<400\", \"400-<600\", \"600-<800\", \"800-<1000\", \"1000-<1200\", \">=1200\"),\r\n                    na.value = 'white',\r\n                    na.translate = F) +\r\n  labs (title =\"Incidence of measles in US states declines after <b style='color:#d7191c;'>vaccine approval<\/b>\")+\r\n  theme_minimal() +\r\n  theme(legend.title.align = 0.5,\r\n        axis.text.x = element_text(size = 12, color = \"#525252\"),\r\n        axis.text.y = element_text(size = 8, color = \"#525252\"),\r\n        axis.line.y = element_blank(),\r\n        axis.ticks.y = element_blank(),\r\n        panel.grid.major = element_blank(),\r\n        plot.title = element_markdown())\r\n\r\n\r\n\r\nBack to blog\r\n\r\n\r\n\r\n",
    "preview": "posts/2023-12-17-wonderful-wednesdays-july-2023/./images/meas_inc - Bodo Kirsch.png",
    "last_modified": "2025-08-22T14:49:31+02:00",
    "input_file": {},
    "preview_width": 1000,
    "preview_height": 687
  },
  {
    "path": "posts/2023-05-14-visualisation-sig-showcase/",
    "title": "Visualisation SIG Showcase",
    "description": "This is an entry accompanying the poster at the PSI conference 2023.",
    "author": [
      {
        "name": "PSI VIS SIG",
        "url": "https://www.psiweb.org/sigs-special-interest-groups/visualisation"
      }
    ],
    "date": "2023-06-11",
    "categories": [
      "PSI conference",
      "Visualisation SIG Showcase"
    ],
    "contents": "\r\nVisualisation SIG Showcase\r\nIn this entry, you can find the visualisations presented on our\r\nposter at the PSI conference 2023 together with a summary of the\r\ndiscussion we had when the visualisations were presented in our\r\nWonderful Wednesday Webinars and the programming code.\r\n\r\nExample 1. Grable\r\n\r\nThe app can be found here.\r\nThis table with embedded graphics is giving an overview over all\r\nsubjects with the option to expand and collapse additional information.\r\nDemographic data are displayed in symbols, gauge charts, text, color\r\ncoded bar charts, or color supported descriptive text respectively.\r\nPopulation ranges are given as gray background where possible.\r\nlink to code\r\n\r\nExample 2.\r\nDistribution plot by category I\r\nhigh\r\nresolution image\r\nThis graph includes stacked density plots, sometimes known as a\r\nridgeline plot. This graph type is useful where there are approximately\r\n4-8 categories with a natural ordering, which is the case in this\r\nexample. The graph is also showing patient level data as transparent\r\ndots on the X axis, and reference lines have been added. There is a lot\r\nof overplotting of the dots, so the opacity of dots is representing the\r\ndata density at each value on the X-axis.\r\nA title has been added to give a clear interpretation of the overall\r\nmessage.\r\nlink to code\r\n\r\nExample 3. Dashboard\r\nTrelliscope\r\n\r\nThe app can be found here\r\nThis is a lot more than just a visualization. It is a very\r\ncomprehensive tool to do an exhaustive exploratory analysis of the\r\ndata.\r\nIn the first tab (“AGP”), we see individual patient data including\r\nindividual profile plots over time. This is very helpful if you want to\r\nfocus on specific patients. The level of information increases from top\r\nto bottom. In the first row, we see a summary over all data for this\r\npatient. The next row shows a summary over all days. And the last rows\r\nprovides the user with individual patient profile plots.\r\nIn the second tab (“MODEL RESULTS”), we see a visualization of model\r\nresults to detect clusters in the CGM values. The goal was to detect\r\ndifferences between clusters in regards to the time spent in the\r\nstandardized glycemic ranges. The visualization helps the user to easily\r\nunderstand the results.\r\nThe last tab (“OTHER METRICS”) follows a similar idea as the second\r\ntab. The clustering can be done based on other variables in a flexible\r\nway. This makes this a very powerful tool with many options.\r\nThe whole tool comes with a lot of explanations and with clickable\r\nreferences.\r\nThe panel thinks that this is a great and very powerful app to do a\r\nthorough exploratory data analysis.\r\nlink to code\r\n\r\nExample 4a. Histograms\r\n\r\nhigh\r\nresolution image\r\nThis example shows four histograms which nicely display the\r\ndistributions of responses for the different treatment groups and the\r\ndifferent time points. Overall it is a very clean design with minimal\r\nclutter, no unnecessary tick-marks and the gridlines very much in the\r\nbackground. Again, this example makes it easy to get an impression of\r\nthe treatment effect, with a clear ‘shift’ between time points for the\r\nactive treatment.\r\nWhilst the current layout with the columns corresponding to treatment\r\nand rows corresponding to time allows us to easily see this shift, it\r\ngoes against our intuition which is to think of changes in time\r\nhappening along the horizontal axis. Switching the rows and columns may\r\nbe more in line with what we naturally expect to see.\r\nThere are a couple of issues with this example that the group felt\r\ncould be easily addressed. Firstly, given that DLQI scores can only be\r\nequal to natural numbers, a bin width of one would be more suitable.\r\nOtherwise, as is the case with the current bin width, some bars\r\ncorrespond to only one DLQI score whereas others correspond to more than\r\none. This results in the misleading ‘up and down’ nature of the\r\nhistograms. Further, there should be more consistency between the y-axes\r\non the top and bottom panels. The change in axes in the current example\r\ngives an impression of ‘squashing’ for placebo when actually there was\r\nnot a great deal of change.\r\nOverall, the group felt that this example only needed some easily\r\nimplemented changes to become a really nice visualisation, and thought\r\nthis was a great opportunity to highlight how some of these changes may\r\nlook, as displayed in the next example.\r\nlink to code\r\n\r\nExample 4b. Histograms\r\nupdated\r\n\r\nhigh resolution image\r\nHere we see a really effective visualisation which has been produced\r\nwith only minimal additional work to the previous example. Firstly, we\r\nsee that a more appropriate and telling title has been used and a\r\nfootnote has been added to aid in interpretation for those individuals\r\nwho are unfamiliar with the DLQI. We also see that the layout has been\r\nchanged with changes in time occurring horizontally as we expect to\r\nsee.\r\nDifferent colours have also been used to allow the two treatment\r\ngroups to be easily distinguished, and the titles have been coloured\r\naccordingly. Consistent spacing has been used on the vertical axes to\r\nallow for easy comparisons, and these axes now represent percentages\r\nrather than counts to allow for more meaningful comparison between the\r\nimbalanced treatment groups. There was some discussion amongst the group\r\nregarding the fact that lower panel is shorter, but there were no strong\r\nfeelings about this given that the spacing on the vertical axes is\r\nconsistent.\r\nProbably the biggest improvement here, though, is that a bin width of\r\none has now been used. This simple change allows the histograms to be\r\ninterpreted in a much more meaningful way for a score that can only take\r\nvalues in the natural numbers.\r\nlink to code\r\n\r\nExample 5. Upset Plot\r\nhigh\r\nresolution image\r\nThis is a useful plot for displaying frequency counts where there is\r\ninterest in the intersections of different categories, having a similar\r\nfunction to a Venn diagram but being much more practical where there are\r\nmore than three categories. (It will always be possible to produce an\r\nUpset plot, regardless of the number of categories, whereas a Venn\r\ndiagram quickly becomes impossible to produce or interpret beyond 4 or 5\r\ncategories.) The vertical bar chart shows the size of the various\r\nintersections (which is highlighting that Nausea and Vomiting is the\r\nmost frequently-occurring pair of terms), and the horizontal bar chart\r\nshows the frequency of each individual category (showing that overall,\r\nNasopharyngitis, Nausea and Vomiting are the most frequent, with a\r\ndramatic drop-off in the frequencies of other terms).\r\nThe plot requires a fair amount of explanation, and would work well\r\nwith stakeholders who are already familiar with the format. It wouldn’t\r\nwork so well at a conference, for example, where there isn’t the\r\nopportunity to explain the graph. Improved labelling\r\n(e.g. interpretation of “Intersection Size”) would make the graph easier\r\nto understand.\r\nWhere there is a large number of categories (as in this example),\r\ndisplaying all of the combinations of categories is limited by the\r\ndisplay area of the plot. In this case a “cut-off” has been applied to\r\nlimit to an intersection size of 20. Ideally the graph would include\r\ninteractivity, to allow the user to define which categories are\r\ndisplayed. In addition, the aspect ratio is challenging to display in a\r\nlandscape screen, so flexibility in the layout of the various charts\r\nwould be useful.\r\nlink to code\r\n\r\nExample 6. Sankey Diagram\r\n\r\nThe pdf file can be found here.\r\nThis plot presents pain scores, which have been categorised and\r\nsummarised over time separately for the two treatment groups.\r\nCategorisation allows missing data categories to also be included\r\nalongside the efficacy data, with separate categories for single missing\r\nvisits and monotone missing values (dropouts). A Sankey Diagram is\r\neffective in showing shifts between categories at the individual patient\r\nlevel, and in this case a subset of visits has been included to allow\r\nthe flows to be seen more easily (although this has also created some\r\nissues with interpreting the “no subsequent visit” category).\r\nAs well as showing overall trends, the graph provides insights into\r\nthe pain scores that preceded withdrawal from the study. The results are\r\nshowing a rapid improvement in both treatment groups at the start of the\r\nstudy, possibly due to regression to the mean resulting from study\r\ninclusion criteria selecting a cohort of patients with relatively high\r\nbaseline pain score.\r\nlink to code\r\nCode\r\n\r\nExample 1. Grable\r\nNo code has been submitted.\r\nBack to blog\r\n\r\nExample 2.\r\nDistribution plot by category I\r\n\r\n\r\nWW_data <- read.csv(\"WWW_example_minimal_clinical_improvement_stats.csv\")\r\n\r\nlibrary(tidyverse)\r\nlibrary(ggplot2)\r\nlibrary(ggridges)\r\nlibrary(dplyr)\r\nlibrary(gt)\r\nlibrary(psych)\r\n\r\n#####\r\n#1 - calculate SEM \r\n#The Standard Error of Measurement (SEM) quantifies \r\n#the precision of the individual measurements \r\n#and gives an indication of the absolute reliability\r\n\r\n#2 - calculate SDC\r\n#The SEM can be used to calculate the Minimal Detectable Change (MDC)\r\n#which is the minimal amount of change that a measurement \r\n#must show to be greater than the within subject variability\r\n#and measurement error, also referred to as the sensitivity to change\r\n\r\npre_post <- WW_data[,c(1:2)]\r\nsd_baseline <- sd(WW_data$total.score.baseline, na.rm = T)\r\n\r\nicc <- ICC(pre_post)#0.032 - reliability for SEM\r\n\r\nsem_baseline <- psychometric::SE.Meas(sd_baseline, 0.032)\r\n\r\n#Smallest detectable change(SDC)/Minimal detectable change (MDC)\r\n#SEM*1.92*sqrt(2)\r\nsdc <- sem_baseline*1.96*sqrt(2)\r\nsdc_comp <- sdc*-1\r\n\r\nWW_data <- rename(WW_data, baseline = total.score.baseline, followup = total.score.follow.up, CGI = CGI.I)\r\nWW_data <- within(WW_data, CHG <- followup-baseline)\r\nWW_data <- within(WW_data, {\r\n            CGI_cat <- NA\r\n            CGI_cat[CGI==1] <- \"Very much improved\"\r\n            CGI_cat[CGI==2] <- \"Much improved\"\r\n            CGI_cat[CGI==3] <- \"Minimally improved\"\r\n            CGI_cat[CGI==4] <- \"No change\"\r\n            CGI_cat[CGI==5] <- \"Minimally worse\"\r\n            CGI_cat[CGI==6] <- \"Much worse\"\r\n            CGI_cat[CGI==7] <- \"Very much worse\"\r\n            })\r\n\r\nWW_data <- WW_data <- WW_data %>% \r\n  filter(!is.na(CGI_cat))\r\n\r\nWW_data$CGI_cat <- factor(WW_data$CGI_cat, levels = c(\"Very much improved\",\r\n                                   \"Much improved\",\r\n                                   \"Minimally improved\",\r\n                                   \"No change\",\r\n                                   \"Minimally worse\",\r\n                                   \"Much worse\",\r\n                                   \"Very much worse\"\r\n                                   ))\r\n\r\ngg <- ggplot(WW_data, aes(x = CHG, \r\n                    y = CGI_cat)) +\r\n  stat_density_ridges(\r\n    geom = \"density_ridges_gradient\",\r\n    quantile_lines = TRUE,\r\n    quantiles = 2, scale = 1, rel_min_height = 0.01,\r\n    jittered_points = TRUE) +\r\n  scale_x_continuous(breaks=seq(-40,40,10),\r\n                     limits = c(-40,40)) +\r\n  ylab(\"CGI-I Response\") + xlab(\"Change in PRO Score\") +\r\n  labs(title = \"Minimally Improved & Minimally Worse CGI-I Categories\\nAre Not Differentiated From No change\",\r\n       subtitle = \"Smoothed Distributions with Individual Patients (dots) and Means (|) \\nReference Lines Display Smallest Detectable Change of PRO Score\",\r\n       caption = \"Smallest Detectable Change defined by Standard Error of Measurement of PRO Score at Baseline\") +\r\n  theme(\r\n    plot.title = element_text(color = \"black\", size = 15),\r\n    plot.subtitle = element_text(color = \"black\", size = 10),\r\n    plot.caption = element_text(color = \"black\", size = 8)\r\n  )\r\n\r\n#theme_ridges(font_size = 12)\r\n\r\n#Build ggplot and extract data\r\nd <- ggplot_build(gg)$data[[1]]\r\n\r\n# Add geom_ribbon for shaded area\r\nrcc <- gg +\r\n  geom_ribbon(\r\n    data = transform(subset(d, x >= sdc), CGI_cat = group),\r\n    aes(x, ymin = ymin, ymax = ymax, group = group),\r\n    fill = \"red\",\r\n    alpha = 0.2, \r\n    show.legend = TRUE) +\r\n  geom_ribbon(\r\n    data = transform(subset(d, x <= sdc_comp), CGI_cat = group),\r\n    aes(x, ymin = ymin, ymax = ymax, group = group),\r\n    fill = \"green\",\r\n    alpha = 0.2,\r\n    show.legend = TRUE) +\r\n  geom_vline(xintercept =sdc, linetype=\"dashed\") +\r\n  geom_vline(xintercept =sdc_comp, linetype=\"dashed\")+\r\n  annotate(\"segment\", x = -15, xend = -35, y = 0.7, yend = 0.7, colour = \"black\", size=0.5, arrow=arrow(length = unit(0.03, \"npc\"))) +\r\n  annotate(\"segment\", x = 15, xend = 35, y = 0.7, yend = 0.7, colour = \"black\", size=0.5, arrow=arrow(length = unit(0.03, \"npc\"))) +\r\n  geom_text(aes(x = -30, y = 0.45, label = \"Improvement\"), \r\n             hjust = 0, \r\n             vjust = 0,\r\n             colour = \"black\", \r\n             size = 2.5) +\r\n  geom_text(aes(x = 20, y = 0.45, label = \"Deterioration\"), \r\n            hjust = 0, \r\n            vjust = 0,\r\n            colour = \"black\", \r\n            size = 2.5) + \r\n  ylab(\"CGI-I Response\") + xlab(\"Change in PRO Score\")\r\n  \r\n  \r\nggsave(\"reliable_clinical_change_plot_red_green_v0_2.png\", plot = rcc, device = png)\r\n\r\n\r\n\r\nBack to blog\r\n\r\nExample 3. Dashboard\r\nTrelliscope\r\nThe Rmd file can be found here and here.\r\nThe full code can be found here.\r\nBack to blog\r\n\r\nExample 4a. Histrograms\r\n\r\n\r\n# Load data\r\ndql <- read.csv(\"ww2020_dlqi.csv\")\r\nattach(dql)\r\nView(dql)\r\nsummary(dql)\r\n\r\n# Load Library\r\nlibrary(tidyverse)\r\nlibrary(ggplot2)\r\nlibrary(ggthemes)\r\nlibrary(ggcharts)\r\n\r\n# Select relevant variables\r\ndql_renamed <-\r\n  dql %>%\r\n  select(\r\n    TRT, VISIT, DLQI_SCORE\r\n    )\r\n\r\n# Rename treatment levels\r\ndql_renamed$TRT[dql_renamed$TRT==\"A\"] <- \"Placebo\"\r\ndql_renamed$TRT[dql_renamed$TRT==\"B\"] <- \"Active Treatment\"\r\n\r\n# Seperate visits\r\n\r\n# Baseline visit\r\ntotalbaseline <- \r\n  dql_renamed %>% \r\n  filter(VISIT==\"Baseline\")\r\n\r\n# Construct a histogram for each treatment arm at baseline visit\r\n(d <- \r\n  ggplot(\r\n    data = totalbaseline,\r\n    aes(\r\n      x = DLQI_SCORE\r\n      ))\r\n  + geom_histogram(\r\n    binwidth = 1.5,\r\n    color = \"grey\",\r\n    fill = \"deeppink3\"\r\n    ) +\r\n  facet_grid(~ TRT)\r\n  + theme_ng(grid = \"X\")\r\n  + labs(\r\n    x = \"DLQI Score\",\r\n    y = \"Count\",\r\n    title = \"Total DLQI Score\",\r\n    subtitle = \"At Baseline\",\r\n    caption = \"Samah Abdelaal\")\r\n  + theme(\r\n    axis.title.x = element_blank(),\r\n    plot.title = element_text(size = 20,\r\n                              face = \"bold\"),\r\n    plot.subtitle = element_text(size = 18),\r\n    plot.caption = element_text(size = 15,\r\n                                face = \"bold.italic\")\r\n    ))\r\n\r\n\r\n# Week 16 visit\r\ntotalweek16 <- \r\n  dql_renamed %>% \r\n  filter(VISIT==\"Week 16\")\r\n\r\n(e <- \r\n  ggplot(\r\n    data = totalweek16,\r\n    aes(\r\n      x = DLQI_SCORE\r\n      )\r\n    )\r\n  + geom_histogram(\r\n    binwidth = 1.5,\r\n    color = \"grey\",\r\n    fill = \"deeppink3\"\r\n    ) +\r\n  facet_grid(~ TRT)\r\n  + theme_ng(grid = \"X\")\r\n  + labs(\r\n    x = \"DLQI Score\",\r\n    y = \"Count\",\r\n    subtitle = \"At Week 16\"\r\n    ) +\r\n  theme(\r\n    plot.subtitle = element_text(size = 18)\r\n    ))\r\n\r\n# Compine plots\r\nlibrary(gridExtra)\r\n\r\ngridExtra::grid.arrange(d, e, nrow = 2)\r\n\r\n\r\n\r\nBack to blog\r\n\r\nExample 4b. Histrograms\r\nupdated\r\n\r\n\r\n# Load data\r\ndql <- read.csv(\"O:\\\\1_Global_Biostatistics\\\\Biostatistics Innovation Center\\\\BIC Project - Subgroup Analyses\\\\Screening\\\\R-Package\\\\Supports\\\\WW\\\\ww2020_dlqi.csv\")\r\nattach(dql)\r\nView(dql)\r\nsummary(dql)\r\n\r\n# Load Library\r\nlibrary(tidyverse)\r\nlibrary(ggplot2)\r\nlibrary(ggthemes)\r\nlibrary(ggcharts)\r\n\r\n# Select relevant variables\r\ndql_renamed <-\r\n  dql %>%\r\n  select(\r\n    TRT, VISIT, DLQI_SCORE\r\n    )\r\n\r\n# Rename treatment levels\r\ndql_renamed$TRT[dql_renamed$TRT==\"A\"] <- \"Placebo\"\r\ndql_renamed$TRT[dql_renamed$TRT==\"B\"] <- \"Active Treatment\"\r\n\r\n# Seperate treatments\r\n\r\n# Active\r\ntotalB <- \r\n  dql_renamed %>% \r\n  filter(TRT==\"Active Treatment\")\r\n\r\n# Construct a histogram for each treatment arm at baseline visit\r\n(d <- \r\n  ggplot(\r\n    data = totalB,\r\n    aes(\r\n      x = DLQI_SCORE\r\n      ))\r\n  + geom_histogram(\r\n    binwidth = 1,\r\n    color = \"grey\",\r\n    fill = \"deeppink3\"\r\n    ) +\r\n  facet_grid(~ VISIT)\r\n  + theme_ng(grid = \"X\")\r\n  + labs(\r\n    x = \"Total DLQI Score\",\r\n    y = \"Patients\",\r\n    title = \"Improved Quality of life after 16 weeks of treatment\",\r\n    subtitle = \"Active Treatment\")\r\n  + theme(\r\n    axis.title.x = element_blank(),\r\n    axis.text.x = element_blank(),\r\n    plot.title = element_text(size = 17,\r\n                              face = \"bold\"),\r\n    plot.subtitle = element_text(size = 15, color = \"deeppink3\")\r\n    ))\r\n\r\n\r\n# Week 16 visit\r\ntotalA <- \r\n  dql_renamed %>% \r\n  filter(TRT==\"Placebo\")\r\n\r\n(e <- \r\n  ggplot(\r\n    data = totalA,\r\n    aes(\r\n      x = DLQI_SCORE\r\n      )\r\n    )\r\n  + geom_histogram(\r\n    binwidth = 1,\r\n    color = \"grey\",\r\n    fill = \"green4\"\r\n    ) +\r\n  facet_grid(~ VISIT)\r\n  + theme_ng(grid = \"X\")\r\n  + labs(\r\n    x = \"Total DLQI Score\",\r\n    y = \"Patients\",\r\n    subtitle = \"Placebo\",\r\n    caption = \"Lower score equals better quality of life\"\r\n    ) +\r\n  theme(\r\n    strip.text.x = element_blank(),\r\n    plot.subtitle = element_text(size = 15, color = \"green4\"),\r\n    plot.caption = element_text(size = 12,\r\n                                face = \"italic\")\r\n    ))\r\n\r\n# Compine plots\r\nlibrary(gridExtra)\r\n\r\ngridExtra::grid.arrange(d, e, nrow = 2, heights = c(1.5,1))\r\n\r\n\r\n\r\nBack to blog\r\n\r\nExample 5. Upset Plot\r\n\r\n\r\n# packages\r\npacman::p_load(tidyverse, rio)\r\npacman::p_load(labelled)\r\n# devtools::install_github(\"krassowski/complex-upset\")\r\nlibrary(ComplexUpset)\r\n\r\n# import & recode ID & sort\r\nae <- import(\"https://raw.githubusercontent.com/VIS-SIG/Wonderful-Wednesdays/master/data/2020/2020-09-09/2020-09-09-fake-data_aes.csv\") %>% \r\n   mutate(id = str_remove(Subject,\"FAKE-DATA-\") %>% \r\n             as.numeric(), \r\n          .after = Subject) %>% \r\n   arrange(id)\r\n\r\n# 1 Duplicate\r\nae   %>% filter(id == 10084) %>% filter(`Adverse Event` == \"Diarrhea\")\r\n\r\n# Remove Duplicate\r\nae <- ae %>% \r\n   distinct()\r\n\r\n# export fixed file\r\nae %>% \r\n   export(\"C:/R/Wonderful-Wednesdays/2020-09-09/2020-09-09-fake-data_aes.csv.rds\")\r\n\r\n# extend to all days between adverse events\r\nae_l <- ae %>% \r\n   select(-Subject) %>% \r\n   pivot_longer(cols = 2:3,\r\n                values_to = \"day\") %>% \r\n   group_by(id, `Adverse Event`, `Treatment`, System, Severity, Sex ) %>% \r\n   complete(day = seq(min(day), max(day), by = 1)) %>% \r\n   select(-name) %>% \r\n   ungroup() %>% \r\n   arrange(id, day)\r\n\r\n# Add variables to wide data\r\nae_w2 <- ae_l %>% \r\n   select(id, day, Sex, Treatment, Severity, `Adverse Event`) %>%\r\n   mutate(value = 1) %>%\r\n   pivot_wider(id_cols = c(\"id\",\"day\",\"Treatment\",\"Sex\"),\r\n               names_from = \"Adverse Event\",\r\n               values_from = \"value\",\r\n               values_fill  = 0) %>% \r\n   mutate(Treatment = factor(Treatment, labels = c(\"A\",\"B\")))\r\n# You cannot do the analysis using severity because at each day there can be diverse severerities for\r\n# different AE's overalapping\r\n\r\n# Figure 2.1\r\nupset(\r\n   data = ae_w2,\r\n   intersect = names(ae_w2)[-c(1:4)],\r\n   min_size = 20,\r\n   width_ratio = 0.25,\r\n   height_ratio = 1,\r\n   name  = NULL,\r\n   queries=list(\r\n      upset_query(\r\n         intersect=c(\"Nausea\",\"Vomiting\"),\r\n         color=  \"#E41A1C\",\r\n         fill  =  \"#E41A1C\",\r\n         \r\n         only_components=c('intersections_matrix', 'Intersection size')\r\n      )\r\n   ),\r\n   annotations = list(\r\n      'Intersection Size\\n(Treatment %)' = list(\r\n         aes = aes(x=intersection, fill=Treatment ),\r\n         geom = list(\r\n            geom_bar(stat='count', position='fill'),\r\n            geom_hline(yintercept = 0.5, col='gray90'),\r\n            scale_y_continuous(labels=scales::percent_format()),\r\n            scale_fill_brewer(palette = \"Dark2\")\r\n         )\r\n      ),\r\n      'Intersection Size\\n(Sex %)' = list(\r\n         aes = aes(x=intersection, fill=Sex),\r\n         geom = list(\r\n            geom_bar(stat='count', position='fill'),\r\n            geom_hline(yintercept = 0.5, col='gray90'),\r\n            scale_y_continuous(labels=scales::percent_format()),\r\n            scale_fill_manual(values = c(\"#E78AC3\",\"#8DA0CB\"))\r\n         )\r\n      )\r\n   ),\r\n   themes=upset_modify_themes(\r\n      list('overall_sizes'= theme(axis.ticks.x = element_line()))\r\n   )\r\n) +\r\n   labs(title = 'Co-Occurence of Daily AE Symptoms',\r\n        caption = 'Symptoms with more than 20 days by Frequency: Total pool is 148 individuals for 2575 Daily AE Symptoms \\n Lex, Alexander, et al. \"UpSet: visualization of intersecting sets.\" IEEE transactions on visualization and computer graphics 20.12 (2014): 1983-1992.') +\r\n   ggsave(\"C:/R/Wonderful-Wednesdays/2020-09-09/UpSet_plot.png\",\r\n          width = 11, height =10, units = \"in\")\r\n\r\n\r\n\r\nBack to blog\r\n\r\nExample 6. Sankey Diagram\r\nThe sas file can be found here.\r\nBack to blog\r\n\r\n\r\n\r\n",
    "preview": "posts/2023-05-14-visualisation-sig-showcase/./images/VIS_SIG_poster.png",
    "last_modified": "2025-08-22T14:49:31+02:00",
    "input_file": {},
    "preview_width": 1526,
    "preview_height": 1080
  },
  {
    "path": "posts/2023-05-29-wonderful-wednesdays-may-2023/",
    "title": "Wonderful Wednesdays May 2023",
    "description": "Data visualisations to present Clinical Global Impression Data and to provide comparisons between the different groups (e.g. based on response differences or odds ratios for the different response categories).",
    "author": [
      {
        "name": "PSI VIS SIG",
        "url": "https://www.psiweb.org/sigs-special-interest-groups/visualisation"
      }
    ],
    "date": "2023-05-10",
    "categories": [
      "Clinical Global Impression (CGI)",
      "Wonderful Wednesdays"
    ],
    "contents": "\r\nClinical Global\r\nImpression Data Challenge\r\nThe clinical global impression – severity scale (CGI-S) is a 7-point\r\nscale that requires the clinician to rate the severity of the patient’s\r\nillness at the time of assessment, relative to the clinician’s past\r\nexperience with patients who have the same diagnosis. The challenge was\r\nto provide data visualisations to show this data and also to provide\r\ncomparisons between the different groups (e.g. based on response\r\ndifferences or odds ratios for the different response categories) using\r\nClinical Global Impression Data.\r\nA recording of the session can be found here.\r\n\r\nExample 1. Barplot\r\nhigh resolution imagehigh resolution imagehigh resolution image\r\nlink to code\r\n\r\nExample 2. Line graphs\r\nhigh resolution\r\nimage\r\nlink to code\r\n\r\nExample 3. Cumulative\r\ndistribution plot I\r\nhigh resolution image\r\nlink to code\r\n\r\nExample 4.\r\nCumulative distribution plot II\r\nhigh resolution\r\nimagehigh resolution\r\nimage\r\nlink to code\r\n\r\nExample 5. Lollipop/forest\r\nplot\r\nhigh\r\nresolution image\r\nhigh resolution\r\nimage\r\nlink to code\r\nCode\r\n\r\nExample 1. Barplot\r\n\r\n\r\nplot.fun <- function(dat, name, v.just = 1.5, gci.s = \"<=3\", y.max = 100,\r\n                     title.text = \"The <span style = 'color: #08519C'>Active<\/span> and\r\n         <span style = 'color: #BDD7E7'>Comparator<\/span> result in similar clinical global impression\",\r\n                     col.ann = c(rep(c(\"black\", \"black\", \"white\"), 2)),\r\n                     title.h.just = 0.6) {\r\n  require(ggplot2)\r\n  require(ggtext)\r\n  ggplot(dat, aes(y=Value, x=VISITNUM, fill=Treatment)) + \r\n    geom_bar(position=\"dodge\", stat=\"identity\") +\r\n    ylab(\"\") + xlab (\"\") +\r\n    ylim(-12, y.max) +\r\n    theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),\r\n          panel.background = element_blank(), axis.line = element_blank(),\r\n          axis.ticks = element_blank(),# axis.text = element_text(size = 12),\r\n          axis.text.x = element_blank(),\r\n          axis.text.y = element_blank(),\r\n          plot.subtitle = element_text(size = 15, color = \"grey40\", hjust = 0.14),\r\n          plot.caption = element_text(color = \"grey60\", size = 12, hjust = 0.85),\r\n          plot.title = element_markdown(color = \"grey40\", size = 20,\r\n                                        face = \"bold\", hjust = title.h.just),\r\n          plot.margin = margin(0.3, 0.2, -0.38, -0.2, \"in\")) +\r\n    annotate(\"text\", x=1, y=-4, label= \"Week 12\", size = 4.25, color = \"grey40\") +\r\n    annotate(\"text\", x=2, y=-4, label= \"Week 52\", size = 4.25, color = \"grey40\") +\r\n    # annotate(\"text\", x=3, y=-4, label= \"Week 24\", size = 4.25, color = \"grey40\") +\r\n    # annotate(\"text\", x=2.27, y=-12,\r\n    #          label= \"Good glycemic control is defined as Glucose values within a range of 72 and 140 mg/dL.\",\r\n    #          size = 3.5, color = \"grey60\") +\r\n    scale_fill_manual(breaks = c(\"Active\", \"Comparator\", \"Placebo\"),\r\n                      values = c(brewer.pal(n = 5, name = \"Blues\")[c(5, 2)], \"grey90\")) +\r\n    geom_text(aes(label=val.t), vjust = v.just, size = 4, position = position_dodge(.9),\r\n              col = col.ann) +\r\n    labs(title = title.text,\r\n         subtitle = paste0(\"Bars show the relative frequency of subjects with CGI-S\", gci.s))#,\r\n  # caption = \"Good glycemic control is defined as Glucose values within a range of 72 and 140 mg/dL.\")\r\n  ggsave(name, width = 12, height = 6, units = \"in\", dpi = 150)\r\n}\r\n\r\ndat <- read.csv(\"CGI_S_3_groups_csv.csv\")\r\ndat$X1 <- (dat$X1 + dat$X2 + dat$X3) / dat$Total.sample.size * 100\r\n# dat$X1 <- (dat$X1) / dat$Total.sample.size * 100\r\ndat <- dat[, 1:3]\r\nnames(dat) <- c(\"VISITNUM\", \"Treatment\", \"Value\")\r\ndat$val.t <- paste(format(round(dat$Value, 1), nsmall = 1), \"%\")\r\ndat$VISITNUM <- as.factor(dat$VISITNUM)\r\nplot.fun(dat, \"barplot_3.png\")\r\n\r\ndat <- read.csv(\"CGI_S_3_groups_csv.csv\")\r\ndat$X1 <- (dat$X1 + dat$X2) / dat$Total.sample.size * 100\r\n# dat$X1 <- (dat$X1) / dat$Total.sample.size * 100\r\ndat <- dat[, 1:3]\r\nnames(dat) <- c(\"VISITNUM\", \"Treatment\", \"Value\")\r\ndat$val.t <- paste(format(round(dat$Value, 1), nsmall = 1), \"%\")\r\ndat$VISITNUM <- as.factor(dat$VISITNUM)\r\nplot.fun(dat, \"barplot_2.png\", gci.s = \"<=2\", y.max = 70,\r\n         title.text = \"The <span style = 'color: #08519C'>Active<\/span> results\r\n         in better clinical global impression than the\r\n         <span style = 'color: #BDD7E7'>Comparator<\/span>\",\r\n         title.h.just = 1.25)\r\n\r\ndat <- read.csv(\"CGI_S_3_groups_csv.csv\")\r\ndat$X1 <- (dat$X1) / dat$Total.sample.size * 100\r\n# dat$X1 <- (dat$X1) / dat$Total.sample.size * 100\r\ndat <- dat[, 1:3]\r\nnames(dat) <- c(\"VISITNUM\", \"Treatment\", \"Value\")\r\ndat$val.t <- paste(format(round(dat$Value, 1), nsmall = 1), \"%\")\r\ndat$VISITNUM <- as.factor(dat$VISITNUM)\r\nplot.fun(dat, \"barplot_1.png\", v.just = -0.5, gci.s = \"=1\", y.max = 50,\r\n         title.text = \"The <span style = 'color: #08519C'>Active<\/span> results\r\n         in better clinical global impression than the\r\n         <span style = 'color: #BDD7E7'>Comparator<\/span>\",\r\n         col.ann = c(rep(c(\"black\", \"black\", \"black\"), 2)),\r\n         title.h.just = 1.25)\r\n\r\n\r\n\r\nBack to blog\r\n\r\nExample 2. \r\nNo code has been submitted.\r\nBack to blog\r\n\r\nExample 3. \r\nNo code has been submitted.\r\nBack to blog\r\n\r\nExample 4. \r\nNo code has been submitted.\r\nBack to blog\r\n\r\nExample 5. \r\nFirst image:\r\n\r\n\r\nlibrary(RCurl)\r\nlibrary(dplyr)\r\nlibrary(tidyr)\r\nlibrary(ggplot2)\r\nlibrary(ggrepel)\r\nlibrary(cowplot)\r\nx <-\r\n  getURL(\r\n    \"https://raw.githubusercontent.com/VIS-SIG/Wonderful-Wednesdays/master/data/2023/2023-05-10/CGI_S_3_groups_csv.csv\"\r\n  )\r\ny <- read.csv(text = x) %>%\r\n  rename(Group = CGI)\r\ny\r\n\r\nl <- y %>%\r\n  pivot_longer(cols = X1:X7,\r\n               names_to = \"Category\",\r\n               values_to = \"n\") %>%\r\n  mutate(Category = as.numeric(gsub(\"X\", \"\", Category))) %>%\r\n  group_by(Week, Group) %>%\r\n  arrange(Category) %>%\r\n  mutate(\r\n    CumN = cumsum(n),\r\n    Week = paste(\"Week\", Week),\r\n    CumFreq = CumN / Total.sample.size,\r\n    Freq = n / Total.sample.size,\r\n    `Cumulative %` = round(CumFreq * 100, 1),\r\n    `%` = round(Freq * 100, 1)\r\n  ) %>%\r\n  ungroup() %>%\r\n  group_by(Week, Category) %>%\r\n  arrange(Group, .by_group = T) %>%\r\n  mutate(\r\n    Odds = CumFreq / (1 - CumFreq),\r\n    OR = ifelse(Group == \"Active\", round(Odds / Odds[2], 2), NA),\r\n    seOR = ifelse(Group == \"Active\", sqrt(\r\n      1 / CumN + 1 / (Total.sample.size - CumN) + 1 / CumN[2] + 1 / (Total.sample.size[2] -\r\n                                                                       CumN[2])\r\n    ), NA),\r\n    ORlower95CI = ifelse(Group == \"Active\", round(OR - 1.96 * seOR, 2), NA),\r\n    ORupper95CI = ifelse(Group == \"Active\", round(OR + 1.96 * seOR, 2), NA)\r\n  )\r\nl\r\n\r\nk = 3\r\nlabs <- c(\"Normal, not at all ill -   1\",\r\n          \"Normal to borderline ill - <=2\",\r\n          \"Normal to mildly ill - <=3\")\r\n\r\np1 <-\r\n  ggplot(data = l[l$Category <= k,], aes(x = `Cumulative %`, y = Category, col =\r\n                                           Group)) +\r\n  geom_point(size = 5) +\r\n  facet_grid(rows = vars(Week)) +\r\n  labs(title = \"Cumulative Percentage of response\", y = \"\", x = \"\") +\r\n  scale_y_continuous(breaks = 1:k, labels = labs) +\r\n  scale_x_continuous(limits = c(0, 100)) +\r\n  theme_bw() +\r\n  theme(legend.position = \"none\") +\r\n  labs(title = \"%\") +\r\n  geom_text_repel(aes(label = paste(sprintf(\r\n    \"%.1f\", `Cumulative %`\r\n  ), \"%\")),\r\n  nudge_y = 0.1)\r\np1\r\n\r\nlegend_b <- get_legend(p1 +\r\n                         guides(color = guide_legend(nrow = 1)) +\r\n                         theme(legend.position = \"bottom\"))\r\n\r\n\r\np2 <-\r\n  ggplot(data = l[l$Category <= k &\r\n                    !is.na(l$OR),], aes(x = OR, y = Category)) +\r\n  geom_point(size = 3, pch = 15) +\r\n  geom_linerange(aes(xmin = ORlower95CI, xmax = ORupper95CI)) +\r\n  geom_vline(xintercept = 1, linetype = 3) +\r\n  facet_grid(rows = vars(Week)) +\r\n  scale_y_continuous(breaks = 1:k, labels = labs) +\r\n  scale_x_continuous(limits = c(0, 5)) +\r\n  theme_bw() +\r\n  theme(legend.position = \"none\",\r\n        axis.text.y = element_blank()) +\r\n  labs(x = \"\", title = \"OR\") +\r\n  geom_text_repel(aes(label = sprintf(\"%.2f\", OR)),\r\n                  nudge_y = 0.1)\r\np2\r\n\r\nplot_row <- plot_grid(p1, p2, nrow = 1, rel_widths = c(2, 1))\r\n\r\ntitle <- ggdraw() +\r\n  draw_label(\r\n    \"Active treatment is more effective than comparator\",\r\n    fontface = 'bold',\r\n    x = 0,\r\n    hjust = 0,\r\n    size = 24,\r\n  ) +\r\n  theme(plot.margin = margin(0, 0, 0, 7))\r\n\r\np <- plot_grid(title,\r\n               plot_row,\r\n               legend_b,\r\n               ncol = 1,\r\n               rel_heights = c(0.1, 1, 0.05))\r\n\r\np\r\n\r\n\r\n\r\nSecond image:\r\n\r\n\r\nlibrary(RCurl)\r\nlibrary(dplyr)\r\nlibrary(tidyr)\r\nlibrary(ggplot2)\r\nlibrary(ggrepel)\r\nlibrary(cowplot)\r\nlibrary(ggtext)\r\nx <-\r\n  getURL(\r\n    \"https://raw.githubusercontent.com/VIS-SIG/Wonderful-Wednesdays/master/data/2023/2023-05-10/CGI_S_3_groups_csv.csv\"\r\n  )\r\ny <- read.csv(text = x) %>%\r\n  rename(Group = CGI)\r\ny\r\n\r\nl <- y %>%\r\n  pivot_longer(cols = X1:X7,\r\n               names_to = \"Category\",\r\n               values_to = \"n\") %>%\r\n  mutate(Category = as.numeric(gsub(\"X\", \"\", Category))) %>%\r\n  group_by(Week, Group) %>%\r\n  arrange(Category) %>%\r\n  mutate(\r\n    CumN = cumsum(n),\r\n    Week = paste(\"Week\", Week),\r\n    CumFreq = CumN / Total.sample.size,\r\n    Freq = n / Total.sample.size,\r\n    `Cumulative %` = round(CumFreq * 100, 1),\r\n    `%` = round(Freq * 100, 1)\r\n  ) %>%\r\n  ungroup() %>%\r\n  group_by(Week, Category) %>%\r\n  arrange(Group, .by_group = T) %>%\r\n  mutate(\r\n    Odds = CumFreq / (1 - CumFreq),\r\n    OR = ifelse(Group == \"Active\", round(Odds / Odds[2], 2), NA),\r\n    selogOR = ifelse(Group == \"Active\", sqrt(\r\n      1 / CumN + 1 / (Total.sample.size - CumN) + 1 / CumN[2] + 1 / (Total.sample.size[2] -\r\n                                                                       CumN[2])\r\n    ), NA),\r\n    ORlower95CI = ifelse(Group == \"Active\", round(exp(log(OR) - 1.96 * selogOR), 2), NA),\r\n    ORupper95CI = ifelse(Group == \"Active\", round(exp(log(OR) + 1.96 * selogOR), 2), NA)\r\n  )\r\nl\r\n\r\nk = 3\r\nlabs <- c(\"Normal, not at all ill -   1\",\r\n          \"Normal to borderline ill - <=2\",\r\n          \"Normal to mildly ill - <=3\")\r\n\r\np1 <-\r\n  ggplot(data = l[l$Category <= k,], aes(x = `Cumulative %`, y = Category, col =\r\n                                           Group)) +\r\n  geom_point(size = 5) +\r\n  facet_grid(rows = vars(Week)) +\r\n  labs(title = \"Cumulative percentage of response\", y = \"\", x = \"\") +\r\n  scale_y_continuous(breaks = 1:k, labels = labs) +\r\n  scale_x_continuous(limits = c(0, 100)) +\r\n  theme_bw() +\r\n  theme(legend.position = \"none\",\r\n        strip.text = element_blank()) +\r\n  geom_text_repel(aes(label = paste(sprintf(\r\n    \"%.1f\", `Cumulative %`\r\n  ), \"%\")),\r\n  nudge_y = 0.1)\r\np1\r\n\r\nlegend_b <- get_legend(p1 +\r\n                         guides(color = guide_legend(nrow = 1)) +\r\n                         theme(legend.position = \"bottom\",\r\n                               legend.title = element_blank(),\r\n                               legend.text = element_text(size = 12)))\r\np2 <-\r\n  ggplot(data = l[l$Category <= k &\r\n                    !is.na(l$OR),], aes(x = OR, y = Category)) +\r\n  geom_point(size = 3, pch = 15) +\r\n  geom_linerange(aes(xmin = ORlower95CI, xmax = ORupper95CI)) +\r\n  geom_vline(xintercept = 1, linetype = 3) +\r\n  facet_grid(rows = vars(Week)) +\r\n  scale_y_continuous(breaks = 1:k, labels = labs) +\r\n  scale_x_continuous(limits = c(0, 6)) +\r\n  theme_bw() +\r\n  theme(legend.position = \"none\",\r\n        axis.text.y = element_blank()) +\r\n  labs(x = \"\", y=\"\", title = \"OR (Active vs. Comparator)\") +\r\n  geom_text_repel(aes(label = sprintf(\"%.2f\", OR)),\r\n                  nudge_y = 0.1) +\r\n  theme(strip.text = element_text(size=12))\r\np2\r\n\r\nplot_row <- plot_grid(p1, p2, nrow = 1, rel_widths = c(2, 1))\r\n\r\ntitle <- ggdraw() +\r\n  draw_label(\r\n    \"Active treatment is more effective than comparator at Week 52\",\r\n    fontface = 'bold',\r\n    x = 0,\r\n    hjust = 0,\r\n    size = 24,\r\n  ) +\r\n  theme(plot.margin = margin(0, 0, 0, 7))\r\n\r\np <- plot_grid(title,\r\n               plot_row,\r\n               legend_b,\r\n               ncol = 1,\r\n               rel_heights = c(0.1, 1, 0.05))\r\np\r\n\r\n\r\n\r\nBack to blog\r\n\r\n\r\n\r\n",
    "preview": "posts/2023-05-29-wonderful-wednesdays-may-2023/./images/lollipop_forest - Paolo Eusebi.png",
    "last_modified": "2025-08-22T14:49:31+02:00",
    "input_file": {},
    "preview_width": 1200,
    "preview_height": 800
  },
  {
    "path": "posts/2023-04-16-wonderful-wednesdays-april-2023/",
    "title": "Wonderful Wednesdays April 2023",
    "description": "This month’s challenge will be to visualise diary data, whereby patients complete a diary (grading a number of symptoms), each day. For this challenge, we consider a hypothetical diary, consisting of 6 symptoms (Exhaustion, Aching, Tenderness, Depression, Loneliness, Anxiety). 300 subjects (200 active, 100 placebo), grade each of these symptoms on a 4-point scale (0 = None, 1 = Minor, 2 = Moderate, 3 = Extreme) each day, for 100 days.",
    "author": [
      {
        "name": "PSI VIS SIG",
        "url": "https://www.psiweb.org/sigs-special-interest-groups/visualisation"
      }
    ],
    "date": "2023-04-12",
    "categories": [
      "Diary Data",
      "Wonderful Wednesdays"
    ],
    "contents": "\r\nDiary Data Challenge\r\nThis month’s challenge will be to visualise diary data, whereby\r\npatients complete a diary (grading a number of symptoms), each day. For\r\nthis challenge, we consider a hypothetical diary, consisting of 6\r\nsymptoms (Exhaustion, Aching, Tenderness, Depression, Loneliness,\r\nAnxiety). 300 subjects (200 active, 100 placebo), grade each of these\r\nsymptoms on a 4-point scale (0 = None, 1 = Minor, 2 = Moderate, 3 =\r\nExtreme) each day, for 100 days.\r\n\r\n\r\nExample 1.\r\npdf\r\nfile 1pdf file\r\n2\r\n(A summary of the discussion will be added shortly.)\r\nlink to code\r\n\r\nCode\r\n\r\nExample 1. \r\n\r\n\r\n# packages\r\npacman::p_load(tidyverse, rio, labelled)\r\npacman::p_load(ggfittext)\r\npacman::p_load(ggh4x)\r\npacman::p_load(ggtext)  \r\n\r\n# working dir\r\nsetwd('C:/R/Wonderful-Wednesdays/2023-03-08')\r\n\r\n# import\r\nWWWDiary <- import(\"https://raw.githubusercontent.com/VIS-SIG/Wonderful-Wednesdays/master/data/2023/2023-03-08/WWWDiary.Rds\")\r\n\r\n# export\r\nexport(WWWDiary, 'WWWDiary.csv')\r\nexport(WWWDiary, 'WWWDiary.rds')\r\n\r\n# transform\r\ndiary   <- WWWDiary %>% \r\n   relocate(AVALC, .after = AVAL) %>% \r\n   mutate(AVAL = as.numeric(AVAL)) %>% \r\n   mutate(AVALC = factor(AVALC,\r\n                         levels = c('None','Minor','Moderate','Extreme')) %>% fct_rev() )\r\n\r\n# NEST T-TEST\r\ndiary_nest <- diary %>%\r\n   nest_by(ADY, PARAM, PARAMN) %>% \r\n   mutate(t.test = list( t.test(AVAL ~ TRT, data = data) %>% \r\n                            broom::tidy() ) ) %>% \r\n   select(-data) %>% \r\n   unnest(cols = c(t.test))\r\n\r\n# Differences\r\ndiary_d <- diary_nest %>%\r\n   ungroup() %>% \r\n   nest_by(PARAM, PARAMN) %>% \r\n   mutate(gg_d = list( \r\n      data %>% \r\n         ggplot(aes(y = I(-1*ADY), x = estimate) ) +\r\n         geom_vline(xintercept = 0, color = 'gray50') +\r\n         geom_pointrange( aes(xmin = conf.low, xmax = conf.high), \r\n                          size = 0.1,\r\n                          alpha = .5) +\r\n         geom_smooth(orientation = 'y', formula = y ~ x,\r\n                     se = FALSE,  color = 'black', span = 0.35 ) +\r\n         scale_y_continuous(name = NULL,\r\n                            expand = c(0.005, 0.005),\r\n                            labels = abs,\r\n                            breaks = -1*c(1, 25, 50, 75, 100),\r\n                            sec.axis = dup_axis() ) +\r\n         scale_x_continuous(name = NULL,\r\n                            limits = c(-2.0, 2.0),\r\n                            expand = c(0, 0),\r\n                            breaks = seq(-2, 2, 1) ) +\r\n         \r\n         annotate('segment', \r\n                  arrow = arrow(angle = 20,\r\n                                length = unit(0.05,\"native\"),\r\n                                type = 'closed'),\r\n                  x = -1, xend = -1.9,\r\n                  y = -3, yend = -3) +\r\n         \r\n         annotate('segment', \r\n                  arrow = arrow(angle = 20,\r\n                                length = unit(0.05,\"native\"),\r\n                                type = 'closed'),\r\n                  x = 1, xend = 1.9,\r\n                  y = -3, yend = -3) +\r\n         \r\n         annotate('text', \r\n                  label = 'Improvement', size = 1.85,\r\n                  x = -1.5,\r\n                  y = -6) +\r\n         \r\n         annotate('text', \r\n                  label = 'Deterioration', size = 1.85,\r\n                  x = 1.5,\r\n                  y = -6) +\r\n         \r\n         theme_light() +\r\n         \r\n         theme( panel.grid.minor = element_blank(),\r\n                strip.background.y = element_blank(),\r\n                strip.text.y = element_blank() ) \r\n      ) )\r\n\r\n# Histogram (day)\r\ndiary_h <- diary %>% \r\n   nest_by(PARAM, PARAMN, TRT) %>% \r\n   mutate(data = list( data %>% mutate(PARAM = PARAM,\r\n                                       TRT = TRT) ) ) %>% \r\n   mutate(gg_h = list( \r\n      ggplot(data = data,\r\n             aes(y = I(-1*ADY), fill = AVALC)) +\r\n         geom_histogram(binwidth  = 1, position = 'fill') +\r\n         \r\n         facet_wrap(str_glue(\"{PARAM} {str_to_upper(TRT)}\") ~ .,\r\n                    strip.position = ifelse(TRT == 'Active', \"left\", \"right\") ) +\r\n         \r\n         scale_x_continuous(name = NULL,\r\n                            expand = c(0, 0),\r\n                            labels = scales::percent,\r\n                            trans = ifelse(TRT=='Active','identity','reverse')) +\r\n         scale_y_continuous(name = NULL,\r\n                            expand = c(0, 0),\r\n                            labels = abs,\r\n                            breaks = -1*c(1, 25, 50, 75, 100),\r\n                            position = ifelse(TRT == 'Active', 'right', 'left') ) +\r\n         scale_color_brewer(name = NULL,\r\n                            palette = 'Reds',\r\n                            direction = -1,\r\n                            aesthetics = c(\"colour\", \"fill\") ) +\r\n         theme_light() +\r\n         theme(panel.grid    = element_blank(),\r\n               axis.text.y   = element_blank(), \r\n               legend.position = \"none\",\r\n               strip.text = element_text(color = \"black\",\r\n                                         face = 'bold') ) )\r\n   ) %>% \r\n   mutate(gg_h2 = list( \r\n      ggplot(data = data,\r\n             aes(y = 1, fill = AVALC, label = AVALC) ) +\r\n         \r\n         geom_histogram(binwidth  = 1, position = 'fill') +\r\n         \r\n         geom_fit_text(stat=\"bin\", binwidth  = 1, position=\"fill\", fontface = 'bold', grow = TRUE) +\r\n         \r\n         scale_x_continuous(expand = c(0.04, 0.07),\r\n                            trans = ifelse(TRT=='Active','identity','reverse')) +\r\n         \r\n         scale_y_continuous(expand = c(0, 0)) +\r\n         \r\n         scale_color_brewer(name = NULL,\r\n                            palette = 'Reds',\r\n                            direction = -1,\r\n                            aesthetics = c(\"colour\", \"fill\") ) +\r\n         \r\n         theme_void() +\r\n         \r\n         theme(legend.position = \"none\") ) )\r\n\r\n# COMBINE\r\npacman::p_load(patchwork)\r\n\r\nf1 <- (diary_h$gg_h[[1]] + diary_d$gg_d[[1]] + diary_h$gg_h[[2]]) / \r\n   (diary_h$gg_h2[[1]] + plot_spacer() + diary_h$gg_h2[[2]]) + plot_layout(heights = c(20, 1) ) \r\n\r\nf2 <- (diary_h$gg_h[[3]] + diary_d$gg_d[[2]] + diary_h$gg_h[[4]]) /\r\n   (diary_h$gg_h2[[3]] + plot_spacer() + diary_h$gg_h2[[4]])  + plot_layout(heights = c(20, 1) )\r\n\r\nf3 <- (diary_h$gg_h[[5]] + diary_d$gg_d[[3]] + diary_h$gg_h[[6]]) /\r\n   (diary_h$gg_h2[[5]] + plot_spacer() + diary_h$gg_h2[[6]])  + plot_layout(heights = c(20, 1) )\r\n\r\nf4 <- (diary_h$gg_h[[7]] + diary_d$gg_d[[4]] + diary_h$gg_h[[8]]) /\r\n   (diary_h$gg_h2[[7]] + plot_spacer() + diary_h$gg_h2[[8]])  + plot_layout(heights = c(20, 1) )\r\n\r\nf5 <- (diary_h$gg_h[[9]] + diary_d$gg_d[[5]] + diary_h$gg_h[[10]]) /\r\n   (diary_h$gg_h2[[9]] + plot_spacer() + diary_h$gg_h2[[10]])  + plot_layout(heights = c(20, 1) )\r\n\r\nf6 <- (diary_h$gg_h[[11]] + diary_d$gg_d[[6]] + diary_h$gg_h[[12]]) /\r\n   (diary_h$gg_h2[[11]] + plot_spacer() + diary_h$gg_h2[[12]])  + plot_layout(heights = c(20, 1) )\r\n\r\n# EXPORT\r\nggsave(filename = 'WWWDiary.pdf',\r\n       plot = (f1  | f2 | f3 ) / (f4 | f5 | f6) & theme( plot.margin = margin(6, 6, 6, 6, \"pt\") ),\r\n       width = 24, height = 10)\r\n\r\n# One subscale\r\nf1 +\r\nplot_annotation(\r\n   title = '<span style = \"font-size:12pt\"> Results for the <b>Aching<\/b> subscale<\/span><br>\r\n               **Top left** Histogram showing the distribution of symptom scores (x-axis) under the ACTIVE arm (n=200) across 100 days (y-axis)\r\n               <br> **Center panel** Daily difference (w 95% CI) of ACTIVE vs PLACEBO, with Loess line overlayed overtime (negative --> reduction ACTIVE arm) \r\n               <br> **Top right** Mirrored histogram of the symptom scores (x-axis) under the PLACEBO Arm (n=100) across 100 days (y-axis). \r\n               <br> **Bottom left/right** stacked bar charts for ACTIVE (left) and PLACEBO (right) groups during the 100 days',\r\n   caption  = 'Symptoms on a 4-point scale (0 = None, 1 = Minor, 2 = Moderate, 3 = Extreme) each day, for 100 days.') & \r\n   theme( plot.margin = margin(2, 2, 2, 2, \"pt\"),\r\n          plot.title = element_markdown(size = 9,\r\n                                           fill = 'gray85',\r\n                                           padding = margin(5, 5, 5, 5),\r\n                                           r = grid::unit(8, \"pt\") ) )\r\n\r\nggsave(filename = 'WWWDiary_Aching.pdf',\r\n       width = 8, height = 5)\r\n\r\n\r\n\r\nBack to blog\r\n\r\n\r\n\r\n",
    "preview": "posts/2023-04-16-wonderful-wednesdays-april-2023/./images/WWWDiary_Aching - Agustin Calatroni.png",
    "last_modified": "2025-08-22T14:49:28+02:00",
    "input_file": {},
    "preview_width": 2400,
    "preview_height": 1500
  },
  {
    "path": "posts/2023-04-16-wonderful-wednesdays-march-2023/",
    "title": "Wonderful Wednesdays March 2023",
    "description": "This month’s challenge was to improve a published visualisation. The visualisation displayed the mean (and SD) Dermatology Life Quality Index (DLQI) score for 12 studies on alopecia areata. The publication had visualised these using ‘dynamite plots’, a type of visualisation which has received criticism in the past.",
    "author": [
      {
        "name": "Rhys Warham",
        "url": "https://www.psiweb.org/sigs-special-interest-groups/visualisation"
      }
    ],
    "date": "2023-03-08",
    "categories": [
      "DLQI",
      "Wonderful Wednesdays"
    ],
    "contents": "\r\nDLQI data\r\nThis month’s challenge was to improve a published visualisation. The\r\nvisualisation displayed the mean (and SD) Dermatology Life Quality Index\r\n(DLQI) score for 12 studies on alopecia areata. The publication had\r\nvisualised these using ‘dynamite plots’, a type of visualisation which\r\nhas received criticism in the past.\r\nA recording of the session can be found here.\r\n\r\nExample 1.\r\nhigh\r\nresolution image\r\nThe first visualisation had simulated the DLQI scores of individual\r\npatients, to provide mean and standard deviations equal to those\r\npublished for each of the studies. These individual data points are then\r\nplotted for each of the studies, with the corresponding densities\r\ndisplayed. This nicely highlights, in this case, how a simple\r\npresentation of mean and standard deviation may not capture the\r\nexperience of many of the individual patients within the studies. The\r\nmean for each study is still displayed as a diamond, and has its size\r\nset proportional to the sample size for the respective study. Such a\r\ndisplay is effectively used in some of the other submissions from this\r\nwebinar, but here does sometimes cause the mean to be somewhat difficult\r\nto spot, particularly for small studies with a mean value close to an\r\ninteger score (where it overlaps with individual data points – see for\r\ninstance, study 11). Reference lines are added to display the meaningful\r\nscore categories which exist for DLQI total score at a patient level.\r\nThese in turn dictate the colours used for each study, with a telling\r\ntitle added to provide an interpretation of the overall patient\r\nexperience. A more convincing message could have been delivered by\r\napplying a logical sorting based on e.g. mean score, rather than study\r\nnumber.\r\nlink to code\r\n\r\nExample 2.\r\nhigh resolution image\r\nThis is a simple, but clean visualisation with logical ordering of\r\nstudies based on mean DLQI score. As per some of the other submissions,\r\nthe axes have been flipped here compared to the original, published\r\nvisualisation. This allows for the author name and sample size to be\r\ndisplayed on the label, as well as sample size. However, sample size\r\ncould more effectively be encoded within the plot itself, to save the\r\nreader from having to study the axis labels at length. There is a\r\ntelling title added with colours nicely included to link the title to\r\nthe plot itself. Additional information is deferred to a footnote, and\r\nhere shading is used to display the meaningful DLQI categories (again,\r\nthese categories are for DLQI scores at a total level). These categories\r\nmotivate a panel discussion on how useful it is to display these\r\ncategories, corresponding to individual patients, for a presentation of\r\nthe mean. The issue here is that, due to DLQI only taking integer scores\r\nfor each patient, the meaningful categories have gaps between their\r\nextremes. The author has chosen to leave these as blank space in the\r\nplot, which could be confusing for a reader who is not familiar with\r\nDLQI scores or the categories. An alternative would be to use the\r\nmidpoints (1.5 and 5.5 for the displayed categories) as the values to\r\nchange the shading at. This submission also lead to a nice discussion on\r\nminimising white space, while avoiding confusion. The user only takes\r\nthe x-axis as far as a score of 10, which captures all the observed\r\ndata, while presenting it in the maximum amount of space to allow\r\ncomparison between the categories. However, it could mislead the reader\r\nthat several studies have a mean DLQI score close to the upper limit of\r\nthose which can be taken by the tool (which is not the case, DLQI scores\r\ncan be as high as 30). Taking the x-axis as far as 30 here would give an\r\neasier interpretation of the overall experience of patients with\r\nalopecia areata, compared with what is possible.\r\nlink to code\r\n\r\nExample 3.\r\nhigh\r\nresolution image\r\nThis is a very similar submission to the previous one. The two each\r\naddress some of the disadvantages of one another, and a visualisation\r\nwhich takes the best elements from both could be extremely effective\r\nhere. This submission again has a telling title, with additional\r\ninformation deferred to the footnotes. The overall presentation is again\r\nclean, with reference lines added to show the meaningful score\r\ncategories which exist for DLQI total score at a patient level (unlike\r\nthe previous submission, the author has chosen to set the ‘cut-points’\r\nbetween pairs of adjacent categories at the lower extreme of the higher\r\ncategory (scores of 2, 6 etc.). By taking the x-axis as far as 30 here,\r\nwe get a better impression of the experience of patients compared to the\r\nrange of possible values. The sample size is again nicely encoded here\r\nby scaling the size of the point to be proportional to this sample size.\r\nWhile this would be aided by a legend so we know what each size of point\r\nrepresents, one panellist did make the observation that the largest\r\nstudy has the lowest mean score, so actually overall (across studies) we\r\ndo have a large number of patients with lower DLQI scores. Two sets of\r\nerror bounds (68% and 95% confidence limits) are displayed usual\r\ndifferent levels of shading, allowing additional information to be\r\nadding while retaining a clean presentation with minimal clutter.\r\nHowever, the visualisation could again benefit based on a more logical\r\nsorting, such as by mean DLQI score (per the previous submission), or\r\npossibly based on the sample size of the study?\r\nlink to code\r\n\r\nExample 4.\r\n\r\nhigh resolution\r\nimage.\r\nThis submission opted to display data for their own simulated\r\nstudies, rather than use the summary stats given from the published\r\nvisualisation (which is completely fine to do for our webinars!). It had\r\na striking appearance with the dark background vibrant plotting colours,\r\nwhich we can imagine standing out from a crowd in e.g. a busy conference\r\nhall. The plot itself present different panels for different studies,\r\nwith individual data points shown and lines connecting the means of the\r\ndata points. This allows a lot of information (different studies, with\r\ndifferent treatments and numbers of treatments, different assessment\r\nschedules, etc.) to be displayed in a single plot. Clutter is minimal,\r\nwith a single x-axis common to the four panels, although there is\r\nprobably a maximum number of studies we could probably plot before the\r\npanels become too small to easily read. The combination of individual\r\ndata points and means is nice, as per submission 1, for given a better\r\noverview of the experiences of individual patients (many of whom will\r\nnot be accurately reflected by summary stats alone). One challenge with\r\nthis plot is the need for jittering of the arms (so as to make them\r\nreadable). To a lesser extent, this causes a challenge that some arms\r\nare not displayed at the correct position on the x-axis (the jittering\r\nmakes the final assessment for Study 2, Treatment C to appear to be\r\nlater than or at a similar time to the Placebo assessment for Study 1\r\nwhich is plotted above, which is not the case). However, the reader\r\nintuitively interprets the timepoint of the assessment is the midpoint\r\nof the times of the different arms for a given study, so this issue is\r\nnot critical. However, the fact that the lines, connecting the means,\r\nconnect to points which are plotted at different points on the x-axis\r\ncauses a challenge (because moving the position of the mean relative to\r\nthe x-axis changes the slopes of the connecting lines and how quickly\r\nthey reach the means for the different arms).\r\nlink to code\r\n\r\nExample 5.\r\n\r\nThe html file can be found here\r\nThis is an informative submission which can be broken down into its\r\ndifferent panels. These panels are supplemented by additional links and\r\ninformative subheadings to aid understanding. The user is first\r\npresented with some general information about the studies (demographics,\r\nas well as sample size). The cells presenting sample size are shaded in\r\naccordance with the sample size, and these sample sizes are used to\r\nprovide a logical ordering of the studies. The choice of the intense\r\nshade for the largest sample size immediately draws our attention to\r\nthat study. The next panel then displays small 5-number summaries for\r\nthe total DLQI in each study (presenting mean, medians, quartiles and\r\nSD). One panellist did pick out that the choice of display for the\r\nmedian and quartiles could confuse a reader who does not take care to\r\nread the legend, as they could interpret the display as a boxplot (which\r\nwould have the quartiles displayed differently). A shaded is applied\r\nwithin this column, which is intuitive with ‘clearance’ of issues and\r\nthe intense, dark red shade depicting the largest (negative) impact. It\r\ncould be argued that the select shades should be based on the DLQI score\r\nrange of 0 to 30, as opposed to the observed means for the selected\r\nstudies (could mislead that the highest mean of 10.7, here, is towards\r\nthe upper extreme of possible DLQI scores). The final panel presents\r\ndensity dot plots for simulated patient level data. While the individual\r\npoints are a little small to make out (meaning we don’t see a lot for\r\nsome of the smaller studies), this nicely highlights how summary stats\r\nmay not capture the experience of many patients, per other submissions\r\nwhich have presented simulated patient level data. The mean is added as\r\na reference line to aid interpretation, and the x-axis presents the full\r\nrange of 0 to 30 here, indicating that across studies, the bulk of\r\npatients have DLQI scores towards the lower end of the DLQI range\r\n(mitigating against misunderstanding which could have been caused by the\r\nshading in the previous panel, as well as driving home just how\r\ndifferent some of the sample sizes are)\r\nlink to code\r\n\r\nExample 6.\r\n\r\nhigh resolution image.\r\nCode\r\n\r\nExample 1.\r\nThe code can be found in this zip\r\nfile.\r\nBack to blog\r\n\r\nExample 2.\r\nNo code is available.\r\nBack to blog\r\n\r\nExample 3.\r\nThe code can be found in this zip\r\nfile.\r\nBack to blog\r\n\r\nExample 4.\r\n\r\n\r\n#----------------------------------------------------\r\n# PSI Wonderful Wednesdays Challenge February 2023\r\n#----------------------------------------------------\r\n\r\n# Clear environment and read in libraries\r\nrm(list = ls())\r\nlibrary(tidyverse)\r\nlibrary(scales)\r\nlibrary(ggtext)\r\n\r\n# Simulate 4 studies with different treatments/sample sizes\r\nsubjects <- as.character(seq(1, 850))\r\n\r\ntrts <- c(sample(c('Placebo', 'A', 'B'),\r\n                 size = 300, replace = T),\r\n          sample(c('Placebo', 'C'),\r\n                 size = 100, replace = T),\r\n          sample(c('B', 'C'),\r\n                 size = 300, replace = T),\r\n          sample(c('B', 'D'),\r\n                 size = 150, replace = T))\r\n\r\nstudies <- c(rep('Study 1', 300),\r\n             rep('Study 2', 100),\r\n             rep('Study 3', 300),\r\n             rep('Study 4', 150))\r\n\r\nvisits <- c(rep(seq(0, 100, length.out = 10), each = 300),\r\n            rep(seq(0, 75,  length.out  = 8), each = 100),\r\n            rep(seq(0, 100, length.out = 10), each = 300),\r\n            rep(seq(0, 50,  length.out = 6),  each = 150))\r\n\r\n# Random study effects\r\nstudy_effs <- c(rep(rnorm(1, sd = 3), 300),\r\n                rep(rnorm(1, sd = 3), 100),\r\n                rep(rnorm(1, sd = 3), 300),\r\n                rep(rnorm(1, sd = 3), 150))\r\n\r\n# Random subject effects\r\nsub_effs <- rnorm(850, 0, 3)\r\n\r\n# Repeat values for each visit e.g. in study 1, each subject needs 10 records\r\nsplit <- function(vec){\r\n  return(\r\n    c(rep(vec[1:300], 10),\r\n      rep(vec[301:400], 8),\r\n      rep(vec[401:700], 10),\r\n      rep(vec[701:850], 6)))\r\n}\r\n\r\n# Create study dataframe\r\ndf <- data.frame(subject   = split(subjects),\r\n                 study     = split(studies),\r\n                 trt       = split(trts),\r\n                 study_eff = split(study_effs),\r\n                 sub_eff   = split(sub_effs),\r\n                 time      = as.character(round(visits, 0)))\r\n\r\n# Find each subject/treatment combo - will need to merge this on later\r\nsubject_df <- df %>%\r\n              select(subject, trt) %>%\r\n              mutate(trt = if_else(trt != 'Placebo',\r\n                                   paste0('Treatment ', trt),\r\n                                   trt)) %>%\r\n              unique()\r\n\r\n# Coefficients for treatment variables\r\nbeta0 <- 15\r\nbetaA <- 0.2\r\nbetaB <- -0.1\r\nbetaC <- 0.1\r\nbetaD <- 0.05\r\n\r\n# Coefficients for interaction variables\r\ngamma <- 0.01\r\ngammaA <- 0.025\r\ngammaB <- -0.1\r\ngammaC <- 0.0001\r\ngammaD <- -0.05\r\n\r\n\r\n# Find DLQI score for each \r\ndlqi_calc <- function(n, A, B, C, D, time, study_eff, sub_eff){\r\n  \r\n  dlqi <- beta0 + betaA*A + betaB*B +\r\n          betaC*C + betaD*D + \r\n          gamma*time + gammaA*A*time + gammaB*B*time +\r\n          gammaC*C*time + gammaD*D*time +\r\n          sub_eff + study_eff\r\n  \r\n  return(rnorm(n, dlqi, 3))\r\n}\r\n\r\n\r\ndlqi_df <- df %>%\r\n  \r\n           # Create variables needed for dlqi_calc\r\n           pivot_wider(id_cols = c(subject, study, study_eff, sub_eff, time),\r\n                       names_from = trt,\r\n                       values_from = trt,\r\n                       values_fn = length,\r\n                       values_fill = 0) %>%\r\n           mutate(time = as.numeric(time),\r\n                  dlqi = dlqi_calc(n(), A, B, C, D, time, study_eff, sub_eff),\r\n                  \r\n                  # Apply cut-off thresholds\r\n                  dlqi = case_when(\r\n                                   dlqi < 0 ~ 0,\r\n                                   dlqi > 30 ~ 30,\r\n                                   T ~ dlqi)) %>%\r\n           left_join(subject_df, by = 'subject') %>%\r\n           group_by(trt, study, time) %>%\r\n           mutate(mean = mean(dlqi),\r\n                  \r\n                  # Add some jitter so plot points are not over-layed\r\n                  time = case_when(study == 'Study 1' & trt == 'Placebo' ~ time - 2,\r\n                          study == 'Study 1' & trt == 'Treatment B' ~ time + 2,\r\n                          study == 'Study 2' & trt == 'Placebo' ~ time - 1,\r\n                          study == 'Study 2' & trt == 'Treatment C' ~ time + 1,\r\n                          study == 'Study 3' & trt == 'Treatment B' ~ time - 1,\r\n                          study == 'Study 3' & trt == 'Treatment C' ~ time + 1,\r\n                          study == 'Study 4' & trt == 'Treatment D' ~ time + 1,\r\n                          study == 'Study 4' & trt == 'Treatment B' ~ time - 1,\r\n                          T ~ time))\r\n  \r\n# Color the subscript treatment labels\r\ncolor_label <- function(color, trt){\r\n    paste0(\"N\",\r\n    \"<sub><span style = 'color:\", color, \";'>\", trt, \"<\/span><\/sub><\/span>\")\r\n}\r\n\r\nnP <- color_label(hue_pal()(5)[1], 'P')\r\nnA <- color_label(hue_pal()(5)[2], 'A')\r\nnB <- color_label(hue_pal()(5)[3], 'B')\r\nnC <- color_label(hue_pal()(5)[4], 'C')\r\nnD <- color_label(hue_pal()(5)[5], 'D')\r\n\r\n# Create the desired facet labels\r\nstudy.labs <- c(paste0('Study 1 <br><br>',\r\n                       nP, ' = ', nA, ' = ', nB, ' = 100'),\r\n                paste0('Study 2 <br><br>' ,\r\n                       nP, ' = ', nC, ' = ', '50'),\r\n                paste0('Study 3 <br><br>',\r\n                       nB, ' = ', nC, ' = ', '100'),\r\n                paste0('Study 4 <br><br>',\r\n                       nB, ' = ', nD, ' = ', '75'))\r\n\r\nnames(study.labs) <- c('Study 1', 'Study 2', 'Study 3', 'Study 4')\r\n\r\n# Create the plot\r\npng(\"plot.png\", res = 500, height = 5, width = 7, units = 'in')\r\n\r\nggplot(data = dlqi_df) +\r\n  \r\n  geom_point(aes(x = time,\r\n                 y = dlqi,\r\n                 color = trt), alpha = 0.1, size = 0.3) +\r\n  \r\n  facet_wrap(~study, ncol = 1, strip.position = 'right',\r\n             labeller = labeller(study = study.labs)) +\r\n  \r\n  geom_line(aes(x = time,\r\n                y = mean,\r\n                group = trt,\r\n                color = trt),\r\n            size = 0.5, alpha = 0.75) +\r\n  \r\n  theme(panel.background       = element_rect(fill = 'gray10'),\r\n        panel.border           = element_rect(color = 'gray20', \r\n                                              size  = unit(1, 'in'), \r\n                                              fill  = NA),\r\n        plot.margin            = margin(20, 20, 20, 20),\r\n        panel.grid.minor       = element_blank(),\r\n        plot.background        = element_rect(fill  = 'gray10', \r\n                                              color = 'gray10'),\r\n        panel.grid.major       = element_line(color ='gray13'),\r\n\r\n        legend.position        = c(0.43, 1.17),\r\n        legend.justification   = 'top',\r\n        legend.background      = element_rect(fill = 'gray10'),\r\n        legend.title           = element_blank(),\r\n        legend.key             = element_rect(fill = 'gray10'),\r\n        legend.text.align      = 0,\r\n        legend.text            = element_text(color = 'gray90',\r\n                                              size = 8),\r\n        \r\n        strip.background       = element_rect(fill = 'gray20'),\r\n        panel.spacing          = unit(0.15, 'in'),\r\n        strip.text.y           = element_markdown(angle = 0, \r\n                                                  color = 'white',\r\n                                                  face  = 'bold', \r\n                                                  size  = 8),\r\n\r\n        axis.text             = element_text(color = 'gray70'),\r\n        axis.title.x          = element_text(hjust  = 0, \r\n                                             color  = 'white',\r\n                                             face   = 'bold',\r\n                                             margin = margin(t = 12.5),\r\n                                             size   = 8),\r\n        plot.title            = element_text(color = 'white', \r\n                                             hjust = 0,\r\n                                             face = 'bold',\r\n                                             margin = margin(b = 7),\r\n                                             size = 12),\r\n        plot.subtitle         = element_text(color = 'gray90', \r\n                                             face = 'italic',\r\n                                             size = 7, \r\n                                            margin = margin(b = 32)),\r\n        plot.title.position   = 'plot',\r\n        plot.caption.position = 'plot',\r\n        plot.caption          = element_text(size = 7, \r\n                                             color = 'white', \r\n                                             face = 'bold.italic')) +\r\n  \r\n  \r\n  coord_cartesian(ylim = c(0, 30), clip = 'off') +\r\n  \r\n  guides(color = guide_legend(nrow = 1)) +\r\n  \r\n  labs(x        = 'Relative Day',\r\n       y        = NULL,\r\n       title    = 'Mean DLQI Score over Time for Four Different Studies',\r\n       caption  = 'Huw Wilson',\r\n       subtitle = 'Lower DLQI scores indicate less severe symptoms.')\r\n\r\ndev.off()\r\n\r\n\r\n\r\nBack to blog\r\n\r\nExample 5.\r\n\r\n\r\n# PACKAGES\r\npacman::p_load(tidyverse, rio)\r\npacman::p_load(gtsummary, gt, gtExtras)\r\npacman::p_load(unglue)\r\npacman::p_load(msm)\r\npacman::p_load(scales, ggdist)\r\n\r\n# options\r\nsetwd(dirname(rstudioapi::getActiveDocumentContext()$path))\r\nset.seed(123)\r\n\r\n# DATA MANUSCRIPT\r\ndlqi <- import('DLQI_for_AA_by_study.xlsx') %>% \r\n   janitor::clean_names(case = 'old_janitor') %>% \r\n   mutate(unglue_data(mean_sd, \"{mean_m} ({sd_m})\", convert = TRUE) ) %>%\r\n   mutate(study_number = factor(study_number) %>% fct_reorder(mean_m)) %>% \r\n   rowwise() %>% \r\n   mutate(sim = data.frame(\r\n      rtnorm = rtnorm(n, mean_m, sd_m, lower = 0, upper = 30),\r\n      rnorm  = rnorm(n, mean_m, sd_m)) %>% list(),\r\n      mean_s = mean(sim$rnorm),\r\n      sd_s   = sd(sim$rnorm)) %>% \r\n   arrange(study_number)\r\n\r\n# Nomenclature\r\n# _f figure\r\n# _m manuscript\r\n# _s simulated\r\n\r\n# COLOR\r\n# RColorBrewer::brewer.pal(9,'Reds')\r\n# col_numeric(\"Reds\", domain = 2:11) (dlqi_gt$mean_m) %>% show_col()\r\n#     col_bin(\"Reds\", domain = 2:11, bins = 4) (dlqi_gt$mean_m) %>% show_col()\r\n# col_quantile(\"Reds\", domain = 2:11, n = 4) (dlqi_gt$mean_m) %>% show_col()\r\n\r\n# GENERATE GGPLOT\r\ndlqi_gt <- dlqi %>% \r\n   mutate(\r\n      data = data.frame( \r\n         mean_f = mean_f, sd_f   = sd_f,\r\n         mean_m = mean_m, sd_m   = sd_m,\r\n         mean_s = mean_s, sd_s   = sd_s) %>% list() ) %>% \r\n   ungroup() %>%\r\n   mutate(mean_col = col_bin(\"Reds\", domain = 2:11, bins = 4) (.$mean_m) ) %>%\r\n   rowwise() %>%\r\n   mutate(gg_mean = list(\r\n      \r\n      ggplot(data = data,\r\n             aes(x = mean_m, y = '1' )) +\r\n         \r\n         geom_point(size = 40) +\r\n         \r\n         geom_segment(aes(xend = mean_m + sd_m,\r\n                          yend = '1'),\r\n                      linewidth = 10,\r\n                      arrow = arrow( type = 'closed',\r\n                                     length = unit(0.8, \"inches\") ) ) +\r\n         \r\n         geom_pointrange(data = sim,\r\n                         aes(x = rtnorm, y = '1'),\r\n                         stat = \"summary\",\r\n                         fun.min = function(z) {quantile(z,0.25)},\r\n                         fun.max = function(z) {quantile(z,0.75)},\r\n                         fun = median,\r\n                         shape = 15,\r\n                         linewidth = 10,\r\n                         size = 10,\r\n                         color = 'gray50',\r\n                         position = position_nudge(y = 0.60) ) +\r\n         \r\n         geom_text(size = 40,\r\n                   nudge_y = -.5,\r\n                   #hjust = 0.05,\r\n                   aes(label = style_number(mean_m, digits = 1)) ) +\r\n         \r\n         geom_text(size = 40,\r\n                   nudge_y = -.5,\r\n                   hjust = 0.7,\r\n                   aes(x = mean_m + sd_m,\r\n                       label = str_glue(\"\\u00B1 {style_number(sd_m, digits = 1)}\") ) ) +\r\n         \r\n         coord_cartesian(xlim = c(1, 17)) + \r\n         \r\n         scale_y_discrete(expand = expansion(add = c(-1, -1) ) ) +\r\n         \r\n         theme_void() +\r\n         \r\n         theme(aspect.ratio = 0.25,\r\n               plot.margin = unit(c(0, 0, 0, 0), 'cm'),\r\n               panel.background = element_rect(fill = mean_col)\r\n         )\r\n   ) ,\r\n   ggplot_mean = NA\r\n   ) %>% \r\n   mutate(gg_dist = list(\r\n      ggplot( data = sim ,\r\n              aes(y = '1',\r\n                  x = rtnorm      \r\n              ) ) +\r\n         \r\n         geom_vline(xintercept = mean_m,\r\n                    linewidth = 3,\r\n                    color = mean_col) +\r\n         \r\n         geom_dots(smooth = \"bounded\", layout = \"weave\",\r\n                   slab_linewidth = 0,\r\n                   slab_colour = 'transparent',\r\n                   binwidth = 0.15,\r\n                   slab_fill = 'gray25',\r\n                   na.rm = TRUE) +\r\n         \r\n         geom_vline(xintercept = c(0, 5, 10, 15, 20, 25, 30),\r\n                    color = 'gray15') +\r\n         \r\n         geom_vline(xintercept = c(0, 5, 10, 15, 20, 25, 30),\r\n                    color = 'gray15') +\r\n         \r\n         scale_x_continuous(breaks = c(0, 6, 10, 20, 30),\r\n                            limits = c(0, 30)) +\r\n         \r\n         scale_y_discrete(expand = expansion(add = c(-30, -2) ) ) +\r\n         \r\n         theme_void() +\r\n         \r\n         labs(x = NULL,\r\n              y = NULL) +\r\n         \r\n         theme(panel.grid.minor.x = element_blank(),\r\n               panel.grid.major.y = element_blank(),\r\n               legend.position=\"none\",\r\n               aspect.ratio = 0.20)\r\n   )\r\n   ) %>%\r\n   mutate(ggplot_dist = NA)\r\n\r\n\r\n# TABLE \r\ndlqi_gt %>% \r\n   select(-sim,\r\n          -whiskers,\r\n          -scale,\r\n          -mean_m,\r\n          -mean_col,\r\n          -mean_sd,\r\n          -ends_with(\"_f\"),\r\n          -ends_with(\"_s\")) %>%\r\n   \r\n   gt() %>% \r\n   \r\n   gt_add_divider(study_number) %>% \r\n   \r\n   gt_merge_stack(col1 = study_number, \r\n                  col2 = reference,\r\n                  font_size = c(\"14px\", \"16px\")) %>%\r\n   \r\n   data_color(n,      \r\n              colors = scales::col_quantile(\r\n                 palette = \"Blues\",\r\n                 domain = c(50, 100, 250, 500, 750, 1500),\r\n                 n = 5\r\n              ) ) %>% \r\n   \r\n   sub_missing() %>% \r\n   \r\n   fmt_number(columns = age, decimals = 0) %>%\r\n   \r\n   fmt_percent(columns = females, decimals = 1, scale_values = FALSE) %>% \r\n   \r\n   text_transform(\r\n      locations = cells_body(columns = ggplot_mean),\r\n      fn = function(x) {\r\n         dlqi_gt$gg_mean %>%\r\n            ggplot_image(height = 50, aspect_ratio = 5)\r\n      }\r\n   ) %>%\r\n   text_transform(\r\n      locations = cells_body(columns = ggplot_dist),\r\n      fn = function(x) {\r\n         dlqi_gt$gg_dist %>%\r\n            ggplot_image(height = 50, aspect_ratio = 5)\r\n      }\r\n   ) %>%\r\n   \r\n   cols_align(columns = study_number, align = 'left') %>% \r\n   \r\n   cols_hide(columns = c(data, sd_m, gg_mean, gg_dist)) %>% \r\n   \r\n   cols_move(columns = c(age, females), after = study_number) %>% \r\n   \r\n   cols_label(study_number = md('Study Number<br>Reference'),\r\n              age     = md(\"Age<br>(yr)\"),\r\n              females = md(\"Female<br>(%)\"),\r\n              n       = md(\"Sample<br>Size\"),\r\n              ggplot_mean = html('5-number summary<br>Q1-&#9632;Median-Q3 Mean&rarr;SD'),\r\n              ggplot_dist = md('Density Dot Plot (Simulated)<br>\r\n                               <b>0&emsp;&ensp;\r\n                               5&emsp;\r\n                               10&emsp;\r\n                               15&emsp;\r\n                               20&emsp;\r\n                               25&ensp;\r\n                               30<\/b>')) %>%\r\n   \r\n   cols_width( study_number ~ px(200),\r\n                    age     ~ px(68),\r\n                    females ~ px(68),\r\n                    n       ~ px(68),\r\n               ggplot_mean ~ px(250),\r\n               ggplot_dist ~ px(250)) %>% \r\n   tab_spanner(label = \"Demographics\", columns = c(age, females) ) %>%\r\n   tab_spanner(label = \"Statistics\",   columns = c(n)) %>%\r\n   tab_spanner(label = md(\"**DLQI** Displays\"), columns = c(ggplot_mean, ggplot_dist)) %>% \r\n   tab_header(\r\n      title  = md(\"**Table: Dermatology Life Quality Index (DLQI)** measures from 12 alopecia areata studies\"),\r\n      subtitle = md(\"DLQI is measured from 0-30 with the latter indicating more severe impairment\")\r\n   ) %>% \r\n   tab_footnote(\r\n      footnote =  html(\r\n         \"<a href='https://onlinelibrary.wiley.com/doi/abs/10.1111/jdv.18926'> Muntyanu, Anastasiya, et al. <b>The burden of alopecia areata: A scoping review focusing on quality of life, mental health and work productivity.<\/b>\r\n         Journal of the European Academy of Dermatology and Venereology (2023).<\/a>\"),\r\n      locations = cells_title(groups = \"title\")\r\n   ) %>% \r\n   tab_source_note(\r\n      source_note =  html(\r\n         [2467 chars quoted with '\"'])\r\n   ) %>% \r\n   tab_options( data_row.padding = px(0)) %>% \r\n   opt_align_table_header(align = 'left') %>% \r\n   gtsave(filename = \"DLQI_for_AA_by_study.html\")\r\n\r\n\r\n\r\nBack to blog\r\n\r\nExample 6.\r\nNo code is available.\r\nBack to blog\r\n\r\n\r\n\r\n",
    "preview": "posts/2023-04-16-wonderful-wednesdays-march-2023/./images/DLQI_individual - Benjamin Lang.png",
    "last_modified": "2025-08-22T14:49:29+02:00",
    "input_file": {},
    "preview_width": 4200,
    "preview_height": 3230
  },
  {
    "path": "posts/2023-04-16-wonderful-wednesdays-december-2022/",
    "title": "Wonderful Wednesdays December 2022",
    "description": "The data is an excerpt of the official VAERS data created by US Food and Drug Administration (FDA) and Centers for Disease Control and Prevention (CDC) that may be associated with vaccines.",
    "author": [
      {
        "name": "PSI VIS SIG",
        "url": "https://www.psiweb.org/sigs-special-interest-groups/visualisation"
      }
    ],
    "date": "2022-12-14",
    "categories": [
      "VAERS",
      "Wonderful Wednesdays"
    ],
    "contents": "\r\nAdverse\r\nEvent data of COVID-19 vaccination in 2021\r\nThe data is an excerpt of the official VAERS data created by US Food\r\nand Drug Administration (FDA) and Centers for Disease Control and\r\nPrevention (CDC) that may be associated with vaccines.\r\nThe challenge is to display the advers event profile of the different\r\nvaccines. The visualisation should allow to detect differences in the\r\nincidence of adverse events. You may concentrate on the most frequently\r\nreported events.\r\nps: some of the variables needed to be deleted due to file size\r\nconstrains.\r\nA recording of the session can be found here.\r\n\r\nExample 1.\r\nhigh resolution image\r\nlink to code\r\n\r\nExample 2.\r\nhigh resolution image\r\nlink to code\r\n\r\nExample 3.\r\nhigh resolution image\r\nlink to code\r\n\r\nCode\r\n\r\nExample 1. \r\nNo code available.\r\nBack to blog\r\n\r\nExample 2. \r\nNo code available.\r\nBack to blog\r\n\r\nExample 3. \r\nNo code available.\r\nBack to blog\r\n\r\n\r\n\r\n",
    "preview": "posts/2023-04-16-wonderful-wednesdays-december-2022/./images/double_dot_plot.png",
    "last_modified": "2025-08-22T14:49:28+02:00",
    "input_file": {},
    "preview_width": 1321,
    "preview_height": 713
  },
  {
    "path": "posts/2023-04-09-wonderful-wednesdays-november-2022/",
    "title": "Wonderful Wednesdays November 2022",
    "description": "The EORTC QLQ-C30 is a 30-item questionnaire that has been designed for use in a wide range of cancer patient populations and is a reliable and valid measure of the quality of life in cancer patients. It includes a number of different scales, but this challenge is focussed on the global health and quality of life scale (QL).",
    "author": [
      {
        "name": "PSI VIS SIG",
        "url": "https://www.psiweb.org/sigs-special-interest-groups/visualisation"
      }
    ],
    "date": "2022-11-09",
    "categories": [
      "Quality of life",
      "Missing data",
      "Wonderful Wednesdays"
    ],
    "contents": "\r\nQuality\r\nof life outcomes in a cancer trial: dealing with missing data\r\nThe EORTC QLQ-C30 is a 30-item questionnaire that has been designed\r\nfor use in a wide range of cancer patient populations and is a reliable\r\nand valid measure of the quality of life in cancer patients. It includes\r\na number of different scales, but this challenge is focussed on the\r\nglobal health and quality of life scale (QL).\r\nA recording of the session can be found here.\r\n\r\nExample 1.\r\nhigh resolution\r\nimage\r\nlink to code\r\n\r\nExample 2.\r\nhigh resolution image\r\nlink to code\r\n\r\nExample 3.\r\nhigh resolution image\r\nlink to code\r\n\r\nExample 4.\r\n\r\nhigh\r\nresolution image\r\nlink to code\r\n\r\nExample 5.\r\nhigh resolution image\r\nlink to code\r\n\r\nExample 6.\r\nhigh resolution imagehigh resolution imagehigh resolution imagehigh resolution imagehigh resolution image\r\nlink to code\r\nCode\r\n\r\nExample 1.\r\n\r\n\r\nlibrary(dplyr)\r\nlibrary(tidyr)\r\nlibrary(ggplot2)\r\nlibrary(forcats)\r\nlibrary(scales)\r\n\r\nd0 <- read.csv2(\"ww eortc qlq-c30 missing.csv\", sep=\",\") %>%\r\n  as_tibble() \r\nd0\r\nd1 <- df %>%\r\n  pivot_longer(cols=starts_with(\"WEEK\"), names_to = \"AVISIT\", values_to = \"AVAL\") %>%\r\n  mutate(AVAL=as.numeric(AVAL)) %>%\r\n  select(USUBJID, ARM, LASTVIS, AGE:AVAL)\r\nd1  \r\n\r\nd2 <- d1 %>%\r\n  group_by(ARM, LASTVIS, AVISIT) %>%\r\n  summarize(AVAL = mean(AVAL, na.rm=TRUE)) %>%\r\n  mutate(LASTVISC=as.factor(paste(\"Week\", sprintf(\"%02.f\", LASTVIS))),\r\n         AVISITN = as.numeric(gsub(\"WEEK\",\"\",AVISIT))) %>%\r\n  mutate(LASTVISC=fct_reorder(LASTVISC, LASTVIS))\r\n\r\n\r\ncc <- scales::seq_gradient_pal(\"yellow\", \"blue\", \"Lab\")(seq(0,1,length.out=14))\r\nshow_col(cc)\r\n\r\nbreaks <- sort(names(table(df_2$LASTVISC)))\r\nlabels <- breaks\r\n\r\nggplot(data=d2, aes(x=AVISITN, y=AVAL, group=LASTVISC, color=LASTVISC)) +\r\n  geom_line() +\r\n  geom_point() +\r\n  scale_y_continuous(breaks = round(seq(0, 100, 8.333333333),2),\r\n                     limits = c(0, 100)) +\r\n  scale_x_continuous(breaks = seq(0, 48, 3), labels = paste(\"Wk\", seq(0, 48, 3))) +\r\n\r\n  scale_color_manual(values = cc, labels=labels, breaks=breaks) +\r\n  facet_grid(cols=vars(ARM)) +\r\n  labs(title = \"Dropout is associated with worsening in quality of life\",\r\n     y = \"EORTC QLQ-C30 QL [0-100]\",\r\n     x = \"Week on treatment\") +\r\n  theme(plot.background = element_rect(fill=\"black\"),\r\n        panel.background = element_rect(fill=\"black\"),\r\n        legend.background = element_rect(fill=\"black\"),\r\n        legend.box.background = element_rect(fill=\"black\"),\r\n        legend.key = element_blank(),\r\n        legend.text = element_text(colour=\"grey\"),\r\n        panel.grid = element_line(colour=\"grey5\"),\r\n        panel.grid.minor = element_blank(),\r\n        strip.background = element_blank(),\r\n        plot.title=element_text(colour = \"grey\", size = 14, face = \"bold\"),\r\n        strip.text = element_text(colour = \"grey50\", size = 10),\r\n        axis.text = element_text(angle = 90))\r\n\r\nggsave(filename = \"line_plot.png\", device = \"png\", width = 12, height = 6)\r\n\r\n\r\n\r\nBack to blog\r\n\r\nExample 2. \r\nNo code has been submitted.\r\nBack to blog\r\n\r\nExample 3.\r\nNo code has been submitted.\r\nBack to blog\r\n\r\nExample 4.\r\n\r\n\r\nlibrary(dplyr)\r\nlibrary(tidyr)\r\nlibrary(ggplot2)\r\nlibrary(forcats)\r\nlibrary(scales)\r\nlibrary(ggalluvial)\r\nlibrary(RColorBrewer)\r\n\r\ndf <- read.csv2(\"ww eortc qlq-c30 missing.csv\", sep=\",\") %>%\r\n  as_tibble() \r\ndf\r\ndf_1 <- df %>%\r\n  pivot_longer(cols=starts_with(\"WEEK\"), names_to = \"AVISIT\", values_to = \"AVAL\") %>%\r\n  select(USUBJID, ARM, LASTVIS, AGE:AVAL) %>%\r\n  mutate(AVAL=as.factor(if_else(AVAL==\"\", \"Missing\", AVAL)))\r\ndf_1  \r\nlevels(df_1$AVAL) <- c(as.character(rev(round(seq(0, 100, 8.333333333), 1))), \"Missing\")\r\n\r\ncc <- scales::div_gradient_pal(low = \"#a50026\", mid=\"#ffffbf\", high = \"#313695\", \"Lab\")(seq(0,1,length.out=13))\r\n\r\ncolors <- c(cc, \"#D3D3D3\")\r\nshow_col(colors)\r\n\r\nggplot(df_1,\r\n       aes(\r\n         x = AVISIT,\r\n         stratum = AVAL,\r\n         alluvium = USUBJID,\r\n         fill = AVAL,\r\n         label = AVAL\r\n       )) +\r\n  scale_fill_manual(values = colors) +\r\n  scale_x_discrete(labels = paste(\"Wk\", seq(0, 48, 3))) +\r\n\r\n  geom_flow(stat = \"alluvium\", \r\n            lode.guidance = \"frontback\",\r\n            color = \"darkgray\") +\r\n  geom_stratum() +\r\n  labs(title = \"Quality of Life - Missing data depends on age and treatment received\") +\r\n  facet_wrap(AGEGR~ARM, nrow = 4, scales = \"free_y\", strip.position = c(\"left\")) +\r\n  # facet_grid(cols = vars(ARM), rows = vars(AGEGR), scales = \"free\") +\r\n  theme_bw() +\r\n  guides(fill = guide_legend(nrow = 1, reverse = T)) +\r\n  theme(\r\n    #panel.background = element_blank(),\r\n    #axis.text.y = element_blank(),\r\n    legend.title = element_blank(),\r\n    axis.title.x = element_blank(),\r\n    legend.position = \"bottom\",\r\n    strip.text = element_text(size = 12),\r\n    axis.text = element_text(angle = 90),\r\n    legend.direction = \"horizontal\"\r\n  ) \r\n\r\nggsave(filename = \"sankey_chart.png\", device = \"png\", width = 16, height = 9)\r\n\r\n\r\n\r\nBack to blog\r\n\r\nExample 5.\r\nNo code has been submitted.\r\nBack to blog\r\n\r\nExample 6.\r\nNo code has been submitted.\r\nBack to blog\r\n\r\n\r\n\r\n",
    "preview": "posts/2023-04-09-wonderful-wednesdays-november-2022/./images/line_plot - Paolo Eusebi.png",
    "last_modified": "2025-08-22T14:49:26+02:00",
    "input_file": {},
    "preview_width": 3600,
    "preview_height": 1800
  },
  {
    "path": "posts/2023-04-09-wonderful-wednesdays-october-2022/",
    "title": "Wonderful Wednesdays October 2022",
    "description": "The EORTC QLQ-C30 is a 30-item questionnaire that has been designed for use in a wide range of cancer patient populations and is a reliable and valid measure of the quality of life in cancer patients (Aaronson et al., 1993).",
    "author": [
      {
        "name": "Steve Mallett",
        "url": "https://www.psiweb.org/sigs-special-interest-groups/visualisation"
      }
    ],
    "date": "2022-10-12",
    "categories": [
      "Quality of life",
      "Wonderful Wednesdays"
    ],
    "contents": "\r\nQuality of Life in a Cancer\r\nTrial\r\nEORTC QLQ-C30 is quality of life (QoL) questionnaire designed for use\r\nin cancer patients Each item is rated on a 4-point response scale\r\nranging from 1 (“Not at all”) to 4 (“Very much”) or a 7-point scale\r\nranging from 1 (“Very poor”) to 7 (“Excellent”).\r\nHigher scores represent better outcomes for the global health scale\r\n(QL) and the functional scales (PF, RF, EF, CF, SF), whereas higher\r\nscores represent higher severe symptoms for the symptom scales/items\r\n(FA, NV, PA, DY, SL, AP, CO, DI, FI). The overall QLQ-C30 score is\r\ncalculated using scoring rules to a range of 0-100.\r\nThe challenge comprises a simulated study with two arms (Experimental\r\nTreatment vs. Standard of Care), with 100 participants each arm.\r\nParticipants are followed for 48 weeks, and PRO scores are collected at\r\nbaseline and every 3 weeks.\r\nThe challenge is to visualize any treatment benefit using absolute\r\nvalues or change from baseline. A threshold of ± 10 or ± 5 points for\r\nthe change from baseline could be used for assessing meaningful\r\nworsening or improvement.\r\nA recording of the session can be found here.\r\n\r\nExample 1.\r\nIndividual Patient Trajectories\r\nhigh\r\nresolution image\r\nThis figure of change from baseline in QLQ-C30 over time is showing\r\npatient-level data as individual lines. Although this is technically a\r\nspaghetti plot, a lot of over-plotting occurs due to the discrete nature\r\nof the score values. Where this occurs, the opacity of the lines depends\r\non the number of lines that are superimposed, so the figure gives an\r\ngood general impression of the overall trend. In the left panel (control\r\ngroup), there seem to be more darker lines in the lower half of the\r\nplot, showing a worsening of QoL, while the opposite is true in the\r\nright panel (experimental group). The figure also includes a\r\nsuperimposed line plot of mean over time (+/- standard error), which\r\nshows a similar trend of improvement in global health status in the\r\nexperimental group and a worsening in the control group.\r\nThe use of faint grey gridlines is quite effective. The possibility\r\nof using a greyscale for the patient-level data was discussed, because\r\nthe colour isn’t coding any information and this would make the line\r\nplot of mean over time stand out, but it was agreed this would make the\r\npatient-level data difficult to distinguish against the gridlines. Some\r\ndesign improvements were suggested, making some of the labels a little\r\nlarger, and there is also some scope for decluttering the graph,\r\ne.g. removing the Y-axis label from the right panel.\r\nlink to code\r\n\r\nExample 2. Animated Radial\r\nPlot\r\nAnimation\r\nThis is an animated radial plot showing absolute values for each of\r\nthe domains, with better scores represented towards the outside and\r\nworse score on the inside. At each point in time, the scores for the\r\ndifferent domains are joined by a thick line, with previous results\r\nretained as fainter lines. As the animation runs, the trends in each of\r\nthe domains over time can be viewed as shifts in the overall shape, and\r\nit is possible to control the animation and jump to a specific\r\ntimepoint.\r\nAnimated plots have the advantage that time in the study is\r\nrepresented as time in the animation, which is highly intuitive.\r\nAbsolute quality of life score is represented by the lightness or\r\ndarkness of the background colour, so the legend labels of “Improvement”\r\nand “Worsening” are a little misleading. It might have been better for\r\nthe background colour-coding to be stepwise rather than continuous, as\r\nit is quite difficult to read off the values, especially where the\r\nshading is darker. Because the treatment groups are colour-coded, a\r\npossible design option might be to include both treatment groups on the\r\nsame axes, although this may cause problems with over-plotting. Overall,\r\nthe graph is highly effective and aesthetically pleasing.\r\nlink to code\r\n\r\nExample 3.\r\nhigh resolution image\r\nVisualizations (the app) can be found here.Static\r\nimage 1Static\r\nimage 2\r\nFirst tab: This tab focuses on only the top four domains, in terms of\r\ntreatment effect. The left panel is showing patient-level data,\r\nsimilarly to the first entry, although data have been jittered to avoid\r\nover-plotting. The middle panel shows point estimates, credible\r\nintervals and posterior distributions for each treatment and timepoint\r\nfrom from a Bayesian MMRM model. Posterior distributions for the\r\ntreatment differences are shown in the right panel, with cutpoints added\r\nto the density plots to indicate clinically-meaningful threshold\r\nvalues.The graph includes a lot of information but is highly effective\r\nin showing trends in the data.\r\nSecond tab: this shows the treatment differences for all domains,\r\nincluding point estimates, credible intervals and Bayesian posterior\r\ndistributions. The domains are sorted in terms of treatment effect, so\r\nit is very clear which domains are driving the overall treatment effect.\r\nShading has been used to represent different parts of the posterior\r\ndistribution curve with respect to the threshold values.\r\nFurther tabs give the user a more focused view of what we saw in the\r\nfirst tab, i.e. patient-level data, results of the MMRM and treatment\r\ndifferences, for a single domain, e.g. quality of life, functional\r\nscales, symptoms and financial difficulties.\r\nThe consistent colour-coding across all panels is helpful, and the\r\ncolours are similar with respect to their intensity. For the second tab,\r\nrepresenting time on the vertical axis is unsual and possibly counter\r\nintuitive, but an alternative design may have difficult to implement.\r\nAlso in the second tab, annotations hadn’t been added to show which\r\ndirection represents a benefit for each of the scales (which was present\r\non the first tab and was very helpful). But overall this package of\r\ngraphs provides a rich source of information and clearly shows the\r\nimportant features of the data.\r\nlink to code\r\nCode\r\n\r\nExample 1.\r\nIndividual Patient Trajectories\r\n\r\n\r\nlibrary(tidyverse)\r\nlibrary(lubridate)\r\nlibrary(dplyr)\r\nlibrary(ggplot2)\r\nlibrary(readxl)\r\nlibrary(cowplot)\r\nlibrary(gridExtra)\r\nlibrary(patchwork)\r\nlibrary(reshape2)\r\nlibrary(grid)\r\n\r\nX <- read.csv(url(\"https://raw.githubusercontent.com/VIS-SIG/Wonderful-Wednesdays/master/data/2022/2022-09-14/ww%20eortc%20qlq-c30.csv\"))\r\nX[X==0] <- NA;\r\nX1 <- X[1:(nrow(X)/2), ]; # standard\r\nXe <- X[(nrow(X)/2+1):nrow(X),]; # experimental\r\n\r\nX1 <-  X1 %>%\r\n  group_by(USUBJID) %>%\r\n  mutate(QL_diff = QL - QL[1], PF_diff = PF - PF[1], RF_diff = RF - RF[1], EF_diff = EF - EF[1])\r\nX1_a <- X1 #save for second plot\r\n\r\nXe <-  Xe %>%\r\n  group_by(USUBJID) %>%\r\n  mutate(QL_diff = QL - QL[1], PF_diff = PF - PF[1], RF_diff = RF - RF[1], EF_diff = EF - EF[1])\r\nXe_a <- Xe #save for second plot\r\n\r\n#need to replace NA's with 0's again when finding the mean\r\nX1$QL_diff[is.na(X1$QL_diff)] <- 0 #We will only use QL in the plot below, but can use any sub-scale.\r\nX1$PF_diff[is.na(X1$PF_diff)] <- 0\r\nX1$RF_diff[is.na(X1$RF_diff)] <- 0\r\nX1$EF_diff[is.na(X1$EF_diff)] <- 0\r\nXe$QL_diff[is.na(Xe$QL_diff)] <- 0\r\nXe$PF_diff[is.na(Xe$PF_diff)] <- 0\r\nXe$RF_diff[is.na(Xe$RF_diff)] <- 0\r\nXe$EF_diff[is.na(Xe$EF_diff)] <- 0\r\n\r\nA <- aggregate(X1[, 20:23], list(X1$AVISITN), mean)\r\ncolnames(A) <- c(\"AVISITN\", \"QL_mean\", \"PF_mean\", \"RF_mean\", \"EF_mean\")\r\nB <- aggregate(X1[, 20:23], list(X1$AVISITN), sd)\r\nB <- B[, 2:ncol(B)]/sqrt(100)\r\ncolnames(B) <- c(\"QL_se\", \"PF_se\", \"RF_se\", \"EF_se\")\r\nA <- data.frame(A, B)\r\n\r\nAe <- aggregate(Xe[, 20:23], list(Xe$AVISITN), mean)\r\ncolnames(Ae) <- c(\"AVISITN\", \"QL_mean\", \"PF_mean\", \"RF_mean\", \"EF_mean\")\r\nBe <- aggregate(Xe[, 20:23], list(Xe$AVISITN), sd)\r\nBe <- Be[, 2:ncol(Be)]/sqrt(100)\r\ncolnames(Be) <- c(\"QL_se\", \"PF_se\", \"RF_se\", \"EF_se\")\r\nAe <- data.frame(Ae, Be)\r\n\r\nlibrary(plyr) #call this library here, not before.\r\n\r\nA = A[c(1,2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,9),] \r\nA[nrow(A)+nrow(X1)-nrow(A),] <- NA;\r\nA1 <- cbind(X1_a, A);\r\n\r\nAe = Ae[c(1,2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,9),] \r\nAe[nrow(Ae)+nrow(Xe)-nrow(Ae),] <- NA;\r\nA1e <- cbind(Xe_a, Ae);\r\n\r\nX1count <- X1[complete.cases(X1$QL),] #To count dropout rate/N (number) per visit\r\nXecount <- Xe[complete.cases(Xe$QL),]\r\nX1count <- count(X1count, \"AVISITN\")\r\nXecount <- count(Xecount, \"AVISITN\")\r\n\r\n#Standard treatment plot\r\nGG1<-ggplot(data=A1, aes(x=AVISITN...19, y=QL_diff, group=USUBJID, color=\"red\")) +\r\n  geom_line(size=1, alpha=0.15, color=\"tomato\")+guides(color = \"none\")+\r\n  xlab(\"Visit Number\")+ylab(\"Change from Baseline\")+\r\n  scale_x_continuous(breaks=0:17)+\r\n  scale_y_continuous(breaks=seq(-55, 55, by=10))+\r\n  geom_hline(yintercept=c(-6,0,6), linetype='dotted', col = 'black')+\r\n  geom_line(aes(x=AVISITN...24, y = QL_mean, colour = \"Standard\"),size=1) + \r\n  geom_point(aes(x=AVISITN...24, y = QL_mean, colour = \"Standard\"),size=2)+\r\n  geom_errorbar(aes(ymin=QL_mean-QL_se, ymax=QL_mean+QL_se, colour = \"Standard\"),width=25, position=position_dodge(0))+\r\n  scale_colour_manual(values=\"violet\")+\r\n  annotate(geom = \"text\", x = 1:17, y = -68, label = X1count$freq, size = 3)+\r\n  coord_cartesian(ylim = c(-55, 55), expand = FALSE, clip = \"off\")+theme_bw()\r\n\r\nGG1 <- GG1+theme(axis.text=element_text(size=8), axis.title=element_text(size=10),panel.grid.minor.x = element_blank(),panel.grid.minor.y = element_blank())\r\n\r\n#Experimental treatment plot\r\nGG2<-ggplot(data=A1e, aes(x=AVISITN...19, y=QL_diff, group=USUBJID, color=\"red\")) +\r\n  geom_line(size=1, alpha=0.15, color=\"dodgerblue\")+guides(color = \"none\")+\r\n  xlab(\"Visit Number\")+ylab(\"\")+\r\n  scale_x_continuous(breaks=0:17)+\r\n  scale_y_continuous(breaks=seq(-55, 55, by=10))+\r\n  geom_hline(yintercept=c(-6,0,6), linetype='dotted', col = 'black')+\r\n  geom_line(aes(x=AVISITN...24, y = QL_mean, colour = \"Experimental\"),size=1) + \r\n  geom_point(aes(x=AVISITN...24, y = QL_mean, colour = \"Experimental\"),size=2)+\r\n  geom_errorbar(aes(ymin=QL_mean-QL_se, ymax=QL_mean+QL_se, colour = \"Experimental\"),width=25, position=position_dodge(0))+\r\n  scale_colour_manual(values=\"aquamarine4\")+\r\n  annotate(geom = \"text\", x = 1:17, y = -68, label = Xecount$freq, size = 3)+\r\n  coord_cartesian(ylim = c(-55, 55), expand = FALSE, clip = \"off\")+theme_bw()\r\n\r\nGG2 <- GG2+theme(axis.text=element_text(size=8), axis.title=element_text(size=10),panel.grid.minor.x = element_blank(),panel.grid.minor.y = element_blank())\r\n\r\n#Combining two plots\r\np1 <- plot_grid(GG1, GG2, labels=c(\"Standard\", \"Experimental\"),hjust = -1.0, vjust = 0.5,label_size = 8)\r\ntitle <- ggdraw() + draw_label(\"This looks nothing like real QLQ-C30 Global Heath Status data, real individual patient data has much more variability\", size=15)\r\nsubtitle <- ggdraw() + draw_label(\"Higher Values & Positive Change from Baseline values for QLQ-C30 Global Heath Status indicate better Quality of Life\", size=10)\r\nfootnote <- ggdraw() + draw_label(\"Individual patient data with arithmetic mean (+/- SE) overlaid. \\n Horizontal Reference lines indicate the Minimal Important Change (MIC), at the group level, of -6 and 6 based on the 2012 Cocks publication.\\n Line opacity is proportional to the number of patients, with more transparent lines indicating less patients. Total number of patients remaining per visit is given below the x-axis.\", fontface='italic', size=10)\r\n\r\n#plot results\r\nplot_grid(title, subtitle, p1, footnote, ncol=1, rel_heights=c(0.1, 0.1, 1, 0.4, -0.1))\r\n\r\n#By Samiar Ashtiany\r\n\r\n\r\n\r\nBack to blog\r\n\r\nExample 2.\r\nNo code has been sumbitted.\r\nBack to blog\r\n\r\nExample 3.\r\nThe code can be found here.\r\nBack to blog\r\n\r\n\r\n\r\n",
    "preview": "posts/2023-04-09-wonderful-wednesdays-october-2022/./images/qlq-c30_fig_comb.png",
    "last_modified": "2025-08-22T14:49:27+02:00",
    "input_file": {},
    "preview_width": 5520,
    "preview_height": 2760
  },
  {
    "path": "posts/2023-01-29-wonderful-wednesdays-september-2022/",
    "title": "Wonderful Wednesdays September 2022",
    "description": "The data is based on a study to assess the health status in patients with coronary heart diseases (see Ose et al., 2012). The research question was: what factors are associated with health status in usual primary care? The original data included 2,656 patients with 14 (patient and practice) characteristics (with clustered data structure). The outcome was EQ-5D VAS scale (Health related quality of life; range: [0; 1]). The data set for this challenge is a sub-sample of patients and variables and it is simulated data.",
    "author": [
      {
        "name": "Rhys Warham",
        "url": "https://www.psiweb.org/sigs-special-interest-groups/visualisation"
      }
    ],
    "date": "2022-09-14",
    "categories": [
      "EQ-5D",
      "Predictors",
      "Wonderful Wednesdays"
    ],
    "contents": "\r\nPrediction of health status\r\n(EQ-5D)\r\nThe data is based on a study to assess the health status in patients\r\nwith coronary heart diseases (see Ose et al., 2012). The research\r\nquestion was: what factors are associated with health status in usual\r\nprimary care?\r\nThe original data included 2,656 patients with 14 (patient and\r\npractice) characteristics (with clustered data structure). The outcome\r\nwas EQ-5D VAS scale (Health related quality of life; range: [0; 1]). The\r\ndata set for this challenge is a sub-sample of patients and variables\r\nand it is simulated data.\r\nThis month’s challenge was to fit a model for predicting the value of\r\nthe EQ-5D Visual Analogue Scale (ranges from ‘Worst imaginable health\r\nstate’ to ‘Best imaginable health state’; higher scores correspond to\r\nhigher quality of life) and then to produce a visualisation to display\r\nthe results.\r\n\r\nExample 1. Regression model\r\nhigh resolution\r\nimage\r\nThe first visualisation displays the results of a model regressing\r\nEQ-5D on BMI, gender, and number of conditions. Number of conditions is\r\nidentified as being a key predictor of quality of life, motivating the\r\nkey takeaway (‘Increasing Number of Conditions significantly reduces\r\nEQ-5D’) which is nicely provided in the sub-title of the plot. This\r\nmessage could be made even stronger by using this key takeaway as the\r\ntitle itself, in place of the equation which is currently used as the\r\ntitle (the equation could instead be presented in a footnote or\r\nsimilar). The plot presents both the observed (patient-level) data and\r\nthe model-predicted values. Number of conditions is displayed on the\r\nx-axis, with four lines plotted in different colours to display the four\r\npairwise combinations of gender and BMI (<30, >=30). The plot has\r\na very nice ‘visual’ legend, allowing us to understand the symbols used\r\nfor both observed and predicted values, as well as the colour used for\r\neach combination of BMI and gender. This could be even better understood\r\nif information was provided on the coding of gender (i.e., which gender\r\nis represented by the value 1) and the interpretation of the EQ-5D VAS\r\n(i.e., higher scores correspond to improved quality of life). The plot\r\ndisplays a clear message of the impact of each predictor, nicely meeting\r\nthe brief for this challenge. The overall display is clean, with minimal\r\nclutter and the gridlines displayed in a very light grey in the\r\nbackground. It’s also really nice to have the patient-level data and be\r\nable to compare the observed and predicted values. The only slight\r\nchallenge with this is that it is hard to distinguish some of the\r\nselected colours on the plotted observed values.\r\nlink to code\r\n\r\nExample 2. Regression\r\nmodel - alternative\r\nhigh resolution\r\nimage\r\nDuring the webinar, the panellists displayed an alternative version\r\nof the first submission, highlighting how a few aesthetics could be\r\nmodified. Some of the key features of the first visualisation are\r\nretained, such as the visual legend and the key takeaway, although this\r\nis now used as the main title with the equation itself deferred to a\r\nfootnote.\r\nTo overcome the challenges with the colours from the previous\r\nsubmission, this plot splits the gender/BMI combinations out in to four\r\nfacets. In each facet, the observed patient-level data and predicted\r\nvalues for the relevant group are displayed in colour, but the data for\r\nthe other three groups is displayed in light grey and pushed to the\r\nbackground. This allows us to easily identify the data for each group\r\nwhile still being able to make comparisons with the other groups.\r\nTo maintain the clean aesthetic with these added facets, a single\r\ny-axis is presented to avoid duplication, with very light grey gridlines\r\nrunning across all facets. The ‘x’ symbol previously used for the\r\nobserved data is replaced with a ’-‘ to reduce overlap between data\r\npoints.\r\nOverall, the plot highlights how small tweaks can be made to an\r\nalready impressive visualisation to produce another great plot that\r\npresents the same information in an alternative display. Again, the\r\nreader could be further helped here by additional information on the\r\ndecoding of the gender variable and the interpretation of EQ-5D VAS\r\nscores.\r\nlink to code\r\n\r\nExample 3. Displaying\r\npredictors\r\n\r\nhigh resolution image: pdf\r\npng\r\nThe final submission changed focus from the first two. Whereas\r\nprevious submissions look to present model results (i.e., predicted\r\noutcomes at different values of the predictors), the final submission\r\nfocused on graphically displaying which predictors are the most\r\nimportant in determining the EQ-5D VAS value.\r\nThe submission is split into two. On the left-hand side, there is a\r\ngraphical depiction of the predictors included in a final model selected\r\nthrough a combination of forward selection and backward elimination.\r\nSolid lines indicate those variables included in the model as a main\r\neffect, whereas dashed lines display the interactions included in the\r\nmodel. Please note, a small issue caused several solid lines to be\r\ndisplayed from certain predictors.\r\nThe right-hand side of the plot displays the relative importance of\r\nthe included predictors, as determined by the LMG metric. The\r\ncontribution of each included predictor and each included interaction is\r\npresented by a bar. Each subsequent bar starts where the previous\r\nfinishes, very nicely making it extremely clear that these are\r\nindividual contributions to the overall R-squared, which is presented at\r\nthe bottom. Within the main effects and two-way interaction displays,\r\nthe predictors are logically ordered based on their relative importance.\r\nThis drives home the same message that was given as a key takeaway in\r\nthe previous submissions: number of conditions is the most important\r\npredictor in determining EQ-5D VAS score. Throughout all aspects of the\r\nsubmission, each predictor is consistently coloured, making each\r\noccurrence very easy to identify.\r\nWithin the right-hand panel, an arrow is displayed on top of each\r\nbar. In this instance, this is somewhat redundant since relative\r\nimportance will always be non-negative and thus the arrows will always\r\npoint to the right. Whilst not the focus of this submission (which very\r\nnicely achieves its goal of presenting the most influential predictors),\r\nwe do not have any information here on the direction of effect of each\r\npredictor (i.e., we know that it is important, but does it increase or\r\ndecrease quality of life?).\r\nlink to code\r\nThis month’s webinar nicely highlights how different visualisations\r\ncan be utilised to achieve different goals. In fact, the submissions\r\nthis month nicely compliment one another and together provide a holistic\r\noverview of the challenge at hand. The final submission nicely\r\nemphasises the key variables which influence the outcome; the other\r\nsubmissions nicely display the impact and direction of effect of key\r\nvariables on the outcome\r\nCode\r\n\r\nExample 1. Regression model\r\nNo code has been submitted.\r\nBack to blog\r\n\r\nExample 2.\r\nRegression model - alternative\r\nNo code has been submitted.\r\nBack to blog\r\n\r\nExample 3. Displaying\r\npredictors\r\nThe code can be found here.\r\nBack to blog\r\n\r\n\r\n\r\n",
    "preview": "posts/2023-01-29-wonderful-wednesdays-september-2022/./images/ed5d_relaimpo - Agustin Calatroni.png",
    "last_modified": "2025-08-22T14:49:26+02:00",
    "input_file": {},
    "preview_width": 6375,
    "preview_height": 5625
  },
  {
    "path": "posts/2022-08-14-wonderful-wednesdays-august-2022/",
    "title": "Wonderful Wednesdays August 2022",
    "description": "Visualise the relative performance of the treatments based on ranking data. You may want to consider other metrics which can be derived from the ranking data and used to compare treatments.",
    "author": [
      {
        "name": "Rhys Warham",
        "url": "https://www.psiweb.org/sigs-special-interest-groups/visualisation"
      }
    ],
    "date": "2022-08-10",
    "categories": [
      "Ranking Data",
      "Wonderful Wednesdays"
    ],
    "contents": "\r\nVisualising Ranking Data\r\nThis month’s challenge was to visualise ranking data resulting from a network meta-analysis (NMA). The NMA synthesised the results of 11 trials comparing 12 treatments for major depression. The provided dataset consisted of the probabilities that each treatment ranked in each position from Rank 1 (best) to Rank 12 (worst).\r\n\r\nExample 1. Line plot\r\nhigh resolution image\r\nIn this first visualization, we see rank presented on the x-axis and probability on the y-axis, with a line graph plotted for each treatment. An informative title and subtitle have been added, emphasising the key takeaway from the plot. Colour has been used effectively to highlight key information of interest, with the treatment corresponding to the highest probability in each rank highlighted in red, the treatments with the second, third and fourth highest probabilities being coloured black, and all other treatments coloured in a light grey to push them to the background. The message is clear in the two extremes of the plot, where the treatments corresponding to the highest probabilities are nicely emphasised. The plot becomes slightly cluttered in the middle with lots of overlapping text, although this somewhat supports the message by highlighting that it is harder to distinguish treatments in this area. The use of alternating white and grey stripes in the background helps reinforce that we are considering discrete ranks, which may otherwise be confused in a line plot which in some sense interpolates between the observed probabilities. The visualization could be improved by having the red text in the forefront and the grey text in the background, which would help emphasise the red text in busy sections of the graph. The panel discussed existing R packages which can aid in pushing text into the background. Further, the plot could benefit from the addition of interactive elements, allowing the user to select and highlight a key treatment of interest.\r\nlink to code\r\n\r\nExample 2. Lolly plot\r\npdf file\r\nThis plot uses lollipops to display the probability of a given treatment ranking in each position. Rank is again displayed on the x-axis and probability on the y-axis, although a separate sub-plot is now produced for each treatment and stacked vertically. The ordering of these subplots is logical, from the most effective treatment at the top to the least effective treatment at the bottom, allowing the reader to quickly establish the relative performance of each treatment. Lots of visual elements are utilised in the plot, with the colour-gradient, y-axis, point size and transparency all scaled to the treatment-wise min-max-normalised NMA rank probabilities. The panel suggested that this could result in some redundancy in the plot and that a subset of these visual elements could be used to display key probability scales of interest. Whilst the submitter acknowledges they have been produced by a somewhat questionable algorithm in this instance, the panel appreciated the inclusion of the credible intervals (shown by the horizontal black lines under the lollipops), which add useful information to such plots without adding significant clutter. Likewise, the inclusion of the shaded grey background nicely displays how underlying distributions can be displayed in such plots. The panel were extremely complimentary of the aesthetics of the plot and all the little details that had been considered to minimise clutter and produce an extremely clean display. The main suggestion for improvement was to incorporate the absolute probabilities somehow, perhaps with one of the several visual elements used. Whilst the current scaled display makes within-treatment comparison straightforward, it makes comparisons across treatments more difficult. For instance, the rank 12 lollipop for Reboxetine is of similar height to the Rank 11 lollipops for the three treatments above it, despite us knowing from submission 1 that this probability is clearly the largest observed for any treatment/rank.\r\nlink to code\r\n\r\nExample 3. Use of color intensity\r\n\r\nThe pptx file can be found here.\r\nThis submission consists of two different pairs of visualisations, displaying the same information in two different ways. In the first, rank is displayed on the x-axis and treatment on the y-axis, with the intensity of the colour used to display the probability (ranging from 0=white to 1=red). The left-hand plot displays absolute probability, whilst the right displays cumulative probability. The panel appreciated the two different probabilities each being displayed, suggesting they compliment one another. The cumulative probability plot gives an area-under-the-curve like interpretation, providing a notion of overall performance of the treatment. This could be further enhanced by a logical ordering of the treatments, like seen in submission 2. Similarly, some of the ‘cleaning’ seen in submission 2 would help remove clutter from this plot, such as the background and gridlines. Whilst aesthetically pleasing, the use of a colour gradient could cause confusion as to the discrete nature of the ranks, since a smooth gradient is displayed between each successive rank’s colour. This could be circumvented with the use of a heatmap style display, with a distinct cell displayed for each treatment and rank. The second half of the submission displays the same information, but rather than having rank on the x-axis, each rank corresponds to a concentric ring (with faceting applied to distinguish treatments). This gives an aesthetically pleasing plot that would be great for grabbing attention, although the interpretation is less obvious than the previous plots. That being said, the cumulative probability plots once again provide an area-under-the-curve like interpretation which helps in assessing relative performance (although once more a logical ordering of treatments would support this). The panel highlighted that the main challenge with such plots is that outer rings occupy much more space than inner ones. This makes the worst performing treatment Reboxetine stand out far more on the left-hand plot than the best performing Mirtazapine. Inverting the ring ordering could be considered if wanting to emphasise the best performing treatment. The submitter noted that they had used this challenge as an opportunity to test a different type of visualization and the panel applauded the creativity.\r\nlink to code\r\n\r\nExample 4. Treatment Ranking Dashboard\r\n\r\nThe app can be found here\r\nThis is the first of two interactive dashboards submitted for this challenge. On the left-hand side, a horizontal bar chart is displayed, representing the SUCRA (surface under the cumulative ranking). A description of this metric is provided, and this metric is used consistently throughout to order plots for individual treatments from best to worst, which the panel complimented. The user can select a treatment of interest from a drop-down box, and this treatment is highlighted in blue in all plots, with other treatments displayed in grey and pushed to the background. This nicely highlights a treatment of interest in a way that could be considered for enhancing submission 1. On the right-hand side of the app, the user can explore a range of plots. The first are line graphs and the user can select to display either absolute or cumulative probabilities. By hovering over the plot, the user can view the probability that each treatment ranks in each position, meaning the entire underlying dataset can be recovered. This feature can also be used to identify an interesting treatment from the plot and subsequently select it from the drop-down box. The user can either view all lines on a single plot select to display faceted plots by treatment to make it easier to follow the line for a given treatment. More could be done on these plots to emphasise the discrete nature of the ranks, although the ability to hover and see the discrete probabilities does go some way towards doing this. The user can also select to view bar charts. These have probability on the x-axis and allow the user to display whether to stack by treatment or by rank. Depending on this selection, either treatment or rank is displayed on the y-axis, with the other used to fill the stacked bars. This better emphasises the discrete nature of the ranks than the line graphs and allows the user to make both treatment-wise and rank-wise comparisons. Small updates could further enhance this submission, such as widening the extremes of the colour gradient on the bar charts. This would make individual sections of the stacked bars easier to distinguish in the presence of many treatments/ranks. Similarly, the consistent use of colouring applied throughout the plots (blue for the selected treatments, grey for the others), could be extended to legends and labels to further strengthen the connection.\r\nlink to code\r\n\r\nExample 5. App – (Bayesian) Ranking Data\r\n\r\nThe app can be found here\r\nThis second dashboard comes with a range of interactive features to help the user drive the display. Again, treatments are displayed on the ‘y-axis’ and ranks on the ‘x-axis’. Bars are displayed to indicate the corresponding probability and are presented in such a way to emphasise the discrete nature of the ranks. For the top 3 ranks, the probability is displayed as a weighted sum. Although this may not be of the most interest for this example and the choice of top 3 is somewhat arbitrary here, one can easily imagine use cases where this would be an extremely useful feature. Further, the user can assign the weights used in computing this weighted sum (again, not the most directly relevant here but certainly relevant in other use cases). Here, the weighted sum shows an interesting message that a treatment could have a much higher probability of being 1st specifically, but not necessarily have any/much higher probability of being ranked in say the top 3. This can be seen somewhat in cumulative probability plots from other submissions but is most easily identified here. In addition to the bars, box plots are displayed at the top of each column, displaying the distribution within each rank. These highlight the contrasting behaviour of the extreme and intermediate ranks, as seen in submission 1. Like the previous dashboard, this one allows the user to view each individual probability by hovering and goes further in providing selection boxes which can be used to keep these probabilities displayed at all times. The app allows the user to search for a treatment of interest and to sort the visualization within/across ranks. This not only allows for a logical ordering of treatments but allows the user to determine which ordering they consider to be the most logical and display the visualization that way.\r\nlink to code\r\nCode\r\n\r\nExample 1. Line plot\r\n\r\n\r\nlibrary(haven)\r\nlibrary(ggplot2)\r\nlibrary(ggtext)\r\n\r\ndata <- read_sas(\"/.../data.sas7bdat\")\r\n\r\nggplot(data=data) +\r\n  geom_line(data=data, aes(x=Rank, y=Prob, group=Treatment), color=\"#cccccc\") +\r\n  geom_rect(data=data[1,], xmin=0, ymin=-0.05, xmax=1.5, ymax=1, fill = alpha(\"#eeeeee\", .5)) +\r\n  geom_rect(data=data[1,], xmin=2.5, ymin=-0.05, xmax=3.5, ymax=1, fill = alpha(\"#eeeeee\", .5)) +\r\n  geom_rect(data=data[1,], xmin=4.5, ymin=-0.05, xmax=5.5, ymax=1, fill = alpha(\"#eeeeee\", .5)) +\r\n  geom_rect(data=data[1,], xmin=6.5, ymin=-0.05, xmax=7.5, ymax=1, fill = alpha(\"#eeeeee\", .5)) +\r\n  geom_rect(data=data[1,], xmin=8.5, ymin=-0.05, xmax=9.5, ymax=1, fill = alpha(\"#eeeeee\", .5)) +\r\n  geom_rect(data=data[1,], xmin=10.5, ymin=-0.05, xmax=11.5, ymax=1, fill = alpha(\"#eeeeee\", .5)) +\r\n  geom_text(aes(x=Rank, y=Prob, label=Treatment, color=factor(flag)), show.legend=FALSE, size=7) +\r\n  scale_x_continuous(limits=c(1, 12), breaks=c(1,2,3,4,5,6,7,8,9,10,11,12)) +\r\n  scale_y_continuous(\"Probability\", limits=c(0, 1), breaks=c(0,.1,.2,.3,.4,.5,.6,.7,.8,.9,1)) +\r\n  scale_color_manual(\" \", values=c(\"#a50f15\", \"#252525\", \"#d9d9d9\")) +\r\n  theme_minimal() +\r\n  theme(text = element_text(size=20),\r\n        plot.title = element_text(size = 22),\r\n        plot.subtitle = element_text(size = 20),\r\n        legend.title=element_blank(),\r\n        panel.border = element_blank(),\r\n        panel.grid.major = element_blank(),\r\n        panel.grid.minor = element_blank(), \r\n        axis.line = element_line(colour = \"black\"),\r\n        axis.line.x=element_line(size=0.25)) +\r\nlabs (title =\"<b style='color:#a50f15'>Mirtazapine<\/b> is most likely to be the highest ranked treatment\",\r\n      subtitle=\"Other most likely high-ranked treatments are <b style='color:#a50f15'>Escitalopram<\/b>, <b style='color:#a50f15'>Venlafaxine<\/b>,  <b style='color:#a50f15'>Sertraline<\/b> and  <b style='color:#a50f15'>Citalopram<\/b>\")+\r\ntheme(plot.title = element_markdown(),\r\n      plot.subtitle = element_markdown())\r\n\r\n\r\n\r\nBack to blog\r\n\r\nExample 2. Lolly plot\r\n\r\n\r\nlibrary(dplyr)\r\nlibrary(tidyr)\r\nlibrary(ggplot2)\r\n\r\nalpha <- 0.10\r\ndta <- file.path(\r\n  \"https://raw.githubusercontent.com/VIS-SIG/Wonderful-Wednesdays\",\r\n  \"master/data/2022/2022-07-13/bayesian_ranking.csv\"\r\n) %>%\r\n  read.csv() %>%\r\n  pivot_longer(cols = -\"Treatment\") %>%\r\n  mutate(\r\n    rank = gsub(\"^Rank(.*)$\", \"\\\\1\", name),\r\n    rank = factor(rank, levels = unique(rank[order(as.numeric(rank))])),\r\n    rankx = as.numeric(rank)\r\n  ) %>%\r\n  group_by(Treatment) %>%\r\n  mutate(\r\n    lci = cumsum(value) >= !!alpha / 2,\r\n    uci = rev(cumsum(rev(value))) >= !!alpha / 2,\r\n    raw_value = value,\r\n    value = (function(x) (x - min(x)) / (max(x) - min(x)))(value)\r\n  ) %>%\r\n  mutate(avg = as.numeric(rank)[which.max(value)]) %>%\r\n  ungroup() %>%\r\n  mutate(\r\n    Treatment = paste0(stringr::str_to_title(Treatment), \":\"),\r\n    Treatment = factor(Treatment, levels = unique(Treatment[order(avg)]))\r\n  )\r\n\r\nci <- dta %>%\r\n  group_by(Treatment) %>%\r\n  summarise(min = min(rankx[lci]), max = max(rankx[uci])) %>%\r\n  ungroup()\r\n\r\ngg <- ggplot(\r\n  dta,\r\n  aes(rankx, value, color = value, alpha = value, size = value)\r\n) +\r\n  geom_ribbon(\r\n    aes(ymin = 0, ymax = value),\r\n    fill = \"gray90\", color = \"transparent\", alpha = 1, size = 1\r\n  ) +\r\n  geom_hline(yintercept = 0, color = \"gray80\", lwd = .1) +\r\n  geom_segment(aes(xend = rankx, yend = 0), lwd = 1) +\r\n  geom_point(shape = 21, fill = \"white\", stroke = .5) +\r\n  geom_point(shape = 21, fill = \"white\", stroke = 0, alpha = 1) +\r\n  geom_segment(\r\n    data = ci,\r\n    mapping = aes(x = min - 0.2, xend = max + 0.2, y = 0, yend = 0),\r\n    color = \"gray20\",\r\n    alpha = 1,\r\n    size = .25,\r\n    arrow = arrow(angle = 90, ends = \"both\", length = unit(0.1, \"lines\"))\r\n  ) +\r\n  scale_color_viridis_c(direction = -1, option = \"D\", begin = .2, end = .8) +\r\n  scale_x_continuous(breaks = 1:12) +\r\n  scale_alpha_continuous(range = c(.3, 1)) +\r\n  scale_size_continuous(range = c(.5, 2)) +\r\n  xlab(\"Ranks\") +\r\n  facet_grid(Treatment ~ ., switch = \"y\", scales = \"free\") +\r\n  coord_cartesian(clip = \"off\") +\r\n  guides(color = \"none\", alpha = \"none\", size = \"none\") +\r\n  theme_minimal() +\r\n  theme(\r\n    panel.grid = element_blank(),\r\n    strip.text.y.left = element_text(\r\n      margin = margin(b = 2, r = 5),\r\n      angle = 0, vjust = 0,\r\n      face = \"bold\",\r\n      color = \"gray30\",\r\n      size = 7\r\n    ),\r\n    panel.spacing.y = unit(.5, \"lines\"),\r\n    axis.text.y = element_blank(),\r\n    axis.text.x = element_text(margin = margin(t = 5, b = 5), size = 7),\r\n    axis.title.x = element_text(color = \"gray40\", size = 9),\r\n    axis.title.y = element_blank()\r\n  )\r\n\r\ngg\r\n\r\nif (require(dm.utils)) {\r\n  library(dm.utils)\r\n  p <- clean_slate(\r\n    margin = margin(1, 1, 1, 1, unit = \"cm\"),\r\n    gp = grid::gpar(\r\n      lineheight = 1.1, fontfamily = \"HersheySans\", fontsize = 7,\r\n      col = \"gray50\"\r\n      )\r\n  ) %>%\r\n    add_figure(gg, width = .7, guide = TRUE, height = .9) %>%\r\n    add_header(\r\n      c(\"Wonderful Wednesday\", \"Webinar 10 Aug 2022\"),\r\n      c(\"Francois C A Collin\", \"<https://fcacollin.github.io/Latarnia/>\")\r\n    ) %>%\r\n    add_title(c(\r\n      \"\",\r\n      \"Ranking Probability for 12 Concurrent Treatments\",\r\n      \"\"\r\n    )) %>%\r\n    add_note(c(\r\n      \"\",\r\n      \"NOTE: Visualise the relative performance of 12 treatments based on NMA\r\n    rank probabilities.\",\r\n      \"NOTE: Color gradient, y-axis, point size and transparency are all scaled\r\n    to the treatment-wise min-max-normalized NMA rank probabilities.\",\r\n      \"NOTE: the plain black lines underline the rank belonging to the 90%\r\n    credible interval (the algorithm used above is questionable, but it is\r\n    rather used to evidence that this kind of graphics should also integrate\r\n    a confidence-interval-like element).\",\r\n      \"NOTE: Treatments were ordered top-bottom by rank of lowest probability.\",\r\n      \"NOTE: The point-and-segment symbols emphasise the discrete nature of the\r\n    ranks, the gray area under the curve highlights the estimation methods by\r\n    embodying an underlying distribution and is a visual aid for treatment\r\n    rows.\"\r\n    ),\r\n    str_width = 90\r\n    ) %>%\r\n    add_footer(Sys.time(), \"\")\r\n  \r\n  show_slates <- function(slates, start_first_new_page = TRUE) {\r\n    grid.draw(slates)\r\n  }\r\n  \r\n  pdf_slates <- function(slates, file = \"temp.pdf\",\r\n                         height = 8.3, width = 5.8,\r\n                         landscape = TRUE) {\r\n    if (landscape) pdf(file = file, width = width, height = height)\r\n    else pdf(file = file, width = height, height = width)\r\n    show_slates(slates, start_first_new_page = FALSE)\r\n    dev.off()\r\n    file\r\n  }\r\n  \r\n  pdf_slates(p, file = \"ww_aug_2022_fcacollin.pdf\") %>%\r\n    preview()\r\n}\r\n\r\n\r\n\r\nBack to blog\r\n\r\nExample 3. Use of color intensity\r\n\r\n\r\n#/*****************************************************************************\\\r\n#         O\r\n#        /\r\n#   O---O     _  _ _  _ _  _  _|\r\n#        \\ \\/(/_| (_|| | |(/_(_|\r\n#         O\r\n# ______________________________________________________________________________          \r\n# Program: wwrank.R\r\n# Purpose: Creates visualisations for treatment ranks\r\n#_______________________________________________________________________________                            \r\n\r\n#/*****************************************************************************\\\r\n\r\n# Clear environment and set working directory\r\nrm(list = ls())\r\nsetwd(\"~/\")\r\n\r\n# Read in packages\r\nlibrary(tibble)\r\nrequire(ggplot2)\r\nrequire(gganimate)\r\nlibrary(tidyverse)\r\nlibrary(dplyr)\r\nlibrary(\"ggpubr\")\r\nlibrary(modelr)\r\nlibrary(broom)\r\nlibrary(grid)\r\nlibrary(gridExtra)\r\nlibrary(\"transformr\")\r\nlibrary(ggtext)\r\nlibrary('ggforce')\r\nlibrary(\"readxl\")\r\nlibrary(stringr)\r\n\r\n#data processing\r\n\r\n# Set working directory using setwd()\r\nrnk1 <- read_excel(\"rankdata.xlsx\", sheet=\"rankdata\")\r\nrnk2<-tibble(rnk1)\r\nrnk3 <- mutate(rnk2, rowid_to_column(rnk2, \"ID\"))\r\n\r\nrnk4 <- rnk3 %>%\r\n  pivot_longer(!c(Treatment,ID), names_to = \"ranks\", values_to = \"prop\")\r\nrnk5 <- mutate(rnk4, ranker=str_replace_all(string=ranks, pattern=\"Rank\", replacement=\"\")) \r\nrnk6 <- mutate(rnk5, rnk=as.numeric(ranker), r1=rnk-0.5, r2=rnk+0.5, p2=prop*12, rnkr=1/rnk, clr=letters[4])\r\nrnk <- rnk6 %>% group_by(Treatment) %>% mutate(cp=cumsum(prop))\r\n\r\n#drawing\r\n\r\np<-\r\nggplot() +\r\n  ggforce::geom_link2(data = rnk,\r\n                      aes(x = rnk, y = Treatment, color=clr, alpha = prop, size=5)) +\r\n  #scale_colour_manual(values = \"green\") +\r\n  theme(legend.position=\"none\") + \r\n  scale_x_discrete(name =\"Rank\", limits=c('1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12'))\r\np\r\npdf(\"wwranklp.pdf\")\r\nprint(p)     \r\ndev.off()\r\npng(\"wwranklp.png\")\r\nprint(p)     \r\ndev.off()\r\n\r\nq<-\r\nggplot() +\r\n  ggforce::geom_link2(data = rnk,\r\n                      aes(x = rnk, y = Treatment, colour='green', alpha = cp, size=5))  +\r\n  #scale_colour_manual(values = \"green\") +\r\n  theme(legend.position=\"none\") + \r\n  scale_x_discrete(name =\"Rank\", limits=c('1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12'))\r\nq\r\npng(\"wwranklpc.png\")\r\nprint(q)     \r\ndev.off() \r\n\r\n\r\nr1 <- \r\n  ggplot(data = rnk, aes(x = factor(1), group=factor(rnkr), fill=p2)) +\r\n  geom_bar(width = 1) +\r\n  scale_fill_continuous(low='white', high='green1', guide=\"none\") +\r\n  facet_wrap(~Treatment, ncol=4) + theme(\r\n    axis.title.x = element_blank(),\r\n    axis.title.y = element_blank(),\r\n  axis.text.x = element_blank(),\r\n  axis.text.y = element_blank(),\r\n  axis.ticks = element_blank())  \r\nr1\r\nr <- r1 + coord_polar(theta = \"x\")\r\nr\r\npng(\"wwrankcp.png\")\r\nprint(r)     \r\ndev.off() \r\n\r\ns1 <- ggplot(data = rnk, aes(x = factor(1), group=factor(rnkr), fill=cp)) +\r\n  geom_bar(width = 1) +\r\n  scale_fill_continuous(low='white', high='green1', guide=\"none\") +\r\n  facet_wrap(~Treatment, ncol=4) + theme(\r\n    axis.title.x = element_blank(),\r\n    axis.title.y = element_blank(),\r\n    axis.text.x = element_blank(),\r\n    axis.text.y = element_blank(),\r\n    axis.ticks = element_blank())\r\ns1\r\ns<- s1 + coord_polar(theta = \"x\")\r\ns\r\npng(\"wwrankcpc.png\")\r\nprint(s)     \r\ndev.off() \r\n\r\n\r\n\r\nBack to blog\r\n\r\nExample 4. Treatment Ranking Dashboard\r\n\r\n\r\n# Authors: Huw Wilson and Rhys Warham\r\n# Creation Date: 02AUG2022\r\n\r\n# Read in libraries\r\nlibrary(tidyverse)\r\nlibrary(shiny)\r\nlibrary(plotly)\r\nlibrary(rsconnect)\r\n\r\n# Read in data and calculate cumulative probabilities\r\nRankingData <- read.csv(\"./bayesian_ranking.csv\") %>%\r\n               pivot_longer(cols = -Treatment,\r\n                            names_to = \"Rank\",\r\n                            values_to = \"Probability\") %>%\r\n               group_by(Treatment) %>%\r\n               mutate(cumProbability = cumsum(Probability),\r\n                      Rankn = as.numeric(str_extract(Rank, \"[0-9]+\")),\r\n               SUCRAflag = if_else(\r\n                          condition = Rankn %in% seq_len(n()-1),\r\n                          true = \"Y\",\r\n                          false = \"N\")) %>%\r\n               ungroup()\r\n\r\n# Calculate SUCRA and overall rank for each treatment\r\nSUCRAvalues <- RankingData %>%\r\n               group_by(Treatment, SUCRAflag) %>%\r\n               mutate(SUCRA = sum(cumProbability)/(n())) %>%\r\n               ungroup() %>%\r\n               filter(SUCRAflag == \"Y\") %>%\r\n               select(Treatment, SUCRA) %>%\r\n               unique() %>%\r\n               mutate(Order = as.numeric(reorder(Treatment, -SUCRA)))\r\n\r\n# Merge SUCRA and overall rank onto the original dataset\r\ndf <- left_join(RankingData, SUCRAvalues, by = \"Treatment\") %>%\r\n      select(-c(Rank, SUCRAflag))\r\n\r\n\r\n# Define UI\r\nui <- fluidPage(\r\n    \r\n   h2(\"Treatment Ranking Dashboard\"),\r\n   p(\"Rhys Warham, Huw Wilson\"),\r\n   br(),\r\n\r\n   column(5,\r\n    selectInput(\"treatment\",\r\n                \"Select a treatment\",\r\n                choices = unique(df$Treatment)),\r\n    \r\n    p(\"Surface Under the Cumulative Ranking (SUCRA) can be used to determine the overall ranking of a treatment. \r\n      It is calculated as the sum of cumulative rank probabilities up to T-1 divided by T-1. Higher values indicate higher overall ranking.\"),\r\n    \r\n    plotOutput(\"SUCRAplot\", height = \"500px\")),\r\n    \r\n    column(width = 7,\r\n           \r\n           tabsetPanel(\r\n               tabPanel(\"Line Graphs\",\r\n                        br(),\r\n                        column(6,\r\n                        selectInput(\"line_type\",\r\n                                    \"Type\",\r\n                                    choices = c(\"Probability\",\r\n                                                \"Cumulative Probability\"),\r\n                                    selected = \"Cumulative Probability\")),\r\n                        column(6,\r\n                               selectInput(\"facet\",\r\n                                           \"Facet\",\r\n                                           choices = c(\"Yes\", \"No\"),\r\n                                           selected = \"No\")),\r\n                        br(), br(), br(),\r\n                        plotlyOutput(\"line_graph\", height = \"500px\")),\r\n               tabPanel(\"Bar Chart\",\r\n                        br(),\r\n                        selectInput(\"stack_type\",\r\n                                    \"Stack by\",\r\n                                    choices = c(\"Treatment\", \"Rank\")),\r\n                        plotOutput(\"bar_chart\", height = \"500px\"))))\r\n\r\n)\r\n\r\n# Choose colors for graphs\r\nchosen.trt.color <- \"dodgerblue\"\r\nother.trt.color <- \"gray70\"\r\n\r\n# Define server logic\r\nserver <- function(input, output) {\r\n    \r\n    # Reactive dataset that flags the selected treatment\r\n    graph_df <- reactive({df %>%\r\n                          mutate(ChosenTrt = if_else(\r\n                              condition = Treatment == input$treatment,\r\n                              \"Y\",\r\n                              \r\n                              \"N\"))})\r\n    \r\n    # Create the SUCRA plot\r\n    output$SUCRAplot <- renderPlot({\r\n        \r\n        SUCRAdata <- graph_df() %>%\r\n                     select(Treatment, SUCRA, ChosenTrt, Order) %>%\r\n                     mutate(yLabel = paste0(sprintf(\"%2.0f\", Order), \". \", Treatment)) %>%\r\n                     unique()\r\n        \r\n        ggplot(data = SUCRAdata,\r\n               aes(x = SUCRA,\r\n                   y = reorder(yLabel, SUCRA),\r\n                   fill = ChosenTrt)) +\r\n            \r\n            geom_col(width = 0.85) +\r\n            \r\n            scale_x_continuous(limits = c(0, 1)) +\r\n            \r\n            scale_fill_manual(values = c(other.trt.color, chosen.trt.color)) +\r\n            \r\n            theme(legend.position = 'none',\r\n                  axis.title.y = element_blank(),\r\n                  axis.text.y = element_text(hjust = 0),\r\n                  axis.ticks.y = element_blank(),\r\n                  panel.background = element_rect(fill = \"white\"),\r\n                  axis.line = element_line(color = \"black\"),\r\n                  axis.title.x = element_text(margin = margin(t = 15),\r\n                                              size = 12),\r\n                  axis.text = element_text(size = 12))\r\n    })\r\n\r\n    # Create the line graph\r\n    output$line_graph <- renderPlotly({\r\n        \r\n        if (input$line_type == \"Probability\"){\r\n            line_p <- geom_line(aes(y = Probability,\r\n                                    text = paste0(Treatment, \"<br>\",\r\n                                                  \"Rank: \", Rankn, \"<br>\",\r\n                                                  \"Probability: \", sprintf(\"%0.4f\", Probability))))}\r\n        \r\n        else if (input$line_type == \"Cumulative Probability\"){\r\n            line_p <- geom_line(aes(y = cumProbability,\r\n                                    text = paste0(Treatment, \"<br>\",\r\n                                                  \"Rank: \", Rankn, \"<br>\",\r\n                                                  \"Cumulative Probability: \", sprintf(\"%0.4f\", cumProbability))))}\r\n        \r\n        if (input$facet == \"Yes\"){\r\n            facet_p <- facet_wrap(~reorder(Treatment, -SUCRA))}\r\n        else {\r\n            facet_p <- geom_blank()}\r\n        \r\n        p <- ggplot(data = graph_df(),\r\n                   aes(x = Rankn,\r\n                       group = Treatment,\r\n                       color = ChosenTrt,\r\n                       size = ChosenTrt)) +\r\n             line_p +\r\n             facet_p +\r\n            \r\n             scale_size_manual(values = c(0.8, 1.2)) +\r\n            \r\n             scale_x_continuous(breaks = seq_len(nrow(SUCRAvalues)),\r\n                               limits = c(1, nrow(SUCRAvalues)),\r\n                               expand = c(0, 0)) +\r\n            \r\n             scale_y_continuous(limits = c(0, 1),\r\n                               expand = c(0, 0)) +\r\n            \r\n             scale_color_manual(values = c(other.trt.color, chosen.trt.color)) +\r\n            \r\n             theme(legend.position  = 'none',\r\n                   axis.title.y     = element_blank(),\r\n                   panel.spacing.y  = unit(0.5, 'in'),\r\n                   panel.spacing.x  = unit(0.1, 'in'),\r\n                   panel.background = element_rect(fill = \"gray98\")) +\r\n\r\n             labs(x = \"Rank\")\r\n        \r\n        ggplotly(p, tooltip = \"text\") %>%\r\n        config(displayModeBar = F)\r\n            \r\n    })\r\n    \r\n    \r\n\r\n    # Create the stacked bar charts\r\n    output$bar_chart <- renderPlot({\r\n        \r\n        if (input$stack_type == \"Rank\"){\r\n            \r\n            # Stack by Rank (Treatment on y axis)\r\n            ggplot() +\r\n            geom_col(data = graph_df(),\r\n                     aes(x = Probability,\r\n                         y = reorder(Treatment, SUCRA),\r\n                         alpha = reorder(Rankn, -Rankn),\r\n                         fill = ChosenTrt)) +\r\n                \r\n                scale_fill_manual(values = c(other.trt.color, chosen.trt.color)) +\r\n                \r\n                theme(panel.background = element_rect(fill = \"white\"),\r\n                      legend.position  = 'top',\r\n                      axis.title.y     = element_blank(),\r\n                      axis.ticks.y     = element_blank(),\r\n                      axis.text        = element_text(size = 12),\r\n                      axis.title.x     = element_text(size = 12),\r\n                      axis.text.y      = element_text(margin = margin(r = -30)),\r\n                      legend.text      = element_text(size = 12)) +\r\n                \r\n                guides(fill = 'none',\r\n                       alpha = guide_legend(nrow = 1, reverse = T, title = NULL))\r\n        }\r\n        \r\n        else if (input$stack_type == \"Treatment\"){\r\n        \r\n            # Stack by Treatment (Rank on y-axis)\r\n            ggplot() +\r\n            geom_col(data = graph_df(),\r\n                     aes(x = Probability,\r\n                         y = reorder(Rankn, -Rankn),\r\n                         alpha = reorder(Treatment, SUCRA),\r\n                         fill = ChosenTrt)) +\r\n            scale_fill_manual(values = c(other.trt.color, chosen.trt.color)) +\r\n            \r\n            theme(panel.background = element_rect(fill = \"white\"),\r\n                  legend.position  = 'top',\r\n                  axis.title.y     = element_blank(),\r\n                  axis.ticks.y     = element_blank(),\r\n                  axis.text.y      = element_text(margin = margin(r = -30)),\r\n                  legend.text      = element_text(size = 12),\r\n                  axis.text        = element_text(size = 12),\r\n                  axis.title.x     = element_text(size = 12)) +\r\n                \r\n            guides(fill = 'none',\r\n                   alpha = guide_legend(nrow = 1, reverse = T, title = NULL))\r\n        }\r\n    })\r\n\r\n}\r\n\r\n# Run the application \r\nshinyApp(ui = ui, server = server)\r\n\r\n\r\n\r\nThe rmd file can be found here.\r\nBack to blog\r\n\r\nExample 5. App – (Bayesian) Ranking Data\r\nInteractive Figure Reproducible Code\r\nBack to blog\r\n\r\n\r\n\r\n",
    "preview": "posts/2022-08-14-wonderful-wednesdays-august-2022/./images/NMA_ranks - Steve Mallett.PNG",
    "last_modified": "2025-08-22T14:49:26+02:00",
    "input_file": {},
    "preview_width": 1900,
    "preview_height": 966
  },
  {
    "path": "posts/2022-08-14-wonderful-wednesdays-july-2022/",
    "title": "Wonderful Wednesdays July 2022",
    "description": "Detailed patient level data is meant to be an informed representation of the patient and what happened to the patient during the course of the study. These visualisations can help to get a quick overview on demographic information as well as exposure, concomitant medications, adverse events and laboratory data.",
    "author": [
      {
        "name": "Bodo Kirsch",
        "url": "https://www.psiweb.org/sigs-special-interest-groups/visualisation"
      }
    ],
    "date": "2022-07-13",
    "categories": [
      "Patient profiles",
      "Wonderful Wednesdays"
    ],
    "contents": "\r\nDesigning visual patient profiles\r\nThe visualisations below present patient level data in one plot or multiple aligned plots. Interactive visualisations are shown allowing to expand and collapse selected details. The use of color and pre-attentive attributes is supporting easy interpretation of the data.\r\n\r\nExample 1. One plot solution\r\nhigh resolution image\r\nThis visualisations gives a time-aligned overview on study drug intake, adverse events, laboratory values and other information with very little clutter. Blood pressure is given as line plot with values. Color coding is used for abnormal values and AE severity.\r\nlink to code\r\n\r\nExample 2. D3 patient profile\r\nhigh resolution image\r\nMultiple plots with aligned time axis are showing drug exposure, adverse events and concomitant medication. Lab values over time and changes are displayed in facet plots with highlighted abnormal values.\r\nlink to code\r\n\r\nExample 3. Grable\r\n\r\nThe app can be found here.\r\nThis table with embedded graphics is giving an overview over all subjects with the option to expand and collapse additional information. Demographic data are displayed in symbols, gauge charts, text, color coded bar charts, or color supported descriptive text respectively. Population ranges are given as gray background where possible.\r\nlink to code\r\n\r\nExample 4. Table-Graph-combination\r\n\r\nhigh resolution image\r\nThis is an example out of the context of the challenge. It’s showing a possibility to include outcome values over time and dosing in addition to textual information.\r\nlink to code\r\nCode\r\n\r\nExample 1. One plot solution\r\nNo code has been submitted.\r\nBack to blog\r\n\r\nExample 2. D3 patient profile\r\nThe code can be found here.\r\nBack to blog\r\n\r\nExample 3. Grable\r\nNo code has been submitted.\r\nBack to blog\r\n\r\nExample 4. Table-Graph-combination\r\nThe code can be found here.\r\nBack to blog\r\n\r\n\r\n\r\n",
    "preview": "posts/2022-08-14-wonderful-wednesdays-july-2022/./images/David.png",
    "last_modified": "2025-08-22T14:49:26+02:00",
    "input_file": {},
    "preview_width": 1600,
    "preview_height": 720
  },
  {
    "path": "posts/2022-06-12-wonderful-wednesdays-june-2022/",
    "title": "Wonderful Wednesdays June 2022",
    "description": "The purpose of this data visualization is to assess if there is an adverse impact on the growth of these children due to taking the drug (exploratory). Explanatory examples are welcome too (once you know the answer).",
    "author": [
      {
        "name": "Irene de la Torre Arenas",
        "url": "https://www.psiweb.org/sigs-special-interest-groups/visualisation"
      }
    ],
    "date": "2022-06-08",
    "categories": [
      "Pediatric Growth",
      "Wonderful Wednesdays"
    ],
    "contents": "\r\n\r\nThis is a snapshot from a two-year clinical trial assessing the impact of a drug on growth measurements (stature, weight and BMI) in children as part of a regulatory commitment for a marketed drug. There is a placebo comparator arm that converts to active drug at 6 months and additional rescue medication is allowed.\r\nThe challenge is to use visualizations to assess if there is an adverse impact on children’s growth due to taking a drug. To do so, participants had to display effects on development over time. Although the topic led to more exploratory visualizations, the organizers also encouraged participants to develop explanatory graphs.\r\n\r\nExample 1. Change from baseline over time\r\nhigh resolution image\r\nThe first entry encoded the change from baseline in stature’s distribution with color. The area graph used contours and shades of green to highlight the percentages of patients that had a specific shift from baseline over time.\r\nThe panelists liked the descriptive title. They also made a few suggestions to improve the chart:\r\nRemoving the opacity of the areas: the overlap of the shades made the bands hard to read.\r\nUsing colors that highlight the highest percentages instead of the lowest ones.\r\nLabeling de bands to better identify groupings.\r\nlink to code\r\n\r\nExample 2. Animated Z-Score\r\nhigh resolution animation\r\nThe second entry was an animated scatterplot and density plot: an exploratory visualization that showed the data over time and let viewers draw their conclusions.\r\nThe graph had four panels:\r\nThe top left panel showed the baseline distribution for the two groups\r\nThe bottom right one displayed the change from the baseline distribution.\r\nThe bottom left had a scatterplot showing the change from baseline and baseline for the two groups.\r\nThe panel enjoyed the animations and highlighted its minimalistic design, where there are no duplicated elements, such as axis titles. A design change that would have made the entry even better would have been to increase the contrast between the dots and the trend lines in the scatterplot.\r\nlink to code\r\n\r\nExample 3. BMI - error bars\r\nhigh resolution image\r\nThe third entry is a dot plot with whiskers showing confidence intervals and trendlines connecting treatment values. The visualization displayed a lot of data and how the treatments deviated.\r\nThe panelists made a few suggestions on how to improve the graph:\r\nThe first step would be to consider which elements need to pick the audience’s attention first and structure the visual hierarchy around them.\r\nFollowing that idea, those shapes -in this case, the dots- need to be the first thing they see.\r\nEverything else, the trendlines or the CIs (Confidence intervals), can be knocked back and made just supportive elements -by simplifying them or making them lighter-.\r\nAnother point that was mentioned was to make the textual elements more descriptive. Having the abbreviations meaning, or writing down the unit of the time axis, would have helped viewers understand the chart.\r\nlink to code\r\n\r\nExample 4. Density plots\r\n\r\nhigh resolution image.\r\nThe fourth entry showed distributions over time. In this challenge, the expectation was that most of the changes from baseline should be 0, which is what this visualization highlights.\r\nIt’s an especially useful graph that lets you see the distributions over time. It helps you see differences and find extreme values. It also includes the quartiles that facilitate making comparisons between the two groups.\r\nlink to code\r\n\r\nExample 5. Box plots\r\nhigh resolution image 1high resolution image 2high resolution image 3high resolution image 4\r\nThe last visualization is box plots over time. A shaded area highlights the band [1, -1], which should fit around 50% of the data. The width of the box plots is also proportional to the number of participants in each treatment group. The X-Axis is also relative to the time points.\r\nThe panel liked all the little additions to make the box plots more understandable and representative. They would have liked more separation between the treatment groups to help make comparisons between them.\r\nlink to code\r\nCode\r\n\r\nExample 1. Change from baseline over time\r\n\r\n\r\nlibrary(haven)\r\nlibrary(dplyr)\r\nlibrary(tidyr)\r\nlibrary(ggplot2)\r\nlibrary(grid)\r\nlibrary(gridExtra)\r\nlibrary(readxl)\r\nlibrary(cowplot)\r\n\r\nhgb1 <- read_excel(\"/.../growth.xlsx\") %>%\r\n  filter(MEASURE == \"STATURE\" & TRT == \"Rx\" & TIME != 0)\r\n\r\nquant1 <- hgb1 %>% group_by(TIME) %>%\r\n  do(quant = quantile(.$CFB, probs = seq(0.2,0.8,.05)), probs = seq(0.2,0.8,.05)) %>%\r\n  unnest(cols=c(quant, probs)) %>%\r\n  mutate(delta = 2*round(abs(.5-probs)*100)) %>% \r\n  group_by(TIME, delta) %>%\r\n  summarize(quantmin = min(quant), quantmax= max(quant)) %>%\r\n  filter(delta > 0)\r\n\r\n# Derive median Hgb\r\n\r\nhgb_med1 <- hgb1 %>% \r\n  group_by(TIME) %>% \r\n  summarise(hgb.median = median(CFB)) \r\n\r\n# Produce plot for group E\r\n\r\nplot01 <- ggplot() +\r\n  geom_ribbon(data = quant1, aes(x = TIME, ymin = quantmin, ymax = quantmax,\r\n                                    group = reorder(delta, -delta), fill = factor(delta)),\r\n              alpha = .5) +\r\n  geom_line(data = hgb_med1, aes(x = TIME, y = hgb.median, color = \"#00441b\"), size = 2 ) +  \r\n  scale_x_continuous(\"Time (days)\",\r\n                     breaks=c(16, 28, 40, 52, 64, 76),\r\n                     limits=c(16, 76)) +\r\n  scale_y_continuous(\" \",\r\n                     breaks=c(-1.5, -1.0, -0.5, 0, 0.5, 1.0, 1.5),\r\n                     limits=c(-1.5, 1.5),\r\n                     ) +\r\n  scale_fill_manual(\"% Patients in band\", values=c(\"#e5f5e0\",\"#c7e9c0\", \"#a1d99b\", \"#74c476\", \"#41ab5d\", \"#238b45\", \"#006d2c\")) +\r\n  scale_color_identity(name = \" \",\r\n                       guide=legend,\r\n                       labels = \" \") + \r\n  theme_minimal() +\r\n  theme(legend.position=\"none\",\r\n        axis.title.x=element_blank(),\r\n        axis.text.x=element_blank(),\r\n        axis.ticks.x=element_blank(),\r\n        axis.text.y.left =  element_text(color = 'black'),        \r\n        plot.title = element_text(hjust = 0.5, size = 25),\r\n        text = element_text(size = 15),\r\n        axis.text = element_text(size = 20),\r\n        axis.title = element_text(size = 25),\r\n        panel.border = element_rect(colour = \"black\", fill=NA, size=1),\r\n        plot.margin=unit(c(1,0,0,0),\"cm\")) +\r\n  ggtitle(label = \"Treatment\")\r\n\r\nhgb2 <- read_excel(\"/.../growth.xlsx\") %>%\r\n  filter(MEASURE == \"STATURE\" & TRT == \"Placebo\"  & TIME != 0)\r\n\r\n\r\nquant2 <- hgb2 %>% group_by(TIME) %>%\r\n  do(quant = quantile(.$CFB, probs = seq(0.2,0.8,.05)), probs = seq(0.2,0.8,.05)) %>%\r\n  unnest(cols=c(quant, probs)) %>%\r\n  mutate(delta = 2*round(abs(.5-probs)*100)) %>% \r\n  group_by(TIME, delta) %>%\r\n  summarize(quantmin = min(quant), quantmax= max(quant)) %>%\r\n  filter(delta > 0)\r\n\r\nhgb_med2 <- hgb2 %>% \r\n  group_by(TIME) %>% \r\n  summarise(hgb.median = median(CFB)) \r\n\r\nplot02 <- ggplot() +\r\n  geom_ribbon(data = quant2, aes(x = TIME, ymin = quantmin, ymax = quantmax,\r\n                                    group = reorder(delta, -delta), fill = factor(delta)),\r\n              alpha = .5) +\r\n  geom_line(data = hgb_med2, aes(x = TIME, y = hgb.median, color = \"#00441b\"), size = 2) + \r\n  geom_segment(x=17, y=1, xend=75, yend=1, color=\"black\") +\r\n  scale_x_continuous(\"Time (days)\",\r\n                     breaks=c(16, 28, 40, 52, 64, 76),\r\n                     limits=c(16, 76)) +\r\n  scale_y_continuous(\" \",\r\n                     breaks=c(-1.5, -1.0, -0.5, 0, 0.5, 1.0, 1.5),\r\n                     limits=c(-1.5, 1.5),\r\n  ) +\r\n  scale_fill_manual(\"% Patients in band\", values=c(\"#e5f5e0\",\"#c7e9c0\", \"#a1d99b\", \"#74c476\", \"#41ab5d\", \"#238b45\", \"#006d2c\")) +\r\n  scale_color_identity(name = \"Median\",\r\n                       guide=legend,\r\n                       labels = \" \") + \r\n  labs(fill = \"Hgb (% patients in band)\") +\r\n  theme_minimal() +\r\n  theme(legend.position=\"bottom\",\r\n        plot.title = element_text(hjust = 0.5, size = 25),\r\n        text = element_text(size = 15),\r\n        axis.text = element_text(size = 20),\r\n        axis.title = element_text(size = 25),\r\n        axis.text.y.left =  element_text(color = 'black'),\r\n        legend.text=element_text(size=14),\r\n        legend.title=element_text(size=20),\r\n        legend.key.size = unit(1.2, \"cm\"),        \r\n        panel.border = element_rect(colour = \"black\", fill=NA, size=1)) +\r\n  guides(colour = guide_legend(override.aes = list(size=3))) +\r\n  ggtitle(label = \"Control\")\r\n\r\np <- grid.arrange(arrangeGrob(plot01, ncol=1, nrow=1),\r\n                  arrangeGrob(plot02, ncol=1, nrow=1),\r\n                  heights = c(1,1.32))\r\n\r\ntitle <- ggdraw() + draw_label(\"Change from Baseline in Stature (cm) Over Time\\nNo Evidence of a Treatment Effect\", size = 24)\r\n\r\np2 <- plot_grid(title, p, ncol=1, rel_heights = c(1, 10))  \r\n\r\ngsave(\"/.../growth.png\", p2, width=12, height=12, dpi=300)\r\n\r\n\r\n\r\nBack to blog\r\n\r\nExample 2. \r\nNo code has been submitted.\r\nBack to blog\r\n\r\nExample 3. \r\nNo code has been submitted.\r\nBack to blog\r\n\r\nExample 4. \r\nNo code has been submitted.\r\nBack to blog\r\n\r\nExample 5. \r\nThe rmd file for the graphs 1 and 3 can be found here.\r\nThe rmd file for the graphs 2 and 4 can be found here.\r\nBack to blog\r\n\r\n\r\n\r\n",
    "preview": "posts/2022-06-12-wonderful-wednesdays-june-2022/./images/growth - Steve Mallett.png",
    "last_modified": "2025-08-22T14:49:26+02:00",
    "input_file": {},
    "preview_width": 3600,
    "preview_height": 3600
  },
  {
    "path": "posts/2022-06-06-wonderful-wednesdays-may-2022/",
    "title": "Wonderful Wednesdays May 2022",
    "description": "The challenge is to visualize the impact of changing the definition of HiSCR response on the results. The idea is to change, for example, the first condition and assume that a decrease of 25% or 75% is needed to reach HiSCR response. The second and third condition can be changed separately, or a mix of changes to two or all conditions can be applied. How does this impact the results?",
    "author": [
      {
        "name": "Lorenz Uhlmann",
        "url": "https://www.psiweb.org/sigs-special-interest-groups/visualisation"
      }
    ],
    "date": "2022-05-11",
    "categories": [
      "HiSCR",
      "Combined endpoint",
      "Wonderful Wednesdays"
    ],
    "contents": "\r\nHiSCR data example\r\nIn a phase III study with patients suffering from hidradenitis suppurativa, an active drug was compared to placebo. There were 200 subjects in each group and the endpoint was the HiSCR which is a binary endpoint. This endpoint is based on three continuous components:\r\nnumber of abscess\r\nnumber of draining fistulae\r\nnumber of inflammatory nodules\r\nA patient reaches a HiSCR response, if all of the following three conditions are met, when the baseline data are compared to the follow-up data (at week 16):\r\nat least a 50% decrease in (AN) count; AN count is defined as the sum of the number of abscess and the number of inflammatory nodules\r\nno increase in the number of abscesses\r\nno increase in the number of draining fistulae\r\nThe aim of the study was to compare the two treatment arms in regards to HiSCR response.\r\nThe challenge is to visualize the impact of changing the definition of HiSCR response on the results. The idea is to change, for example, the first condition and assume that a decrease of 25% or 75% is needed to reach HiSCR response. The second and third condition can be changed separately, or a mix of changes to two or all conditions can be applied. How does this impact the results?\r\n\r\nExample 1. Waffle plot, bar chart, line plot\r\n\r\nIn the first visualization, we can see a waffle plot where the original HiSCR definition is being used. Therefore, it is not focusing on the impact of changing the definition, but it is a very good starting point to get an overview of the data. The graph is easy to understand and interpret. Furthermore, it has a clear title. In this title, the colors of the subgroups are used as font colors which is a very nice detail. An alternative way to use such a waffle plot would be to combine both groups into one visualization by using a “stacked waffle plot” to highlight the difference between the two groups. Another option would be to present a bar chart instead of a waffle plot, but it depends on the purpose of the graph. Overall, it is a very nice and neat visualization of the data.\r\nIn the second visualization, another waffle plot is being shown, but the arrangement is a little different. Basically, the same comments apply as above. Some may find it easier to compare the groups using this arrangement, others may like the first one better.\r\nIn the third visualization, a we see two bar charts. On the left-hand side, we see a stacked bar chart with numbers showing the percentage of responders. Furthermore, it shows the difference in the percentage between the two groups. On the right-hand side, a hanging bar charts is shown. The nice thing here is that you have a meaningful “zero line” for non-responders and responders. Numbers are included in this graph as well which helps the reader to get the message right away. In both graphs, only black and white is being used as colors. Overall, it is a very clean and clear visualization. It drops all unnecessary details (the nice things are the ones that you don’t see here).\r\nIn the fourth visualization, a line graph is being shown. Actually, there are two of them within one figure. On the left-hand side, the active group is shown. On the right-hand side, the placebo group is presented. For both groups, the change from baseline in the number of abscesses is being shown. Furthermore, even though it is not labeled accordingly, colors are used to differentiate between the two time points (baseline and Week 16) and some jittering is added to the dots. In addition, (half) violin plots (or density plots) are shown to present the distribution of the data. Since patient level data is being presented, this shows you the data from a different angle.\r\nThe slide deck can be found here.\r\n(A summary of the discussion will be added shortly.)\r\nlink to code\r\n\r\nExample 2. Line plots based on reduction in AN count\r\nhigh resolution image\r\nThis visualization shows nicely that the difference between the groups is rather small, if the percentage change to be reached is large (focusing on the first part of the HiSCR responder definition). This is done by presenting a line plot for both groups using two different colors. There are three graphs. Each one of them keeps the second and/or the third part of the definition of a HiSCR responder fixed. Overall, it is a very clean visualization which very nicely tackles the challenge of showing the impact of chaning the definition of HiSCR response. One comment by the panel was that, instead of presenting the response rate per arm, the difference between the two arms could have been visualized.\r\nlink to code\r\n\r\nExample 3. Report and app\r\n\r\nThe whole report can be found here.\r\nThe app can be found here.\r\nThis visualization shows on the y-axis the inverse of the risk ratio and on the x-axis the threshold for the percentage decrease in AN count. It is actually an animation showing the impact of changing the threshold for the change of abscesses from baseline. This is a very useful graph to visualize what happens if you change different aspects of the definition. There is not only a report, but also an app which allows you to focus on different aspects of (changing) the HiSCR definition.\r\nlink to code\r\n\r\nExample 4. Simple bar chart app\r\n\r\nThe app can be found here.\r\nThis is a very simple app which allows you to change the definition of the HiSCR definition (on the left-hand side) to see what happens in the results (on the right-hand side).\r\nlink to code\r\n\r\nExample 5. Advanced app\r\n\r\nThe app can be found here.\r\nThis is a very advanced app which shows a volcano plot in the main panel and it shows what happends in the results when you change the definition on the left-hand side. On the right-hand side, you see a table with additional results based on different HiSCR definitions. The panel thinks that it is a not necessarily straightforward to see what is being shown here. However, it is still a very insightful and useful app to understand the impact of changing the definition of HiSCR.\r\nlink to code\r\nCode\r\n\r\nExample 1. Waffle plot, bar chart, line plot\r\nNo code has been submitted.\r\nBack to blog\r\n\r\nExample 2. Line plots based on reduction in AN count\r\n\r\n\r\n# Clear environment, read in libraries and data\r\nrm(list = ls())\r\n\r\nlibrary(tidyverse)\r\nlibrary(ggtext)\r\n\r\ndf <- read.csv(\"./HiSCR_dat.txt\")\r\n\r\n# Create required variables for graph\r\ndf_new <- df %>%\r\n          mutate(\r\n            \r\n            # If abscesses increase\r\n            abscesses.incr = if_else(\r\n              condition = abscesses.w16 > abscesses.base,\r\n              true = \"Yes\",\r\n              false = \"No\",\r\n              missing = NA_character_\r\n            ),\r\n            \r\n            # If draining fistulae increase\r\n            drain.fist.incr = if_else(\r\n              condition = drain.fist.w16 > drain.fist.base,\r\n              true = \"Yes\",\r\n              false = \"No\",\r\n              missing = NA_character_\r\n            ),\r\n            \r\n            # If abscesses and draining fistulae increase\r\n            drain.fist.abscesses.incr = if_else(\r\n              condition = abscesses.incr == \"No\" & drain.fist.incr == \"No\",\r\n              true = \"No\",\r\n              false = \"Yes\",\r\n              missing = NA_character_\r\n            ),\r\n            \r\n            an.count.base = abscesses.base + infl.nod.base,\r\n            an.count.w16 = abscesses.w16 + infl.nod.w16,\r\n            \r\n            # Percentage change in AN count\r\n            an.count.change = (an.count.w16 - an.count.base)/an.count.base*100\r\n          ) %>%\r\n  \r\n         select(c(TRT, abscesses.incr, drain.fist.incr,\r\n                  drain.fist.abscesses.incr, an.count.change))\r\n\r\nactive.df <- filter(df_new, TRT == \"ACT\")\r\nplacebo.df <- filter(df_new, TRT == \"PBO\")\r\n\r\nresults <- data.frame()\r\n\r\n# Find the percentage assigned a positive HiSCR for each value of i\r\n# where i is the minimum required percentage reduction.\r\nfor (i in 0:100){\r\n  active.abscesses <- sum(active.df$an.count.change <= -i & active.df$abscesses.incr == \"No\")/nrow(active.df)*100\r\n  active.drain.fist <- sum(active.df$an.count.change <= -i & active.df$drain.fist.incr == \"No\")/nrow(active.df)*100\r\n  active.both <- sum(active.df$an.count.change <= -i & active.df$drain.fist.abscesses.incr == \"No\")/nrow(active.df)*100\r\n  \r\n  placebo.abscesses <- sum(placebo.df$an.count.change <= -i & placebo.df$abscesses.incr == \"No\")/nrow(placebo.df)*100\r\n  placebo.drain.fist <- sum(placebo.df$an.count.change <= -i & placebo.df$drain.fist.incr == \"No\")/nrow(placebo.df)*100\r\n  placebo.both <- sum(placebo.df$an.count.change <= -i & placebo.df$drain.fist.abscesses.incr == \"No\")/nrow(placebo.df)*100\r\n  \r\n  # Store results\r\n  results <- rbind(results,\r\n                   data.frame(percent = i,\r\n                               active.abscesses,\r\n                               active.drain.fist,\r\n                               active.both,\r\n                               placebo.abscesses,\r\n                               placebo.drain.fist,\r\n                               placebo.both))\r\n}\r\n\r\n# Create a row for each percentage reduction, treatment arm, and condition\r\n# to get the data into the right form for the graph\r\ngraph_df <- results %>%\r\n            pivot_longer(cols = -\"percent\") %>%\r\n  \r\n            mutate(\r\n              # Extract treatment arm\r\n              TRT = if_else(\r\n                condition = str_detect(name, pattern = \"active\"),\r\n                true = \"Active\",\r\n                false = \"Placebo\",\r\n                missing = NA_character_),\r\n              \r\n              # Extract condition (<br> is used to cause line break in subplot title)\r\n              condition = case_when(\r\n                str_detect(name, pattern = \"abscesses\") ~ \"No Increase in Abscesses\",\r\n                str_detect(name, pattern = \"fist\") ~ \"No Increase in Draining Fistulae\",\r\n                TRUE ~ \"No Increase in <br>Abscesses & Draining Fistulae\"\r\n              )) %>%\r\n  \r\n            select(-name)\r\n\r\n# Order conditions for the graph\r\ngraph_df$condition <- factor(graph_df$condition,\r\n                             levels = c(\"No Increase in Abscesses\",\r\n                                        \"No Increase in Draining Fistulae\",\r\n                                        \"No Increase in <br>Abscesses & Draining Fistulae\"))\r\n\r\n# Annotation dataframe for the Placebo and Active labels\r\narm.ann <- data.frame(x = c(5, 3),\r\n                      y = c(90, 35),\r\n                      TRT = c(\"Active\", \"Placebo\"),\r\n                      condition = rep(\"No Increase in Abscesses\", 2))\r\n\r\n# Order condition variable to ensure labels appear in correct subplot.\r\narm.ann$condition <- factor(arm.ann$condition,\r\n                             levels = c(\"No Increase in Abscesses\",\r\n                                        \"No Increase in Draining Fistulae\",\r\n                                        \"No Increase in <br>Abscesses & Draining Fistulae\"))\r\n\r\naxis.color <- \"gray40\"\r\n\r\n# Create graph\r\nggplot(data = graph_df,\r\n       aes(x = percent,\r\n           y = value,\r\n           group = TRT)) +\r\n\r\n  # Add lines\r\n  geom_line(aes(color = TRT)) +\r\n  \r\n  # Subplot by condition\r\n  facet_wrap(~condition) +\r\n  \r\n  # Restrict plotting area\r\n  coord_cartesian(expand = F) +\r\n  \r\n  # Add % labels to the axes ticks\r\n  scale_x_continuous(labels = scales::percent_format(scale = 1)) +\r\n  \r\n  scale_y_continuous(limits = c(0, 100),\r\n                     labels = scales::percent_format(scale = 1)) +\r\n  \r\n  # Add Active and Placebo labels\r\n  geom_text(data = arm.ann,\r\n            aes(x = x,\r\n                y = y,\r\n                group = condition,\r\n                label = TRT,\r\n                color = TRT),\r\n            hjust = 0,\r\n            size = 2.75) +\r\n\r\n  # Define theme\r\n  theme(panel.background    = element_rect(fill = \"white\"),\r\n        axis.line           = element_line(color = axis.color),\r\n        panel.grid.major    = element_line(color = \"gray95\"),\r\n        axis.ticks          = element_line(color = axis.color),\r\n        axis.text           = element_text(color = axis.color),\r\n        axis.title          = element_text(color = axis.color,\r\n                                           size = 8),\r\n        axis.title.x        = element_text(hjust = 0,\r\n                                           margin = margin(t = 15)),\r\n        legend.position     = 'none',\r\n        plot.margin         = margin(20, 20, 20, 20),\r\n        strip.text          = element_markdown(size = 8),\r\n        panel.spacing       = unit(0.4, 'in'),\r\n        plot.title.position = 'plot',\r\n        plot.subtitle       = element_markdown(color = \"gray30\",\r\n                                               size = 9,\r\n                                               margin = margin(b = 10)),\r\n        plot.title          = element_markdown(size = 11),\r\n        plot.caption        = element_markdown(size = 7,\r\n                                               color = axis.color,\r\n                                               margin = margin(t = 15))) +\r\n  \r\n  # Define plot labels\r\n  labs(x = \"Minimum Required Percentage Reduction in AN Count*\",\r\n       y = NULL,\r\n       subtitle = \" % of Patients assigned a Positive HiSCR Response (N<sub>P<\/sub> = N<sub>A<\/sub> = 200)\",\r\n       title = \"____ <br> <br> How Changing the HiSCR Definition Changes the Results\",\r\n       caption = \"*AN Count = Sum of the Number of Abscesses and Inflammatory Nodes <br> Author: Huw Wilson\")\r\n\r\n\r\n\r\nBack to blog\r\n\r\nExample 3. Report and app\r\nNo code has been submitted.\r\nBack to blog\r\n\r\nExample 4. Simple bar chart app\r\n\r\n\r\nui <- shinyUI(fluidPage(\r\n  sidebarLayout(\r\n    sidebarPanel(\r\n      numericInput(\"ANcount\", \"Percentage change in AN count:\", min = -100, max = 100, value = 50),\r\n      numericInput(\"incr.absc\", \"Max. increase in abscesses:\", min = -10, max = 10, value = 0),\r\n      numericInput(\"incr.dr\", \"Max. increase in drain. fistulae:\", min = -10, max = 10, value = 0),\r\n      width = 2\r\n    ),\r\n    \r\n    mainPanel(\r\n      h4(\"HiSCR odds ratio [95% CI] between groups with p-value and HiSCR response rates\"),\r\n      htmlOutput(\"OR\"),\r\n      plotOutput(\"rateplot\"),\r\n      width = 5\r\n    )\r\n  )\r\n))\r\n\r\n\r\nserver <- function(input, output) {\r\n  require(ggplot2)\r\n  dat <- read.csv(\"HiSCR_dat.csv\", header = T)\r\n  hiscr.h <- function(TABSCS.base, TINFNC.base, TDRFSC.base,\r\n                      TABSCS.fu, TINFNC.fu, TDRFSC.fu,\r\n                      AN.decr = 50, incr.absc = 0, incr.dr = 0) {\r\n    AN.base <- TABSCS.base + TINFNC.base\r\n    AN.fu <- TABSCS.fu + TINFNC.fu\r\n    hiscr <- (AN.fu <= (100 - AN.decr)/100 * AN.base & TABSCS.fu <= (TABSCS.base + incr.absc) &\r\n                TDRFSC.fu <= (TDRFSC.base + incr.dr))\r\n    return(hiscr)\r\n  }\r\n  f.r <- function(x, k = 1) format(round(x, k), nsmall = k)\r\n  sum.yes <- function(x) length(which(x == \"Yes\")) / length(x) * 100\r\n  dat.prep <- reactive({\r\n    dat$HiSCR <- ifelse(hiscr.h(dat$abscesses.base, dat$infl.nod.base, dat$drain.fist.base,\r\n                                dat$abscesses.w16, dat$infl.nod.w16, dat$drain.fist.w16,\r\n                                input$ANcount, input$incr.absc, input$incr.dr), \"Yes\", \"No\")\r\n    dat\r\n  })\r\n  output$rateplot <- renderPlot(height = 100, width = 500, {\r\n    dat <- dat.prep()\r\n    res <- aggregate(dat$HiSCR, list(dat$TRT), sum.yes)\r\n    res$val.t <- paste0(f.r(res$x), \"%\")\r\n    res$Group.1 <- factor(res$Group.1, levels = c(\"PBO\", \"ACT\"))\r\n    hjust.r <- ifelse(min(res$x) < 11, -0.1, 1.1)\r\n    col.r <- ifelse(min(res$x) < 11, \"black\", \"white\")\r\n    ggplot(res, aes(y=x, x=Group.1, width = 0.9)) + \r\n      geom_bar(stat=\"identity\", fill = \"#3182BD\") +\r\n      ylab(\"\") + xlab (\"\") +\r\n      ylim(-12, 100) +\r\n      theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),\r\n            panel.background = element_blank(), axis.line = element_blank(),\r\n            axis.ticks = element_blank(),# axis.text = element_text(size = 12),\r\n            axis.text.x = element_blank(),\r\n            axis.text.y = element_blank(),\r\n            plot.margin = margin(0.2, 0.2, -0.3, -0.2, \"in\")) +\r\n      annotate(\"text\", x=1, y=-8, label= \"Placebo\", size = 5, color = \"grey40\") +\r\n      annotate(\"text\", x=2, y=-7, label= \"Active\", size = 5, color = \"grey40\") +\r\n      geom_text(aes(label=val.t), vjust = 0.5, hjust = hjust.r, size = 5, position = position_dodge(.1),\r\n                col = col.r) +\r\n      coord_flip()\r\n  })\r\n  output$OR <- renderText({\r\n    dat <- dat.prep()\r\n    p.val <- chisq.test(table(dat$HiSCR, dat$TRT))$p.val\r\n    if (p.val < 0.001) {\r\n      p.val <- \"<0.001\"\r\n    } else {\r\n      p.val <- f.r(p.val, 3)\r\n    }\r\n    dat$HiSCR.num <- as.numeric(as.factor(dat$HiSCR)) - 1\r\n    fit <- glm(HiSCR.num ~ TRT, data = dat, family = binomial)\r\n    or.est <- f.r(exp(coef(summary(fit))[2, 1]), 2)\r\n    ci.raw <- exp(confint.default(fit))\r\n    ci.est <- paste0(\"[\", f.r(ci.raw[2, 1], 2), \"; \", f.r(ci.raw[2, 2], 2), \"]\")\r\n    res <- HTML(paste(\"<b>\", \"OR (active vs. placebo): \", or.est, ci.est, p.val, \"<\/b>\"))\r\n    res\r\n  })\r\n}\r\n\r\n\r\nshinyApp(ui = ui, server = server)\r\n\r\n\r\n\r\nBack to blog\r\n\r\nExample 5. Advanced app\r\nThe rmd file can be found here.\r\nBack to blog\r\n\r\n\r\n\r\n",
    "preview": "posts/2022-06-06-wonderful-wednesdays-may-2022/./images/example_1a.png",
    "last_modified": "2025-08-22T14:49:26+02:00",
    "input_file": {},
    "preview_width": 1298,
    "preview_height": 665
  },
  {
    "path": "posts/2022-04-30-wonderful-wednesdays-april-2022/",
    "title": "Wonderful Wednesdays April 2022",
    "description": "The data reflects a phase III study - active vs placebo and the endpoint was Ordinal Scale for Improvement (OSCI). All patients started at OSCI=4 and daily measures over 35 days were performed. The challenge was to describe the treatment effect specifically taking into account the number and timing of patients who died, left the hospital or fully recovered.",
    "author": [
      {
        "name": "PSI VIS SIG",
        "url": "https://www.psiweb.org/sigs-special-interest-groups/visualisation"
      }
    ],
    "date": "2022-04-13",
    "categories": [
      "OSCI",
      "Data over time",
      "Wonderful Wednesdays"
    ],
    "contents": "\r\nCOVID OSCI over time\r\nAs described above, the challenge was to describe the treatment effect specifically taking into account the number and timing of patients who died, left the hospital or fully recovered.\r\n\r\nExample 1. Lasagna plots\r\nhigh resolution image\r\n(A summary of the discussion will be added shortly.)\r\nlink to code\r\n\r\nExample 2. Barcharts\r\nhigh resolution image\r\n(A summary of the discussion will be added shortly.)\r\nlink to code\r\n\r\nExample 3. Shiny app\r\n\r\nThe shiny app can be found here\r\n(A summary of the discussion will be added shortly.)\r\nlink to code\r\n\r\nCode\r\n\r\nExample 1. Lasagna plots\r\nAll code & reshaped data to reproduce this example can be found at: https://github.com/agstn/WW/tree/main/2022-03-09\r\nAny questions let me know, Agustin Calatroni acalatroni@gmail.com\r\nBack to blog\r\n\r\nExample 2. Barcharts\r\nNo code has been submitted.\r\nBack to blog\r\n\r\nExample 3. Shiny app\r\nNo code has been submitted.\r\nBack to blog\r\n\r\n\r\n\r\n",
    "preview": "posts/2022-04-30-wonderful-wednesdays-april-2022/./images/covid_combined - Agustin Calatroni.png",
    "last_modified": "2025-08-22T14:49:26+02:00",
    "input_file": {},
    "preview_width": 1204,
    "preview_height": 926
  },
  {
    "path": "posts/2022-02-09-wonderful-wednesdays-february-2022/",
    "title": "Wonderful Wednesdays February 2022",
    "description": "The current example is focusing on uncertainty in study planning. In this Wonderful Wednesday Webinar, we assume that a phase III cardiovascular superiority study is planned and we will discuss how uncertainty can be displayed with regard to total study duration if the assumptions are not exactly met.",
    "author": [
      {
        "name": "Irene de la Torre Arenas",
        "url": "https://www.psiweb.org/sigs-special-interest-groups/visualisation"
      }
    ],
    "date": "2022-02-09",
    "categories": [
      "Uncertainty",
      "Hazard rate",
      "Wonderful Wednesdays"
    ],
    "contents": "\r\nUncertainty in study planning\r\nA phase III cardiovascular superiority study is planned with the following assumptions (simplified, no lost-to-FU, no treatment discontinuation, no non-CV death):\r\nHazard rate of active comparator 5% per year\r\nHazard ratio 0.775\r\nAccrual time 24 months, total duration 30 months\r\nStatistical settings:\r\nLogrank test for superiority in time to first MACE event (CV death, MI, stroke) Alpha 5%, Power 90%\r\nA sample size of about 9900 patients would be needed aiming for 650 patients experiencing a MACE event to show superiority of the new treatment over the comparator in reducing MACE events.\r\nThe challenge is about how uncertainty can be displayed with regard to total study duration if the assumptions are not exactly met, i.e. comparator hazard rate between 4% and 6% (and hazard ratio between 0.75 and 0.8).\r\n\r\nExample 1. Animated dotplot\r\nhigh resolution image\r\nThis animated dot-plot shows the dependency between study duration and treatment effect. The chart also shows how these two variables change when the study assumption varies. In this way, this entry works well as a conceptual chart as it is very good at representing uncertainty to not statisticians.\r\nThe panel spoke about how the plot efficiently communicates a general picture and the difficulty of using gifs for conveying specific numbers. One of the ways to overcome this challenge would have been to create an RShiny App where a button play/pause or a slider controls the animation and, therefore, the data displayed.\r\nRegarding the aesthetics of the chart, the panel mentioned that increasing the contrast between the background and the dots would drag the viewer’s attention even more to the central topic of the plot. One way to do so would have been by swapping the grid color - having the background in white and grey lines.\r\nlink to code\r\n\r\nExample 2. Animated dotplot - Update to RShiny App\r\nOne of the panelists, Rhys Warham, remade the graph to include the ability to stopping the animation. By adding this option, the project becomes a more exploratory tool.\r\nlink to code\r\n\r\nExample 3. Linked heatmaps\r\nhigh resolution image\r\nHeatmaps are graphs that represent the strength of a relationship between two categories of data through shades of color. In this case, the visualization has three heatmaps:\r\nOne represents accural time vs. follow-up time. The color of the cells shows the sum of these two variables, which is the total time of a study.\r\nThe second matrix maps Hazard ratio vs. Hazard rate, and the color represents the Sample Size.\r\nFinally, the third matrix maps also Hazard ratio vs. Hazard rate and colors the cells by Power.\r\nThe interactivity of the project brings real value to the graphs. The user can hover over the cells to get specific information -very useful when using color to map variables- and can click on them to see how the other charts are updated depending on the selection.\r\nThere’re also sliders in each of the plots to tighten the selectors and increase the contrast between the cells of each of the heatmaps.\r\nThe panel discussed the selection of color palettes for the charts, as they are easy to read and understand. They were questions about the divergent color palette of the first matrix: green and red tend to indicate good and bad values.\r\nRegarding the interactivity, two ways to improve the app would have been to add the variable names to the tooltips instead of mentioning “row” and “column”, and also highlighting the selected cell after clicking.\r\nlink to code\r\nCode\r\n\r\nExample 1. Animated dotplot\r\nPlease see the Rmd file, the R file, and the bib file.\r\nBack to blog\r\n\r\nExample 2. Animated dotplot - Update to RShiny App\r\nThe following code needs this data file\r\n\r\n\r\nlibrary(shiny)\r\nlibrary(ggplot2)\r\nlibrary(plotly)\r\n\r\nref_dat <- dur_dat %>% dplyr::filter(baseline_haz == 0.05) %>%\r\n  rename(ref_HR = HR)\r\n\r\nmakeplot <- function(df = dur_dat, basehaz){\r\n  \r\n  dur_dat2 <- dur_dat %>% dplyr::filter(baseline_haz == basehaz)\r\n  \r\n  plot<- ggplot(dur_dat2, aes(HR, optim_dur, size = required_events)) +\r\n    geom_point(show.legend = FALSE, alpha = 0.9, colour = \"pink\") +\r\n    geom_point(data = ref_dat, aes(ref_HR, optim_dur),\r\n               alpha = 0.4, colour = \"blue\", fill = \"white\") + \r\n    guides(size = guide_legend(\"Required\\n failures\")) +\r\n    ylab(\"Total study duration (months)\") +\r\n    xlab(\"HR\") +\r\n    geom_vline(xintercept = 0.775, colour = \"green\") +\r\n    geom_hline(yintercept = 30, colour = \"green\") + \r\n    scale_y_continuous(limits = c(25, 55), breaks = seq(25, 55, by = 5)) + \r\n    theme_light() +\r\n    theme(panel.grid.minor = element_blank(),\r\n          panel.border = element_blank())\r\n  \r\n  return(plot)\r\n  \r\n}\r\n\r\nP1 <- makeplot(basehaz = 0.03)\r\nP2 <- makeplot(basehaz = 0.035)\r\nP3 <- makeplot(basehaz = 0.04)\r\nP4 <- makeplot(basehaz = 0.045)\r\nP5 <- makeplot(basehaz = 0.05)\r\nP6 <- makeplot(basehaz = 0.055)\r\nP7 <- makeplot(basehaz = 0.06)\r\nP8 <- makeplot(basehaz = 0.065)\r\nP9 <- makeplot(basehaz = 0.07)\r\n\r\n\r\nui <- fluidPage(titlePanel(h4(\"Change in total study duration (versus reference in blue) by varying of assumed HR and active comparator hazard\")),\r\n                titlePanel(h4(\"Primary Author: Federico Bonofiglio\")),\r\n                titlePanel(h5(\"Modified by: Rhys Warham\")),\r\n                titlePanel(h5(\"The size of the data points represents the number of required failures\")),\r\n                selectInput(\"basehaz\", label = h5(\"Active Comparator Hazard\"),\r\n            choices = list(\"0.030\", \"0.035\", \"0.040\", \"0.045\",\r\n                           \"0.050 (Reference Hazard)\", \"0.055\", \"0.060\",\r\n                           \"0.065\", \"0.070\")),\r\n            plotlyOutput(\"barplot\"))\r\n\r\nserver <- function(input, output){\r\n  \r\n  barplottest <- reactive({\r\n    if ( \"0.030\" %in% input$basehaz) return(P1)\r\n    if ( \"0.035\" %in% input$basehaz) return(P2)\r\n    if( \"0.040\" %in% input$basehaz) return(P3) \r\n    if ( \"0.045\" %in% input$basehaz) return(P4)\r\n    if ( \"0.050 (Reference Hazard)\" %in% input$basehaz) return(P5)\r\n    if( \"0.055\" %in% input$basehaz) return(P6) \r\n    if ( \"0.060\" %in% input$basehaz) return(P7)\r\n    if ( \"0.065\" %in% input$basehaz) return(P8)\r\n    if( \"0.070\" %in% input$basehaz) return(P9) \r\n  })\r\n  \r\n  output$barplot <- renderPlotly({   \r\n    dataplots = barplottest()\r\n    print(dataplots)\r\n  }) \r\n  \r\n}\r\n\r\nshinyApp(ui = ui, server = server)\r\n\r\n\r\n\r\nBack to blog\r\n\r\nExample 3. Linked heatmaps\r\nPlease see instructions and the GitHub repository.\r\nBack to blog\r\n\r\n\r\n\r\n",
    "preview": "posts/2022-02-09-wonderful-wednesdays-february-2022/./images/heatmaps_rlc - Agustin Calatroni.png",
    "last_modified": "2025-08-22T14:49:26+02:00",
    "input_file": {},
    "preview_width": 1100,
    "preview_height": 475
  },
  {
    "path": "posts/2022-01-16-wonderful-wednesdays-december-2021/",
    "title": "Wonderful Wednesdays December 2021",
    "description": "The challenge was to give a comprehensive visual overview of demographic data and baseline charactaristics.",
    "author": [
      {
        "name": "Abi Williams",
        "url": "https://www.psiweb.org/sigs-special-interest-groups/visualisation"
      }
    ],
    "date": "2021-12-08",
    "categories": [
      "Demographic data",
      "Baseline characteristics",
      "Alzheimer data example"
    ],
    "contents": "\r\nAlzheimer data example\r\nThe data is a ADaM data set following the CDISC standard. We will focus on the ADSL (subject level) data.\r\n\r\nExample 1. Beeswarm (Observable)\r\nhigh resolution imagehigh resolution imagehigh resolution image\r\nThe app can be found here.\r\nThe beeswarm visualisation plots individual data in a similar way to a scatterplot. However, unlike a scatterplot, the beeswarm ensures that there are no overlapping datapoints. This means that it is clearer to see how many patients have data of the same value. The visualisation provides dropdown options for selecting the values used on the x-axis and y-axis, allowing the viewer to explore different combinations of variables with ease. There are also options for filtering on the provided demographic attributes.\r\nThe panel liked the interactivity of the plot, including that the axes and title all updated when new variables were selected. The overall presentation was clean and the decision to split the plots by treatment allocation allowed for easy comparison between groups- although this may have been simpler for the viewer if the plots had been stacked (rather than side by side). The panel also discussed broader applications of this sort of visualisation and how this would perform with a larger group of patients.\r\nlink to code\r\n\r\nExample 2. Scatter Plots and Densities\r\nhigh resolution image\r\nThis entry combined scatterplots and density graphs into a single visualisation. The main part of each plot displays a scatter plot of age vs BMI, with the densities of each of these variables shown on the top and right sides respectively. The points of the scatterplot were different colours, based on the race of the patient.\r\nThe panel highlighted that this visualisation made it easy to spot any outliers in the data. It also demonstrated a clean way of presenting three variables simultaneously. Comparisons between treatment arms may be simpler if all plots were in a single row or column. The opacity of the datapoints was such that any overlapped plotting of datapoints could be observed. However, the panel discussed that care should be taken when doing this- as although the original colours chosen may be colour-blind friendly, the altered opacity may make the differentiation between colours more difficult. Suggestions were also made to include the densities separately for each race and to display reference lines or annotations for the mean or median. These changes would have to balance the trade-off between including the additional information and the clarity of the current layout- so may depend on the target audience and purpose of the visualisation.\r\nlink to code\r\n\r\nExample 3. Interactive Table / Describer package\r\n\r\nThe app can be found herehere.\r\nThe interactive describer visualisation allows the user to explore every variable included in the dataset. The details tab provides an overview of the summaries that are produced and a guide to how to navigate the data/interpret the visualisations, which summarise the data based on the type of variable (i.e. categorical or continuous).\r\nThe panel liked that the display was generalisable and could be ran on different datasets, although this does mean that that summaries of some variables are automatically included but may not be useful, such as plots of the USUBJID variable. It was discussed that the audience of the visualisation is important. In this case, the tool would be extremely useful for statisticians or programmers who want to investigate their data in depth, or to conduct data checks on interim data cuts. To improve the visualisation further, the panel recommended including treatment arm within the summaries of other variables.\r\nlink to code\r\n\r\nExample 4. Html Summaries\r\n\r\nThe html file can be found here.\r\nThis submission included bar charts for the categorical data and density plots for the continuous variables in the data. There is also a commentary pane alongside the graphs to aid interpretation.\r\nNumbers are presented on the visualisation in a clear way for both chart types without adding too much clutter. The panel discussed the possibility of adding further measures of spread to the density plots (rather than just mean), but agreed that there is a balance between adding additional information and not becoming too cluttered. Separate colours were used for each visualisation but did not add any additional information. It was suggested that colours could instead be used to indicate treatment arms. The axes on the bar chart could be flipped, which would allow for inclusion of labelling in the bars. This alteration would also make it easier to align the comments in the right pane with the visualisations themselves, which would further aid interpretation.\r\nlink to code\r\n\r\nExample 5. Boxplots\r\nhigh resolution image\r\nThis visualisation presented the data using a panel of box plots, with a separate panel for each variable. Data was also split by treatment arm with a different box for each group.\r\nThe panel praised the clean presentation of the plot, with the need for a key eliminated by using colours within the plot title itself. The graphs presented the data in a way which made it easy for the viewer to interpret and compare across treatment arms. However, the panel did highlight that it may be beneficial to rearrange the ordering of the boxes, as placebo, low dose, high dose would be a more natural ordering of treatment arms. The y-axis scales for each panel varied based on the data values for each variable, which helped to ensure plots were clear to read and not misleading.\r\nlink to code\r\nCode\r\n\r\nExample 1. Beeswarm (Observable)\r\nSee the following URL: https://observablehq.com/@irenedelatorre/beeswarm-in-plot-for-demographic-data\r\nBack to blog\r\n\r\nExample 2. Scatter Plots and Densities\r\n\r\n\r\nlibrary(haven)\r\nlibrary(dplyr)\r\nlibrary(tidyr)\r\nlibrary(ggplot2)\r\nlibrary(grid)\r\nlibrary(gridExtra)\r\nlibrary(readxl)\r\nlibrary(cowplot)\r\n\r\n# Placebo\r\n\r\nbl0 <- read_excel(\"/shared/175/arenv/arwork/gsk1278863/mid209676/present_2020_01/code/baseline/baseline.xlsx\") %>%\r\n  filter(TRT01PN == 0)\r\n\r\nbase0 <- ggplot(bl0) +\r\n  geom_jitter(aes(x=AGE, y=as.numeric(BMIBL), color=factor(RACE)),  size=4, width=0.03, height=0, alpha=0.8) +\r\n  scale_x_continuous(limits=c(50, 90), breaks=c(50, 55, 60, 65, 70, 75, 80, 85, 90)) +\r\n  scale_y_continuous(limits=c(12, 42), breaks=c(15, 20, 25, 30, 35, 40, 45)) +\r\n  scale_color_manual(\"Race\", values=c(\"#d95f02\", \"#7570b3\")) +\r\n  ylab(\"BMI at Baseline (kg/m^2)\") +\r\n  xlab(\"Age (yrs)\") +\r\n  ggtitle(\"Placebo\") +\r\n  theme_minimal() +\r\n  theme_linedraw() +\r\n  theme(text = element_text(size=12)) +\r\n  theme(legend.position = \"none\")\r\n\r\nxdens0 <- axis_canvas(base0, axis=\"x\") +\r\n  geom_density(data=bl0, aes(AGE))\r\n\r\nydens0 <- axis_canvas(base0, axis=\"y\", coord_flip = TRUE) +\r\n  geom_density(data=bl0, aes(as.numeric(BMIBL))) +\r\n                 coord_flip()\r\n               \r\np10 <- insert_xaxis_grob(base0, xdens0, position=\"top\")\r\np20 <- insert_yaxis_grob(p10, ydens0, position=\"right\")\r\n\r\n#############################################################################\r\n# Low Dose\r\n\r\nbl_lo <- read_excel(\"/shared/175/arenv/arwork/gsk1278863/mid209676/present_2020_01/code/baseline/baseline.xlsx\") %>%\r\n  filter(TRT01PN == 54)\r\n\r\nbase_lo <- ggplot(bl_lo) +\r\n  geom_jitter(aes(x=AGE, y=as.numeric(BMIBL), color=factor(RACE)),  size=4, width=0.03, height=0, alpha=0.8) +\r\n  scale_x_continuous(limits=c(50, 90), breaks=c(50, 55, 60, 65, 70, 75, 80, 85, 90)) +\r\n  scale_y_continuous(limits=c(12, 42), breaks=c(15, 20, 25, 30, 35, 40, 45)) +\r\n  scale_color_manual(\"Race\", values=c(\"#d95f02\", \"#7570b3\")) +\r\n  ylab(\"BMI at Baseline (kg/m^2)\") +\r\n  xlab(\"Age (yrs)\") +\r\n  ggtitle(\"Xanomeline Low Dose\") +\r\n  theme_minimal() +\r\n  theme_linedraw() +\r\n  theme(text = element_text(size=12)) +\r\n  theme(legend.position = \"none\")\r\n\r\nxdens_lo <- axis_canvas(base_lo, axis=\"x\") +\r\n  geom_density(data=bl_lo, aes(AGE))\r\n\r\nydens_lo <- axis_canvas(base_lo, axis=\"y\", coord_flip = TRUE) +\r\n  geom_density(data=bl_lo, aes(as.numeric(BMIBL))) +\r\n  coord_flip()\r\n\r\np1_lo <- insert_xaxis_grob(base_lo, xdens_lo, position=\"top\")\r\np2_lo <- insert_yaxis_grob(p1_lo, ydens_lo, position=\"right\")\r\n#############################################################################\r\n# High Dose\r\n\r\nbl_hi <- read_excel(\"/shared/175/arenv/arwork/gsk1278863/mid209676/present_2020_01/code/baseline/baseline.xlsx\") %>%\r\n  filter(TRT01PN == 81)\r\n\r\nbase_hi <- ggplot(bl_hi) +\r\n  geom_jitter(aes(x=AGE, y=as.numeric(BMIBL), color=factor(RACE)),  size=4, width=0.03, height=0, alpha=0.8) +\r\n  scale_x_continuous(limits=c(50, 90), breaks=c(50, 55, 60, 65, 70, 75, 80, 85, 90)) +\r\n  scale_y_continuous(limits=c(12, 42), breaks=c(15, 20, 25, 30, 35, 40, 45)) +\r\n  scale_color_manual(\"Race\", labels=c(\"AMERICAN INDIAN\", \"BLACK OR AFRICAN AMERICAN\",\"WHITE\"),values=c(\"#1b9e77\", \"#d95f02\", \"#7570b3\")) +\r\n  ylab(\"BMI at Baseline (kg/m^2)\") +\r\n  xlab(\"Age (yrs)\") +\r\n  ggtitle(\"Xanomeline High Dose\") +\r\n  theme_minimal() +\r\n  theme_linedraw() +\r\n  theme(text = element_text(size=12)) +\r\n  theme(legend.position = \"bottom\") +\r\n  theme(legend.title=element_blank())\r\n\r\nxdens_hi <- axis_canvas(base_hi, axis=\"x\") +\r\n  geom_density(data=bl_hi, aes(AGE))\r\n\r\nydens_hi <- axis_canvas(base_hi, axis=\"y\", coord_flip = TRUE) +\r\n  geom_density(data=bl_hi, aes(as.numeric(BMIBL))) +\r\n  coord_flip()\r\n\r\np1_hi <- insert_xaxis_grob(base_hi, xdens_hi, position=\"top\")\r\np2_hi <- insert_yaxis_grob(p1_hi, ydens_hi, position=\"right\")\r\n\r\n\r\n#############################################################################\r\n\r\np <- grid.arrange(arrangeGrob(p20, ncol=1, nrow=1),\r\n                  arrangeGrob(p2_lo, ncol=1, nrow=1),\r\n                  arrangeGrob(p2_hi, ncol=1, nrow=1),\r\n                  heights = c(1,1.1))\r\n\r\ntitle <- ggdraw() + draw_label(\"BMI, Age and Race are Well Balanced Between Treatment Groups. \\nParticipants Were Predominantly White.\\n\", size = 18)\r\n\r\np2 <- plot_grid(title, p, ncol=1, rel_heights = c(1, 10)) \r\n\r\nggsave(\"/shared/175/arenv/arwork/gsk1278863/mid209676/present_2020_01/code/baseline/baseline_SM.png\", p2, width=12, height=8, dpi=300)\r\n\r\n\r\n\r\nBack to blog\r\n\r\nExample 3. Interactive Table / Describer package\r\nThe rmd file can be found here.\r\nBack to blog\r\n\r\nExample 4. Html Summaries\r\nThe Rmd file can be found here\r\nBack to blog\r\n\r\nExample 5. Boxplots\r\nNo code has been submitted.\r\nBack to blog\r\n\r\n\r\n\r\n",
    "preview": "posts/2022-01-16-wonderful-wednesdays-december-2021/./images/baseline_SM - Steve Mallett.png",
    "last_modified": "2025-08-22T14:49:26+02:00",
    "input_file": {},
    "preview_width": 3600,
    "preview_height": 2400
  },
  {
    "path": "posts/2021-12-05-wonderful-wednesdays-november-2021/",
    "title": "Wonderful Wednesdays November 2021",
    "description": "Understanding clinically meaningful differences is important to get a feeling for how relevant changes are on e.g. a patient reported outcome. These are often done by understanding how changes from baseline relate to the overall impression of the physician measured by the CGI-I.",
    "author": [
      {
        "name": "Steve Mallett",
        "url": "https://www.psiweb.org/sigs-special-interest-groups/visualisation"
      }
    ],
    "date": "2021-11-10",
    "categories": [
      "CGI-I data",
      "Wonderful Wednesdays"
    ],
    "contents": "\r\nCGI-I data example\r\nThe task is to display the relationship between changes from baseline of the total score and the corresponding CGI-I to guide the understanding of clinically relevant changes and especially assess minimal clinically relevant changes.\r\n\r\nExample 1. Exploring uncertainty\r\nhigh resolution image\r\nThis graph is formed in two panels, with the left panel showing the Cumulative Distribution Function (CDF) plots of percentage change from baseline in score, grouped by the anchor measure. A measure of variability has been added to the plot, derived using bootstrapping methods. The right panel is showing 95% CIs and 95% Prediction Intervals of scores for each category.\r\nCDF plots used for comparing distributions are sometimes superimposed, so this approach may have been useful. However the confidence envelopes couldn’t then be shown simultaneously, so there’d need to be a way of interactively selecting one category at a time. Use of percentage change was discussed – absolute changes are often preferable in a scenario where clinical meaningful changes are being assessed.\r\nOverall the design of the graph was appreciated, with a clear legend and good use of colour.\r\nlink to code\r\n\r\nExample 2. Spaghetti and distribution plot\r\nhigh resolution image\r\nThe upper part of the graph is showing the distribution of the score values within each CGI-I category, using density plots of scores on an absolute scale. Distributions are shown separately for baseline and follow-up visits within each category, rather than change from baseline. Individual patient and mean changes are shown using slope plots.\r\nThe lower part of the graph shows the distribution of change from baseline values, with a measure of variability being derived using bootstrapping methods. Colour has been used to show paired mean differences outside a +/- 10 unit range.\r\nIn general, the graph contains a lot of information and takes some time to understand. However the graph tells a clear story in terms of the distribution of score across different categories, and shows clearly that the Minimally Improved category does not seem to be well differentiated from No Change category.\r\nIt was not clear why 10 used as the threshold in the lower panel; in practice we need to consider what is the clinically relevant threshold. The combination of summary level data (density plots) and with patient-level data was effective, although there’s the possibility of including more colour in the graph, e.g. colour coding positive versus negative changes in the patient-level data.\r\nlink to code\r\n\r\nExample 3. Distribution plot by category I\r\nhigh resolution image\r\nThis graph includes stacked density plots, sometimes known as a ridgeline plot. This graph type is useful where there are approximately 4-8 categories with a natural ordering, which is the case in this example. The graph is also showing patient level data as transparent dots on the X axis, and reference lines have been added. There is a lot of overplotting of the dots, so the opacity of dots is representing the data density at each value on the X-axis.\r\nA title has been added to give a clear interpretation of the overall message.\r\nlink to code\r\n\r\nExample 4. Distribution plot by category II\r\n\r\nThe html file can be found here.\r\nThe graph type here is similar to the previous graph, although with overlapping curves. The design is relatively simple compared to the previous plot, but with a stronger use of colour. The lack of unnecessary clutter is effective, although the overlap of the curves is unnecessary and could be distracting to the viewer. It would be useful to see the number of patients in each group, as this could be seen in the previous plot in term of the number of dots on the X-axis.\r\nlink to code\r\n\r\nExample 5. Dot plot\r\nhigh resolution image\r\nThis graph used a different approach, showing only the patient-level data within each category as a scatter plot, with added jittering. The trend between categories is clear, and the number of patients can be compared between groups visually. It was noted that some people find it hard to compare distributions from scatter plots, so a hybrid of scatter plot and a elements showing the distribution, e.g. boxplot or density plot, may have been useful. However the author of the graph mentioned that this graph was intended to be used at the first step of an assessment, to answer the question “is CGI a good enough measure to investigate the meaningful change threshold”, and would be followed in practice by another plot more like Example 4.\r\nThe design may be enhanced by including a Y-axis and also horizontal reference lines, and possibly use of colour to differential patients with positive versus negative change. However the purpose of the plot, i.e. to confirm that CGI-I is an appropriate measure, and has sufficient correlation, is met.\r\nlink to code\r\n\r\nExample 6. Storytelling\r\nhigh resolution image\r\nThis graph includes pairs of density plots to compare the distributions of change from baseline score for each category with the “No change” category, with the graph building in an animated fashion. Different hues (green vs red) have been used to represent improved vs worsened categories, and different colour intensities are mapped to level of improvement/worsening (light colours for minimally improved/worse and dark colours for very much improved/worse). As the animation builds, pairs of categories (e.g. Minimally Worse vs Minimally Improved) are brought into focus by colouring the relevant density plots and showing reference lines (median scores of the pairs of categories and the “No change” category). Distributions not part of the current focus are greyed, and reference lines of previously highlighted categories are not shown. Numbers of patients in each category are shown.\r\nAn improvement might have been to somehow preserve the information from the reference lines previously shown, as the animation progresses. It would also have been useful to show the actual median values for each category that are presented by the reference lines. As the animation progressed, previous reference lines could have been preserved, but in the background. Also, the colour palette may not be ideal, as the light green category is quite difficult to read.\r\nlink to code\r\nCode\r\n\r\nExample 1. Exploring uncertainty\r\n\r\n\r\n# Data and packages ----\r\nlibrary(readr)\r\nlibrary(ggplot2)\r\nlibrary(dplyr)\r\nlibrary(cowplot)\r\nlibrary(ggpubr)\r\n\r\nurlfile <- \"https://raw.githubusercontent.com/VIS-SIG/Wonderful-Wednesdays/master/data/2021/2021-10-13/WWW_example_minimal_clinical_improvement.csv\"\r\n\r\ndf <- read_csv(url(urlfile)) %>%\r\n  mutate(change=`total score follow up`-`total score baseline`,\r\n         change_pct=(`total score follow up`-`total score baseline`)*100/`total score baseline`) %>%\r\n  rename(CGI_I=`CGI-I`)\r\n\r\n# Bootstrapping ECDFs ----\r\nset.seed(1234)\r\nnboot <- 1000\r\nboot <- NULL\r\nfor (i in 1:nboot){\r\n  d <- df[sample(seq_len(nrow(df)), nrow(df), replace=T), ]\r\n  d$sim <- i\r\n  boot <- rbind(boot, d)\r\n}\r\n\r\nres1 <- boot %>%\r\n  group_by(CGI_I, sim) %>%\r\n  summarise(change_pct_median=mean(change_pct)) %>%\r\n  ungroup() %>%\r\n  group_by(CGI_I) %>%\r\n  summarise(boot_median = median(change_pct_median),\r\n            boot_lo95ci = quantile(change_pct_median, 0.025),\r\n            boot_hi95ci = quantile(change_pct_median, 0.975)) \r\nres1\r\n\r\nres2 <- boot %>%\r\n  group_by(CGI_I) %>%\r\n  summarise(boot_lo95pi = quantile(change_pct, 0.025),\r\n            boot_hi95pi = quantile(change_pct, 0.975)) \r\nres2\r\n\r\nres3 <- df %>%\r\n  group_by(CGI_I) %>%\r\n  summarise(n = n(),\r\n            mean = mean(change_pct),\r\n            sd = sd(change_pct),\r\n            lo95pi = mean - 1.96*sd,\r\n            hi95pi = mean + 1.96*sd,\r\n            lo95ci = mean - 1.96*(sd/sqrt(n)),\r\n            hi95ci = mean + 1.96*sd/sqrt(n)) \r\nres3\r\n\r\nchg <- res1 %>%\r\n  left_join(res2) %>%\r\n  left_join(res3)\r\nchg\r\n\r\nno_chg <- res1 %>%\r\n  left_join(res3) %>%\r\n  filter(CGI_I==4) %>%\r\n  select(lo95ci, hi95ci, lo95pi, hi95pi) %>%\r\n  right_join(tibble(id=1:7), by = character())\r\nno_chg\r\n\r\n# Final plot ----\r\n## CDFs\r\np1 <- ggplot() +\r\n  stat_ecdf(aes(x=change_pct, group=as.factor(sim)), data = boot, colour = alpha(\"deepskyblue4\", 0.2)) +\r\n  stat_ecdf(aes(x=change_pct), data = df, size = 1.25, color = \"orange2\") +\r\n  scale_x_continuous(limits = c(-80, 80)) +\r\n  facet_grid(rows = vars(CGI_I))+\r\n  labs(title = \"Cumulative Distribution Functions of Score % Changes\",\r\n       subtitle = \"Empirical CDF (Orange) with 1000 Bootstrap Samples (Blue)\",\r\n       y = \"Cumulative Distribution Function\",\r\n       x = \"Change %\") +\r\n  theme_minimal() +\r\n  theme(strip.text = element_blank(),\r\n        panel.grid.minor.y = element_blank(),\r\n        panel.grid.major.y = element_blank(),\r\n        plot.title = element_text(size = 18, face = \"bold\"),\r\n        plot.subtitle = element_text(size = 12)) \r\np1\r\n\r\n\r\nlabels_cgii <- as_labeller(c(`1` = \"1\\nVery Much\\nImproved\", \r\n                             `2` = \"2\\nMuch\\nImproved\",\r\n                             `3` = \"3\\nMinimally\\nImproved\", \r\n                             `4` = \"4\\nNo Change\",\r\n                             `5` = \"5\\nMinimally\\nWorse\",\r\n                             `6` = \"6\\nMuch\\nWorse\", \r\n                             `7` = \"7\\nVery Much\\nWorse\"))\r\n\r\n## Forest plot\r\np2 <- ggplot(data=chg) +\r\n  \r\n  geom_rect(data=no_chg, aes(ymin=0, ymax=1,\r\n                             xmin=lo95ci, xmax=hi95ci),\r\n            fill=\"orange2\", alpha=0.025) +\r\n  \r\n  geom_point(aes(x = boot_median, y=0.6),\r\n             size = 4, color = \"deepskyblue4\") +\r\n  geom_errorbarh(aes(xmin = boot_lo95ci, xmax = boot_hi95ci, y = 0.6), \r\n                 height = 0.1, size=1.25, color = \"deepskyblue4\") +\r\n  geom_errorbarh(aes(xmin = boot_lo95pi, xmax = boot_hi95pi, y = 0.6), \r\n                 height = 0.0, size=0.75, color = \"deepskyblue4\", linetype=\"dotted\") +\r\n  \r\n  geom_point(aes(x = mean, y = 0.4), \r\n             size = 4, color = \"orange2\") +\r\n  geom_errorbarh(aes(xmin = lo95ci, xmax = hi95ci, y = 0.4), \r\n                 height = 0.1, size=1.25, color = \"orange2\") +\r\n  geom_errorbarh(aes(xmin = lo95pi, xmax = hi95pi, y = 0.4), \r\n                 height = 0.0, size=0.75, color = \"orange2\", linetype=\"dotted\") +\r\n\r\n  facet_grid(rows = vars(CGI_I), labeller = labels_cgii)+\r\n  ylim(0, 1) +\r\n  theme_minimal() +\r\n  labs(title = \"Estimates, 95% Confidence Intervals and 95% Prediction Intervals\",\r\n       subtitle = \"Parametric (Orange) and with 1000 Bootstrap Samples (Blue)\",\r\n       x = \"Change %\", \r\n       y = \"\") +\r\n  theme(strip.text.y = element_text(size = 14, angle = 0),\r\n        axis.text.y = element_blank(),\r\n        panel.grid.major.y = element_blank(),\r\n        panel.grid.minor.y = element_blank(),\r\n        plot.title = element_text(size = 18, face = \"bold\"),\r\n        plot.subtitle = element_text(size = 12)) +\r\n  coord_cartesian(xlim = c(-50, 50), ylim=c(0,1), expand=F, clip = \"on\")\r\np2\r\n\r\n\r\n## Legend\r\ndummy1 <- chg[chg$CGI_I==4,]\r\ndummy2 <- chg[chg$CGI_I==5,]\r\n\r\ntl<-0.015 # tip.length\r\nl1 <- ggplot(data=dummy2) +\r\n  labs(title = \"Legend\") +\r\n  geom_rect(data=dummy1, aes(ymin=0, ymax=1, xmin=lo95ci, xmax=hi95ci),\r\n            fill=\"orange2\", alpha = 0.15) +  \r\n  geom_bracket(xmin=dummy1$lo95ci, xmax=dummy1$hi95ci,\r\n               y.position = 0, \r\n               label = \"95% CI - No Change\", tip.length = c(-tl, -tl)) + \r\n  geom_point(aes(x = boot_median, y=0.75), \r\n             size = 4, color = \"deepskyblue4\") +\r\n  geom_errorbarh(aes(xmin = boot_lo95ci, xmax = boot_hi95ci, y = 0.75),\r\n                 height = 0.1, size=1.25, color = \"deepskyblue4\") +\r\n  geom_errorbarh(aes(xmin = boot_lo95pi, xmax = boot_hi95pi, y = 0.75), \r\n                 height = 0.0, size=0.75, color = \"deepskyblue4\", linetype=\"dotted\") +\r\n  geom_bracket(xmin=dummy2$lo95ci, xmax=dummy2$hi95ci, y.position = 0.35,\r\n               label = \"95% Confidence Interval\", tip.length = c(tl, tl)) +\r\n  geom_bracket(xmin=dummy2$mean, xmax=dummy2$mean, y.position = 0.3,\r\n               label = \"Estimate\", tip.length = c(tl, tl)) +\r\n  geom_bracket(xmin=dummy2$lo95pi, xmax=dummy2$hi95pi, y.position = 0.15, vjust = 4,\r\n               label = \"95% Prediction Interval\", tip.length = c(-tl, -tl)) +\r\n  geom_point(aes(x = mean, y = 0.25), \r\n             size = 4, color = \"orange2\") +\r\n  geom_errorbarh(aes(xmin = lo95ci, xmax = hi95ci, y = 0.25), \r\n                 height = 0.1, size=1.25, color = \"orange2\") +\r\n  geom_errorbarh(aes(xmin = lo95pi, xmax = hi95pi, y = 0.25), \r\n                 height = 0.0, size=0.75, color = \"orange2\", linetype=\"dotted\") +\r\n  geom_bracket(xmin=dummy2$boot_lo95ci, xmax=dummy2$boot_hi95ci,\r\n               y.position = 0.85,\r\n               label = \"95% Confidence Interval (Bootstrap)\", tip.length = c(tl, tl)) +\r\n  geom_bracket(xmin=dummy2$boot_median, xmax=dummy2$boot_median,\r\n               y.position = 0.8,\r\n               label = \"Estimate (Bootstrap)\", tip.length = c(tl, tl)) +\r\n  geom_bracket(xmin=dummy2$boot_lo95pi, xmax=dummy2$boot_hi95pi, \r\n               y.position = 0.65, vjust = 4,\r\n               label = \"95% Prediction Interval (Bootstrap)\", tip.length = c(-tl, -tl)) + \r\n  coord_cartesian(xlim = c(-30, 50), ylim=c(0,1)) +\r\n  theme_void() +\r\n  theme(plot.title = element_text(size = 18, face = \"bold\"),\r\n        plot.subtitle = element_text(size = 12))\r\nl1\r\n\r\npnull <- ggplot() +\r\n  coord_cartesian(xlim = c(-30, 50), ylim=c(0,1)) +\r\n  theme_void()\r\n  \r\nlegend <- plot_grid(l1, pnull, ncol=1,\r\n                    rel_heights = c(0.5, 0.5))\r\n\r\n## Title\r\ntitle <- ggdraw() + \r\n  draw_label(\r\n    \"Exploring uncertainty of minimally clinically relevant changes\",\r\n    fontface = 'bold', size = 36,\r\n    x = 0,\r\n    hjust = 0\r\n  ) +\r\n  theme(\r\n    plot.margin = margin(0, 0, 0, 7)\r\n  )\r\ntitle\r\n\r\nplot_row <- plot_grid(p1, p2, pnull , legend, nrow=1, rel_widths = c(3, 3, 0.25, 1.25))\r\ng2 <- plot_grid(title, plot_row, ncol = 1, rel_heights = c(0.1, 1))\r\ng2\r\nf<-1.7\r\nggsave(file=\"plot_par_nonpar.pdf\", g2, width = 16*f, height = 9*f)\r\n\r\n\r\n\r\nBack to blog\r\n\r\nExample 2. Spaghetti and distribution plot\r\n\r\n\r\n# PACKAGES\r\npacman::p_load(tidyverse, rio)\r\npacman::p_load(dabestr)\r\npacman::p_load(ggdist, patchwork)\r\npacman::p_load(ggpp, ggtext)\r\n\r\n# IMPORT\r\nd1 <- import(\"https://raw.githubusercontent.com/VIS-SIG/Wonderful-Wednesdays/master/data/2021/2021-10-13/WWW_example_minimal_clinical_improvement.csv\") %>% \r\n   mutate(id = row_number(), .before = everything()) %>% \r\n   janitor::clean_names()\r\n\r\n# EXPORT\r\nd1 %>% export(\"C:/R/Wonderful-Wednesdays/2021-10-13/ww_mci.csv\")\r\n\r\n# RESHAPE & CALC\r\nd2 <- d1 %>% \r\n   pivot_longer(cols = c(total_score_baseline, total_score_follow_up)) %>% \r\n   mutate(time = ifelse(name == \"total_score_baseline\",\"B\",\"F\"),\r\n          cgi_f = factor(cgi_i, labels = c('Very much improved [1]',\r\n                                           'Much improved [2]',\r\n                                           'Minimally improved [3]',\r\n                                           'No change [4]',\r\n                                           'Minimally worse [5]',\r\n                                           'Much worse [6]',\r\n                                           'Very much worse [7]'))) %>% \r\n   select(id, cgi_i, cgi_f, time, value) %>% \r\n   nest_by(cgi_i, cgi_f) %>% \r\n   mutate(dabest   = list(dabest(data, \r\n                                 time, value,\r\n                                 idx = c(\"B\",\"F\"),\r\n                                 paired = TRUE, id.col = id) )) %>% \r\n   mutate(mean_diff = list( mean_diff(dabest) ) ) \r\n\r\n# EXTRACT\r\nd3 <- d2 %>% \r\n   select(cgi_i, cgi_f, mean_diff) %>% \r\n   mutate(change = mean_diff$data %>% list(),\r\n          boot   = mean_diff$result$bootstraps) %>% \r\n   select(-mean_diff) \r\n\r\n# N's and nested graphs\r\nn <- d2 %>% \r\n   mutate(n = nrow(data)/2) %>%\r\n   select(cgi_i, cgi_f, n) %>%\r\n   ungroup() %>%\r\n   mutate(n_sum = cumsum(n))\r\n\r\ngg_p <- function(i){\r\n   \r\n   cols         <- as.vector(rep('gray90',7))\r\n   cols[i]      <- 'gray25'\r\n   \r\n   ggplot(data = n,\r\n          aes(x = n, y = '1', fill = fct_rev(cgi_f)   ) ) +\r\n      geom_bar(stat = 'identity') +\r\n      geom_label(data = n %>% slice(i),\r\n                 aes(   x = n_sum,\r\n                        y = '1',\r\n                        label = n),\r\n                 nudge_y = 0.40,\r\n                 size = 3, fill = 'white', \r\n                 label.padding = unit(0.10, \"lines\"), label.size = 0.0) +\r\n      scale_fill_manual(values = rev(cols)) +\r\n      guides(fill = 'none') +\r\n      theme_void() \r\n}\r\n\r\nn <- n %>%\r\n   rowwise() %>%\r\n   mutate(gg = list( gg_p(cgi_i))) \r\n\r\n# CHANGE\r\nchange <- d3 %>% \r\n   select(cgi_i, cgi_f, change) %>% \r\n   unnest(c(change))\r\n\r\nf1 <- ggplot(data = change,\r\n             aes(x = time, y = value, group = id)) +\r\n   geom_plot_npc(data = n,\r\n                 vp.width = 0.95, vp.height = 0.08,\r\n                 aes(npcx = 0.01, npcy = 0.99,  label = gg)) +\r\n   geom_line(col = 'gray25', alpha = 0.5, size = 0.5) +\r\n   stat_summary(aes(group = 1), \r\n                fun = mean, colour = 'black', geom='line', size = 1,\r\n                position = position_nudge(x = c(-0.05, 0.05))) +\r\n   stat_halfeye(data = . %>% filter(time == \"B\"),\r\n                aes(group = 1),\r\n                point_interval = mean_qi,\r\n                side = 'left',\r\n                justification = 1.1,\r\n                adjust = 0.95,\r\n                position = position_nudge(x = -0.1)) +\r\n   stat_halfeye(data = . %>% filter(time == \"F\"),\r\n                aes(group = 1),\r\n                point_interval = mean_qi,\r\n                side = 'right',\r\n                justification = -0.1,\r\n                adjust = 0.95,\r\n                position = position_nudge(x = 0.1)) +\r\n   scale_y_continuous(name = 'Better <----- Total Score -----> Worst',\r\n                      expand = c(0,0),\r\n                      limits = c(12, 80),\r\n                      sec.axis = sec_axis(~., name = '')) +\r\n   scale_x_discrete(name = '',\r\n                    expand = c(0.05, 0.05),\r\n                    labels = c(\"Baseline         \", \"         Follow-up\")) +\r\n   facet_wrap(.~cgi_f, ncol = 7) +\r\n   theme_bw() +\r\n   theme(panel.grid.minor = element_blank(),\r\n         panel.spacing    = unit(0, \"lines\"),\r\n         plot.margin      = margin(b = 0))\r\n\r\n# BOOSTRAP\r\nboot <- d3 %>% \r\n   select(cgi_i, cgi_f, boot) %>% \r\n   unnest(c(boot))\r\n\r\nm <- boot %>%\r\n   group_by(cgi_f) %>%\r\n   summarise(m = mean(boot) %>% round(1))\r\n\r\nf2 <- ggplot(data = boot,\r\n             aes(y = boot, x = 'Ch', fill = stat(abs(y) > 10) ) ) +\r\n   stat_halfeye(point_interval = mean_qi,\r\n                side = 'right',\r\n                justification = -0.05,\r\n                adjust = 0.8,\r\n                position = position_nudge(x = 0.05)) +\r\n   geom_hline(yintercept  = c(-10, 10),\r\n              color = 'gray75') +\r\n   geom_hline(yintercept = 0,\r\n              color = 'gray50') +\r\n   scale_fill_manual(values = c(\"gray80\", \"skyblue\")) +\r\n   scale_y_continuous(name = 'Paired Mean Difference \\n (5K Bootstrap)',\r\n                      limits = c(-20, 20),\r\n                      expand = c(0, 0),\r\n                      sec.axis = sec_axis(~., name = '')) +\r\n   scale_x_discrete(name = '',\r\n                    expand = c(0.15, 0),\r\n                    labels = \"F minus B\") +\r\n   facet_wrap(.~cgi_f, ncol = 7) +\r\n   geom_text(data = m,\r\n             aes(x = 'Ch', y = m, label = m),\r\n             size = 3, nudge_x = 0.2\r\n   ) +\r\n   theme_bw() +\r\n   theme(panel.grid.minor   = element_blank(),\r\n         panel.grid.major.x = element_blank(),\r\n         panel.spacing      = unit(0, \"lines\"),\r\n         plot.margin        = margin(t = 0, b = 0), \r\n         strip.text         = element_blank()) +\r\n   guides(fill = 'none')\r\n\r\nf1/f2 +\r\n   plot_layout(heights = c(1.5,1)) +\r\n   plot_annotation(\r\n      title   = \r\n      \"<b>Baseline, Follow-up and Change assessment of the total score by Clinical Assessment of Improvement (CGI-I)<\/b> \r\n      <br>\r\n      <span style = 'font-size:10pt'><b>Top panel<\/b> gray lines represent a participant score, while \r\n      the slab and point interval (mean, 95% and 99% CI) characterize the marginal observations with \r\n      top annotations for the total number of pairs. \r\n      <br>\r\n      <b>Bottom panel<\/b> paired mean Change derived though nonparametric bootstrap resampling, mean difference \r\n      <span>&#177;<\/span> than 10 are <b><span style = 'color:skyblue;'>color-coded<\/span><\/b>.\r\n     <\/span>\",\r\n     theme = theme(\r\n        plot.title = element_textbox_simple(\r\n           size = 13,\r\n           lineheight = 1,\r\n           r = unit(5, \"pt\"),\r\n           padding = margin(4, 4, 4, 4),\r\n           margin  = margin(1, 20, 5, 1),\r\n           fill = \"gray90\"\r\n        )\r\n     )\r\n   )\r\n\r\nggsave(\"C:/R/Wonderful-Wednesdays/2021-10-13/ww_mci.png\",\r\n       dpi = 600,\r\n       width = 14,\r\n       height = 7)\r\n\r\n\r\n\r\nBack to blog\r\n\r\nExample 3. Distribution plot by category I\r\n\r\n\r\nWW_data <- read.csv(\"WWW_example_minimal_clinical_improvement_stats.csv\")\r\n\r\nlibrary(tidyverse)\r\nlibrary(ggplot2)\r\nlibrary(ggridges)\r\nlibrary(dplyr)\r\nlibrary(gt)\r\nlibrary(psych)\r\n\r\n#####\r\n#1 - calculate SEM \r\n#The Standard Error of Measurement (SEM) quantifies \r\n#the precision of the individual measurements \r\n#and gives an indication of the absolute reliability\r\n\r\n#2 - calculate SDC\r\n#The SEM can be used to calculate the Minimal Detectable Change (MDC)\r\n#which is the minimal amount of change that a measurement \r\n#must show to be greater than the within subject variability\r\n#and measurement error, also referred to as the sensitivity to change\r\n\r\npre_post <- WW_data[,c(1:2)]\r\nsd_baseline <- sd(WW_data$total.score.baseline, na.rm = T)\r\n\r\nicc <- ICC(pre_post)#0.032 - reliability for SEM\r\n\r\nsem_baseline <- psychometric::SE.Meas(sd_baseline, 0.032)\r\n\r\n#Smallest detectable change(SDC)/Minimal detectable change (MDC)\r\n#SEM*1.92*sqrt(2)\r\nsdc <- sem_baseline*1.96*sqrt(2)\r\nsdc_comp <- sdc*-1\r\n\r\nWW_data <- rename(WW_data, baseline = total.score.baseline, followup = total.score.follow.up, CGI = CGI.I)\r\nWW_data <- within(WW_data, CHG <- followup-baseline)\r\nWW_data <- within(WW_data, {\r\n            CGI_cat <- NA\r\n            CGI_cat[CGI==1] <- \"Very much improved\"\r\n            CGI_cat[CGI==2] <- \"Much improved\"\r\n            CGI_cat[CGI==3] <- \"Minimally improved\"\r\n            CGI_cat[CGI==4] <- \"No change\"\r\n            CGI_cat[CGI==5] <- \"Minimally worse\"\r\n            CGI_cat[CGI==6] <- \"Much worse\"\r\n            CGI_cat[CGI==7] <- \"Very much worse\"\r\n            })\r\n\r\nWW_data <- WW_data <- WW_data %>% \r\n  filter(!is.na(CGI_cat))\r\n\r\nWW_data$CGI_cat <- factor(WW_data$CGI_cat, levels = c(\"Very much improved\",\r\n                                   \"Much improved\",\r\n                                   \"Minimally improved\",\r\n                                   \"No change\",\r\n                                   \"Minimally worse\",\r\n                                   \"Much worse\",\r\n                                   \"Very much worse\"\r\n                                   ))\r\n\r\ngg <- ggplot(WW_data, aes(x = CHG, \r\n                    y = CGI_cat)) +\r\n  stat_density_ridges(\r\n    geom = \"density_ridges_gradient\",\r\n    quantile_lines = TRUE,\r\n    quantiles = 2, scale = 1, rel_min_height = 0.01,\r\n    jittered_points = TRUE) +\r\n  scale_x_continuous(breaks=seq(-40,40,10),\r\n                     limits = c(-40,40)) +\r\n  ylab(\"CGI-I Response\") + xlab(\"Change in PRO Score\") +\r\n  labs(title = \"Minimally Improved & Minimally Worse CGI-I Categories\\nAre Not Differentiated From No change\",\r\n       subtitle = \"Smoothed Distributions with Individual Patients (dots) and Means (|) \\nReference Lines Display Smallest Detectable Change of PRO Score\",\r\n       caption = \"Smallest Detectable Change defined by Standard Error of Measurement of PRO Score at Baseline\") +\r\n  theme(\r\n    plot.title = element_text(color = \"black\", size = 15),\r\n    plot.subtitle = element_text(color = \"black\", size = 10),\r\n    plot.caption = element_text(color = \"black\", size = 8)\r\n  )\r\n\r\n#theme_ridges(font_size = 12)\r\n\r\n#Build ggplot and extract data\r\nd <- ggplot_build(gg)$data[[1]]\r\n\r\n# Add geom_ribbon for shaded area\r\nrcc <- gg +\r\n  geom_ribbon(\r\n    data = transform(subset(d, x >= sdc), CGI_cat = group),\r\n    aes(x, ymin = ymin, ymax = ymax, group = group),\r\n    fill = \"red\",\r\n    alpha = 0.2, \r\n    show.legend = TRUE) +\r\n  geom_ribbon(\r\n    data = transform(subset(d, x <= sdc_comp), CGI_cat = group),\r\n    aes(x, ymin = ymin, ymax = ymax, group = group),\r\n    fill = \"green\",\r\n    alpha = 0.2,\r\n    show.legend = TRUE) +\r\n  geom_vline(xintercept =sdc, linetype=\"dashed\") +\r\n  geom_vline(xintercept =sdc_comp, linetype=\"dashed\")+\r\n  annotate(\"segment\", x = -15, xend = -35, y = 0.7, yend = 0.7, colour = \"black\", size=0.5, arrow=arrow(length = unit(0.03, \"npc\"))) +\r\n  annotate(\"segment\", x = 15, xend = 35, y = 0.7, yend = 0.7, colour = \"black\", size=0.5, arrow=arrow(length = unit(0.03, \"npc\"))) +\r\n  geom_text(aes(x = -30, y = 0.45, label = \"Improvement\"), \r\n             hjust = 0, \r\n             vjust = 0,\r\n             colour = \"black\", \r\n             size = 2.5) +\r\n  geom_text(aes(x = 20, y = 0.45, label = \"Deterioration\"), \r\n            hjust = 0, \r\n            vjust = 0,\r\n            colour = \"black\", \r\n            size = 2.5) + \r\n  ylab(\"CGI-I Response\") + xlab(\"Change in PRO Score\")\r\n  \r\n  \r\nggsave(\"reliable_clinical_change_plot_red_green_v0_2.png\", plot = rcc, device = png)\r\n\r\n\r\n\r\nBack to blog\r\n\r\nExample 4. Distribution plot by category II\r\n\r\n\r\n#### MCT PLOT\r\n\r\n#FIND LOWER TAIL OF THE \"NO CHANGE GROUP\"\r\n\r\ndat_tail <- dat %>%\r\n  filter(CGI == 4) %>%\r\n  summarise(quantile = scales::percent(c(0.025)),\r\n           value = quantile(CHANGE, c(0.025)))\r\n\r\nglimpse(dat_tail)\r\n\r\ntext_grob <- textGrob(paste(round(dat_tail$value,1)), gp=gpar(fontsize=16, col = Green100)) #Needed to draw on axis \r\n\r\n\r\nridge <- ggplot(dat, aes(x = CHANGE, y = CGI, fill =  ifelse(..x..< dat_tail$value, \"lower\", \"rest\"))) +\r\n  stat_density_ridges(geom = \"density_ridges_gradient\",quantiles = c(0.025)) +\r\n  scale_fill_manual(\r\n  values = c(Green100a, Purple100a),\r\n  ) +\r\n  ggtitle(paste(\"A threshold of \",round(dat_tail$value),\" may be an appropriate patient-level improvement threshold\" ), subtitle = 'Derived using the value of the lower tail of the \"No change\" Group')+      \r\n  labs(x=\"PRO Change Score from Baseline\")+\r\n  scale_x_continuous(breaks=-40:+40*20) +         # SET TICK EVERY 10\r\n  scale_y_discrete(labels=c(\"Very much improved - 1\", \"2\", \"3\",\"No change - 4\", \"5\", \"6\",\"Very much worse - 7\")) +\r\n  theme(panel.background = element_blank(), axis.line = element_blank(),\r\n        axis.text=element_text(size=16),\r\n        axis.title=element_text(size=16),\r\n        legend.text=element_text(size=16),\r\n        legend.title=element_text(size=16),\r\n        legend.position = \"none\",\r\n        plot.title = element_text(size=22, face=\"bold\"),\r\n        plot.subtitle = element_text(size=16, face=\"bold\")) +\r\n  annotate(\"segment\", x=dat_tail$value, xend=dat_tail$value, y=4, yend = 0, colour = \"black\", linetype = \"dashed\") +\r\n  annotation_custom(text_grob, xmin=dat_tail$value,xmax=dat_tail$value,ymin=-0.27,ymax=-0.27) +\r\n  coord_cartesian(clip = \"off\")\r\n    \r\n\r\nridge\r\n\r\n\r\n\r\nBack to blog\r\n\r\nExample 5. Dot plot\r\n\r\n\r\nlibrary(tidyverse)\r\nif(!require(polycor)){\r\n  install.packages(\"polycor\")\r\n  library(polycor)\r\n}\r\n\r\nif(!require(ggridges)){\r\n  install.packages(\"ggridges\")\r\n  library(ggridges)\r\n}\r\n\r\n\r\nif(!require(grid)){\r\n  install.packages(\"grid\")\r\n  library(grid)\r\n}\r\n\r\n#Clear environment\r\nrm(list=ls())\r\n\r\n\r\n#Colour scheme\r\nTurquoise100 <- \"#00a3e0\"\r\nTurquoise75 <- \"#40bae8\"\r\nTurquoise50 <- \"#7fd1ef\"\r\nTurquoise25 <- \"#bfe8f7\"\r\nBlue100 <- \"#005587\"\r\nBlue50 <- \"#7FAAC3\"\r\nGreen100 <- \"#43b02a\"\r\nGreen100a <- rgb(67, 176, 42, alpha = 0.5 * 255, maxColorValue = 255)\r\nGreen50 <- \"#a1d794\"\r\nPurple100 <-\"#830065\"\r\nPurple100a <- rgb(131, 0, 101, alpha = 0.5 * 255, maxColorValue = 255)\r\nPurple50 <- \"#c17fb2\"\r\n\r\n#Set data and results areas up\r\nsourcedata <- \"C:/Users/phili/Documents/WonWed/MCT/sourcedata/\"\r\noutputdata <-\"C:/Users/phili/Documents/WonWed/MCT/outputdata/\"\r\ntables <- \"C:/Users/phili/Documents/WonWed/MCT/tables/\"\r\nfigures <- \"C:/Users/phili/Documents/WonWed/MCT/figures/\"\r\n\r\nsetwd(sourcedata)\r\ndat <- read_csv(\"WWW_example_minimal_clinical_improvement.csv\")\r\n\r\nglimpse(dat)\r\n\r\ndat$USUBJID <- c(1:nrow(dat)) #MAKE A NEW SUBJECT ID COLUMN\r\n\r\ndat <- dat %>%\r\n  rename(\"Time1\" = `total score baseline`, \"Time2\" = `total score follow up`, \"CGI\" =`CGI-I`) %>% #RENAME COLUMNS\r\n  mutate(CHANGE = Time2 - Time1) # MAKE CHANGE SCORES. NEGATIVE SCORE IS IMPROVEMENT\r\ndat$CGI <- as.factor(dat$CGI)  \r\n  \r\ncorr <- round(polyserial(dat$CHANGE, dat$CGI),3)\r\n\r\n#CREATE A PLOT SHOWING TH CORRELATION BETWEEN THE ANCHOR AND PRO MEASURE\r\np <- ggplot(dat, aes(x=CGI, y=CHANGE)) +\r\n  geom_jitter(width = 0.15, height = 0.5,alpha = 0.6) + \r\n  ggtitle(\"The CGI-I is Appropriate for Meaningful Change Derivation\", subtitle = \"A correlation between an anchor and a COA change score of >0.37 is recommended\")+      \r\n  labs(x=\"CGI-I Score at Time 2\", y = \"COA Change Score from Baseline\")+\r\n  scale_y_continuous(breaks=-40:+40*10) +         # SET TICK EVERY 10\r\n  scale_x_discrete(labels=c(\"1\\nVery much improved\", \"2\", \"3\",\"4\\nNo change\", \"5\", \"6\",\"7\\nVery much worse\")) +\r\n  theme(panel.background = element_blank(), axis.line = element_blank(),\r\n        axis.text=element_text(size=16),\r\n        axis.title=element_text(size=16),\r\n        legend.text=element_text(size=16),\r\n        legend.title=element_text(size=16),\r\n        plot.title = element_text(size=22, face=\"bold\"),\r\n        plot.subtitle = element_text(size=16, face=\"bold\")) +\r\n  annotate(\"text\", x=6, y=-35, label=paste(\"polyserial correlation = \", corr), size=4, hjust=0)\r\np\r\n\r\n\r\n\r\nBack to blog\r\n\r\nExample 6. Storytelling\r\nNo code available.\r\n\r\nBack to blog\r\n\r\n\r\n\r\n",
    "preview": "posts/2021-12-05-wonderful-wednesdays-november-2021/./images/plot_par_nonpar - Paolo Eusebi.png",
    "last_modified": "2025-08-22T14:49:26+02:00",
    "input_file": {},
    "preview_width": 1920,
    "preview_height": 1080
  },
  {
    "path": "posts/2021-11-06-wonderful-wednesdays-october-2021/",
    "title": "Wonderful Wednesdays October 2021",
    "description": "The goal was to find a way to visualize the impact of different risk factors (comorbidities and symptoms at admission to hospital) on the risk of death considering the competing risk of recovery.",
    "author": [
      {
        "name": "PSI VIS SIG",
        "url": "https://www.psiweb.org/sigs-special-interest-groups/visualisation"
      }
    ],
    "date": "2021-10-13",
    "categories": [
      "Competing risk",
      "Wonderful Wednesdays"
    ],
    "contents": "\r\nCompeting risk example data set\r\nObservational, multicenter cohort study, in adult patients with PCR-confirmed infection with SARS-CoV-2, who were admitted to one of five collaborating hospitals in the region of Gelderland and North-Brabant (NL) for at least 24 hours between March and May 2020.\r\nRecovery is considered a competing risk for mortality and is taken into account as an extra outcome.\r\nCumulative incidence curves were presented side by side for different characteristics.\r\nThe goal was to find a way to visualize the impact of different risk factors (comorbidities and symptoms at admission to hospital) on the risk of death considering the competing risk of recovery.\r\n\r\nExample 1. Interactive app\r\n\r\nThe app can be found here\r\n(A summary of the discussion will be added shortly.)\r\nlink to code\r\nCode\r\n\r\nExample 1. \r\nThe code can be found here.\r\nThe R Markdown file can be found here.\r\nBack to blog\r\n\r\n\r\n\r\n",
    "preview": "posts/2021-11-06-wonderful-wednesdays-october-2021/./images/nijman_tables_flx - Agustin Calatroni.png",
    "last_modified": "2025-08-22T14:49:26+02:00",
    "input_file": {},
    "preview_width": 1920,
    "preview_height": 1080
  },
  {
    "path": "posts/2021-09-03-scientific-meeting/",
    "title": "PSI Scientific Meeting",
    "description": "PSI Scientific Meeting: Generating Insights through Modern Applications of Data Visualisation.\nFind more information and sign up here: https://psiweb.org/events/event-item/2021/09/17/default-calendar/psi-scientific-meeting-generating-insights-through-modern-applications-of-data-visualisation",
    "author": [
      {
        "name": "PSI VIS SIG",
        "url": "https://www.psiweb.org/sigs-special-interest-groups/visualisation"
      }
    ],
    "date": "2021-09-17",
    "categories": [],
    "contents": "\r\nMembers of the PSI Visualisation SIG are hosting The PSI Scientific Meeting: Generating Insights through Modern Applications of Data Visualisation. It is a two-day workshop where you can gain new insights into advanced data visualisations. Speakers are Susan Mayo (FDA), Jeremy Wildfire (Gilead), Sheila Dickinson (Novartis), Matthias Trampisch (Boehringer Ingelheim), Patrick Schloemer (Bayer), Charlotta Fruechtenicht (Roche), and Alexander Schacht (Veramed). We are looking forward to seeing you there. Sign up here.\r\nIf you need technical support or want to meet other participants, visit the wonder room during or after the meeting.\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2025-08-22T14:49:25+02:00",
    "input_file": {}
  },
  {
    "path": "posts/2021-09-06-wonderful-wednesdays-september-2021/",
    "title": "Wonderful Wednesdays September 2021",
    "description": "The goal of the challenge is to produce explanatory graphics - Visually demonstrate that there is a dose response in glycemic control for Rx (the higher the dose the lower the variability) and that the Rx med and Rx high demonstrate better glycemic control that SOC and these attributes are sustained.",
    "author": [
      {
        "name": "Lorenz Uhlmann",
        "url": "https://www.psiweb.org/sigs-special-interest-groups/visualisation"
      }
    ],
    "date": "2021-09-08",
    "categories": [
      "CGM",
      "Continuous variable",
      "Wonderful Wednesdays"
    ],
    "contents": "\r\nContinuous Glucose Monitoring (CGM) data\r\nDiabetes affects over 463 million people worldwide. Diabetes is a vascular disease that can lead to amputations, blindness, kidney failure and death. Managing patients’ glucose levels is key to managing their disease.\r\nThe CGM data allows us to approximate glucose levels every 5 minutes continuously throughout the day. Glucose values with low variability and within clinically relevant ranges of 72 and 140 mg/dL are considered to indicate good glycemic control. More information can be found here.\r\n\r\nExample 1. Bar plot\r\nhigh resolution image\r\nIn this bar plot, the relatively complex data set is boiled down to a very simple visualization. The relative amount of time is plotted against time and treatment group.\r\nThe panel liked its simplicity and that clutter has been avoided. Furthermore, the coloring is chosen in a sensible way. Grey is used for SOC whereas different shades of green are used for the Rx treatments using increasing intensities with higher dose levels. The horizontal lines and the y-axis tick marks could have been removed to make it even less cluttered, because the percentage is shown in each bar.\r\nlink to code\r\n\r\nExample 2. Dashboard Trelliscope\r\n\r\nThe app can be found here\r\nThis is a lot more than just a visualization. It is a very comprehensive tool to do an exhaustive exploratory analysis of the data.\r\nIn the first tab (“AGP”), we see individual patient data including individual profile plots over time. This is very helpful if you want to focus on specific patients. The level of information increases from top to bottom. In the first row, we see a summary over all data for this patient. The next row shows a summary over all days. And the last rows provides the user with individual patient profile plots.\r\nIn the second tab (“MODEL RESULTS”), we see a visualization of model results to detect clusters in the CGM values. The goal was to detect differences between clusters in regards to the time spent in the standardized glycemic ranges. The visualization helps the user to easily understand the results.\r\nThe last tab (“OTHER METRICS”) follows a similar idea as the second tab. The clustering can be done based on other variables in a flexible way. This makes this a very powerful tool with many options.\r\nThe whole tool comes with a lot of explanations and with clickable references.\r\nThe panel thinks that this is a great and very powerful app to do a thorough exploratory data analysis.\r\nlink to code\r\n\r\nExample 3. Patient profiles with quantiles\r\n\r\nhigh resolution image.\r\nThis visualization shows quantiles of profile plots at week 52 for the different treatment groups. The message becomes very obvious and it is also stated in the title: Increasing dose leads to improved glucose stability at week 52.\r\nThe quantiles are color-coded and the grid line helps to understand the results. It marks the upper limit of good glycemic control. Furthermore, the order of the treatment groups is sensibly chosen (going from top left to bottom right means going from SOC to the highest dose).\r\nlink to code\r\n\r\nExample 4. Averaged patient profiles\r\n\r\nhigh resolution image\r\nIn this visualization, we see the averaged profile plots for the different treatment groups. It is a very clean visualization and the message becomes quite obvious.\r\nThe panel thought that the coloring could be improved (for example, by using the same color but with increasing intensity for the Rx arms with increasing dose levels). Furthermore, it might be better to re-organize the plots: The time points could be next to each other and the groups on top of each other.\r\nA very good idea is the x-axis labeling. Even without a label it becomes clear right away that it is the time that is displayed because of the format that is being used.\r\nlink to code\r\n\r\nExample 5. Profile plots with overlays\r\nhigh resolution image\r\nThis visualization follows a similar idea as the one above. Furthermore, the same ordering of the plots is used and, therefore, the same comment about re-ordering them might apply. Another thing that could be improved is the order of the treatment arms (going from SOC to low - medium - high dose) and the coloring of the arms with increased intensity of the color for increased levels of dosing. (Grey is wisely chosen for SOC.)\r\nThe overlays make it easy to compare the different groups which is a very nice idea of visualizing this type of data.\r\nlink to code\r\nExample 6. Variability plot\r\nhigh resolution image\r\nIn this plot, the variability (represented by the standard deviation) is plotted over time and by treatment group. This is a very good idea to present the stability of the values.\r\nThe title is very nicely done. The first line provides already a very clear message. The second line uses a smaller font size and provides additional information. This plot is very clear and easy to read. Only the coloring could be chosen in a different way as already discussed above.\r\nlink to code\r\nExample 7. Colab notebook\r\n\r\nPlease find the notebook here.\r\nlink to code\r\nCode\r\n\r\nExample 1. \r\n\r\n\r\n# Barplot by treatment and time:\r\n# Frequency of values per patient within the range of 72 and 140 mg/dL:\r\n\r\n# Read in data:\r\ndat <- read.csv(\"simulated_data.csv\", sep = \",\", dec = \".\")\r\n\r\n# Create function to calculate the percentage per patient:\r\nnum.f <- function(x) length(which(x >= 72 & x <= 140)) / length(x)\r\n\r\n# Calculate mean values:\r\nres <- aggregate(dat$Simulated_CGMValue, list(dat$SUBJID, dat$TREATMENT, dat$VISITNUM), num.f)\r\nres <- aggregate(res$x, list(res$Group.2, res$Group.3), mean)\r\n\r\n# Prepare the results to be plotted:\r\nnames(res) <- c(\"TREATMENT\", \"VISITNUM\", \"Value\")\r\nres$VISITNUM <- factor(res$VISITNUM, levels = c(3, 17, 21), labels = c(\"baseline\", \"26 weeks\", \"52 weeks\"))\r\nres$TREATMENT <- factor(res$TREATMENT, ordered = T,\r\n                        levels = c(\"SOC\", \"Rx low\", \"Rx medium\", \"Rx high\"))\r\nres$Value <- res$Value*100\r\nres$val.t <- format(round(res$Value, 1), nsmall = 1)\r\n\r\n# Create the plot:\r\nlibrary(ggplot2)\r\nlibrary(RColorBrewer)\r\nggplot(res, aes(y=Value, x=VISITNUM, fill=TREATMENT)) + \r\n  geom_bar(position=\"dodge\", stat=\"identity\") +\r\n  ylab(\"Time under good glycemic control (%)\") + xlab (\"Study visit number\") +\r\n  theme_minimal() + #scale_fill_brewer(palette=\"Set1\")\r\n  scale_fill_manual(breaks = c(\"SOC\", \"Rx low\", \"Rx medium\", \"Rx high\"),\r\n                    values = c(\"lightgrey\", brewer.pal(n = 3, name = \"Greens\"))) +\r\n  geom_text(aes(label=val.t), vjust = 1.5, size = 4, position = position_dodge(.9)) +\r\n  ggtitle(\"The relative amount of time (averaged over all patients) under good glycemic control\r\n(in the range of 72 and 140 mg/dL) was the highest in the medium and high dose.\")\r\nggsave(\"barplot.png\")\r\n\r\n\r\n\r\nBack to blog\r\n\r\nExample 2. Dashboard Trelliscope\r\nThe Rmd file can be found here and here.\r\nThe full code can be found here.\r\nBack to blog\r\n\r\nExample 3. Patient profiles with quantiles\r\n\r\n\r\n####################################################################\r\n# Program name: hgb_quantiles_f.R\r\n# Purpose: To produce plot summarising spread of Hgb values at each\r\n#         visit (for Wonderful Wednesdays July 2020)\r\n# Written by: Steve Mallett\r\n# Date: 12-Jun-2020\r\n####################################################################\r\n\r\nlibrary(haven)\r\nlibrary(dplyr)\r\nlibrary(tidyr)\r\nlibrary(ggplot2)\r\nlibrary(grid)\r\nlibrary(gridExtra)\r\n\r\ncgm0 <- read_sas(\"/shared/175/arenv/arwork/gsk1278863/mid209676/present_2020_01/code/CGM/cgm_data2.sas7bdat\") %>%\r\n  filter(trtcd == 0 & VISITNUM == 21)\r\n\r\nquant <- cgm0 %>% group_by(CGMTIME) %>%\r\n  do(quant = quantile(.$aval, probs = seq(0.2,0.8,.05)), probs = seq(0.2,0.8,.05)) %>%\r\n  unnest(cols=c(quant, probs)) %>%\r\n  mutate(delta = 2*round(abs(.5-probs)*100)) %>% \r\n  group_by(CGMTIME, delta) %>%\r\n  summarize(quantmin = min(quant), quantmax= max(quant)) %>%\r\n  mutate(hour = (CGMTIME/3600)) %>%\r\n  filter(delta != 0)\r\n\r\n# Produce plot for Placebo\r\n\r\nplot0 <- ggplot() +\r\n  geom_ribbon(data = quant, aes(x = hour, ymin = quantmin, ymax = quantmax,\r\n                                    group = reorder(delta, -delta), fill = as.numeric(delta)),\r\n              alpha = .5) +\r\n  geom_segment(aes(x=1, xend=24, y=180, yend=180), linetype = 2, color = \"blue\") +\r\n scale_x_continuous(\" \",\r\n                    breaks=c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24),\r\n                    limits=c(1, 24)) +\r\n scale_y_continuous(\"Glucose (mg/dL)\",\r\n                   breaks=c(100, 150, 200),\r\n                   limits=c(100, 200),\r\n                   ) +\r\n  scale_fill_continuous(guide = guide_legend(direction = \"horizontal\", \r\n                                             title.position = \"none\")) + \r\n  scale_color_identity(name = \" \",\r\n                       guide=legend,\r\n                       labels = \" \") + \r\n  theme_minimal() +\r\n  theme(legend.position=\"none\",\r\n        axis.text.x = element_blank(),\r\n        axis.title.x = element_blank(),\r\n        axis.text.y = element_text(size = 15, color = 'black'),\r\n        axis.title.y = element_text(size = 25),\r\n\r\n        axis.ticks.x=element_blank(),\r\n        axis.text.y.left =  element_text(color = 'black'),        \r\n        plot.title = element_text(hjust = 0.5, size = 25),\r\n        text = element_text(size = 15),\r\n\r\n        axis.title = element_text(size = 25),\r\n        panel.border = element_rect(colour = \"black\", fill=NA, size=1),\r\n        plot.margin=unit(c(1,0,0,0),\"cm\")) +\r\n  ggtitle(label = \"Placebo\")\r\n\r\n#####################################\r\ncgm1 <- read_sas(\"/shared/175/arenv/arwork/gsk1278863/mid209676/present_2020_01/code/CGM/cgm_data2.sas7bdat\") %>%\r\n  filter(trtcd==1 & VISITNUM == 21)\r\n\r\nquant <- cgm1 %>% group_by(CGMTIME) %>%\r\n  do(quant = quantile(.$aval, probs = seq(0.2,0.8,.05)), probs = seq(0.2,0.8,.05)) %>%\r\n  unnest(cols=c(quant, probs)) %>%\r\n  mutate(delta = 2*round(abs(.5-probs)*100)) %>% \r\n  group_by(CGMTIME, delta) %>%\r\n  summarize(quantmin = min(quant), quantmax= max(quant)) %>%\r\n  mutate(hour = (CGMTIME/3600)) %>%\r\n  filter(delta != 0)\r\n\r\nplot1 <- ggplot() +\r\n  geom_ribbon(data = quant, aes(x = hour, ymin = quantmin, ymax = quantmax,\r\n                                 group = reorder(delta, -delta), fill = as.numeric(delta)),\r\n              alpha = .5) +\r\n  geom_segment(aes(x=1, xend=24, y=180, yend=180), linetype = 2, color = \"blue\") +\r\n  scale_x_continuous(\" \",\r\n                     breaks=c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24),\r\n                     limits=c(1, 24)) +\r\n  scale_y_continuous(\"Glucose (mg/dL)\",\r\n                     breaks=c(100, 150, 200),\r\n                     limits=c(100, 200),\r\n  ) +\r\n   scale_fill_continuous(guide = guide_legend(direction = \"horizontal\", \r\n                                             title.position = \"none\")) + \r\n  scale_color_identity(name = \" \",\r\n                       guide=legend,\r\n                       labels = \" \") + \r\n  theme_minimal() +\r\n  theme(legend.position=\"none\",\r\n        axis.title.y = element_blank(),\r\n        axis.title.x=element_blank(),\r\n        axis.text.x=element_blank(),\r\n        axis.ticks.x=element_blank(),\r\n        axis.text.y.left =  element_blank(),        \r\n        plot.title = element_text(hjust = 0.5, size = 25),\r\n        text = element_text(size = 15),\r\n        axis.text = element_text(size = 20),\r\n        axis.title = element_text(size = 25),\r\n        panel.border = element_rect(colour = \"black\", fill=NA, size=1),\r\n        plot.margin=unit(c(1,0,0,0),\"cm\")) +\r\n  ggtitle(label = \"Low Dose\")\r\n\r\n##################################################################################################\r\ncgm2 <- read_sas(\"/shared/175/arenv/arwork/gsk1278863/mid209676/present_2020_01/code/CGM/cgm_data2.sas7bdat\") %>%\r\n  filter(trtcd==2 & VISITNUM == 21)\r\n\r\nquant <- cgm2 %>% group_by(CGMTIME) %>%\r\n  do(quant = quantile(.$aval, probs = seq(0.2,0.8,.05)), probs = seq(0.2,0.8,.05)) %>%\r\n  unnest(cols=c(quant, probs)) %>%\r\n  mutate(delta = 2*round(abs(.5-probs)*100)) %>% \r\n  group_by(CGMTIME, delta) %>%\r\n  summarize(quantmin = min(quant), quantmax= max(quant)) %>%\r\n  mutate(hour = (CGMTIME/3600)) %>%\r\n  filter(delta != 0)\r\n\r\nplot2 <- ggplot() +\r\n  geom_ribbon(data = quant, aes(x = hour, ymin = quantmin, ymax = quantmax,\r\n                                 group = reorder(delta, -delta), fill = as.numeric(delta)),\r\n              alpha = .5) +\r\n  geom_segment(aes(x=1, xend=24, y=180, yend=180), linetype = 2, color = \"blue\") +\r\n  scale_x_continuous(\"Time\",\r\n                     breaks=c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24),\r\n                     limits=c(1, 24)) +\r\n  scale_y_continuous(\"Glucose (mg/dL)\",\r\n                     breaks=c(100, 150, 200),\r\n                     limits=c(100, 200)) +\r\n  scale_fill_continuous(guide = guide_legend(title = \"% patients in band\",\r\n                                             direction = \"horizontal\",\r\n                                             title.position = \"left\",\r\n                                             element_text(size=15))) +\r\n   theme_minimal() +\r\n  theme(legend.position=c(0.5, 0.65),\r\n        plot.title = element_text(hjust = 0.5, size = 25),\r\n        text = element_text(size = 15),\r\n        axis.text = element_text(size = 15, color = 'black'),\r\n        axis.title.y = element_text(size = 25),\r\n        axis.title.x = element_text(size = 15),        \r\n        legend.key.size = unit(1, \"cm\"),        \r\n        panel.border = element_rect(colour = \"black\", fill=NA, size=1)) +\r\n  # guides(colour = guide_legend(override.aes = list(size=3))) +\r\n  ggtitle(label = \"Medium Dose\")\r\n\r\n############################################################################################################\r\ncgm3 <- read_sas(\"/shared/175/arenv/arwork/gsk1278863/mid209676/present_2020_01/code/CGM/cgm_data2.sas7bdat\") %>%\r\n  filter(trtcd==3 & VISITNUM == 21)\r\n\r\nquant <- cgm3 %>% group_by(CGMTIME) %>%\r\n  do(quant = quantile(.$aval, probs = seq(0.2,0.8,.05)), probs = seq(0.2,0.8,.05)) %>%\r\n  unnest(cols=c(quant, probs)) %>%\r\n  mutate(delta = 2*round(abs(.5-probs)*100)) %>% \r\n  group_by(CGMTIME, delta) %>%\r\n  summarize(quantmin = min(quant), quantmax= max(quant)) %>%\r\n  mutate(hour = (CGMTIME/3600)) %>%\r\n  filter(delta != 0)\r\n\r\nplot3 <- ggplot() +\r\n  geom_ribbon(data = quant, aes(x = hour, ymin = quantmin, ymax = quantmax,\r\n                                group = reorder(delta, -delta), fill = as.numeric(delta)),\r\n              alpha = .5) +\r\n  geom_segment(aes(x=1, xend=24, y=180, yend=180), linetype = 2, color = \"blue\") +\r\n  scale_x_continuous(\"Time\",\r\n                     breaks=c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24),\r\n                     limits=c(1, 24)) +\r\n  scale_y_continuous(\" \",\r\n                     breaks=c(100, 150, 200),\r\n                     limits=c(100, 200),\r\n  ) +\r\n  scale_fill_continuous(guide = guide_legend(direction = \"horizontal\", \r\n                                             title.position = \"none\",\r\n                                             element_text(size=6))) + \r\n\r\n  theme_minimal() +\r\n  theme(legend.position=\"none\",\r\n        plot.title = element_text(hjust = 0.5, size = 25),\r\n        text = element_text(size = 15),\r\n        axis.text.y = element_blank(),\r\n        axis.text.x = element_text(size = 15, color = 'black'),\r\n        axis.title.y = element_blank(),\r\n        axis.title.x = element_text(size = 15),  \r\n        legend.text=element_text(size=6),\r\n        legend.title=element_text(size=15),\r\n        legend.key.size = unit(1, \"cm\"),        \r\n        panel.border = element_rect(colour = \"black\", fill=NA, size=1)) +\r\n  guides(colour = guide_legend(override.aes = list(size=3))) +\r\n  ggtitle(label = \"High Dose\")\r\n\r\n#####################################################################################################\r\n\r\np <- grid.arrange(arrangeGrob(plot0, ncol=1, nrow=1),\r\n                  arrangeGrob(plot1, ncol=1, nrow=1),\r\n                  arrangeGrob(plot2, ncol=1, nrow=1),\r\n                  arrangeGrob(plot3, ncol=1, nrow=1),\r\n                  heights = c(1,1))\r\n\r\ntitle <- ggdraw() + draw_label(\"Increasing Dose Leads To Improved Glucose Stability at Week 52\", size = 25)\r\n\r\np2 <- plot_grid(title, p, ncol=1, rel_heights = c(1, 10))  \r\n\r\nggsave(\"/shared/175/arenv/arwork/gsk1278863/mid209676/present_2020_01/code/CGM/cgm_plot_quantiles.png\", p2, width=18, height=12, dpi=300)\r\n\r\n\r\n\r\nBack to blog\r\n\r\nExample 4. Averaged patient profiles\r\n\r\n\r\n#-----------------------------------------------------------------------------\r\n# Plot a model averaged patient profile\r\n# Warning. The proposed model does not take in to account patients and shouldn't\r\n# be believed, but is used for illustrative purposes. \r\n#-----------------------------------------------------------------------------\r\n\r\nlibrary(tidyverse)\r\nlibrary(readr)\r\n\r\n\r\nsimulated_data <- read_csv(\"simulated_data.csv\")\r\n\r\nsimulated_data %>% glimpse()\r\n\r\nsimulated_data %>%\r\n  mutate(TREATMENT = factor(TREATMENT, levels=c(\"SOC\", \"Rx low\", \"Rx medium\", \"Rx high\")),\r\n         VISIT = case_when(\r\n           VISITNUM == 3 ~ \"Baseline\",\r\n           VISITNUM == 17 ~ \"Week 26\",\r\n           VISITNUM == 21 ~ \"Week 52\")\r\n  ) %>%\r\n  ggplot(aes(x = CGMTIME, y = Original_CGMValue, colour = TREATMENT, group = TREATMENT)) +\r\n  geom_smooth(se = TRUE) +\r\n  scale_y_continuous(trans = \"log\") +\r\n  facet_grid(VISIT ~ TREATMENT ) +\r\n  theme_light(base_size = 12) +\r\n  #theme_dark() +\r\n  theme(legend.position = \"none\") +\r\n  xlab(\"\") +\r\n  ylab(\"Glucose mg/dL\") +\r\n  labs(title = \"Medium dose Rx dose appears to stabilise glucose over 24 period compared to SoC\",\r\n       subtitle = \"Model averaged patient profiles by treatment and visit\",\r\n       caption = \"A generalised additive model was used to provide an averaged patient profile within treatment and visit. \\n\r\n       Additional development of a flexible model of 24-hour patient CGM is required.\") +\r\n  scale_color_brewer(palette=\"Dark2\")\r\n\r\nggsave(\"MAD-CGM.png\", width = 12, height = 8)\r\n\r\n\r\n\r\nBack to blog\r\n\r\nExample 5. Profile plots with overlays\r\nNo code has been submitted.\r\nBack to blog\r\nExample 6. Variability plot\r\n\r\n\r\n## Continuous glucose monitoring data challenge\r\n\r\n## Load packages and colours ----\r\nlibrary(tidyverse)\r\n\r\nOrange <- \"#EF7F04\"\r\nGreen <- \"#68B937\"\r\nBlue <- \"#00A6CB\"\r\nGrey <- \"#4E5053\"\r\nDarkblue <- \"#003569\"\r\nYellow <- \"#FFBB2D\"\r\n\r\n## Read in dataset ----\r\n\r\ndata <- read_csv('simulated_data.csv')\r\n\r\ndata$VISITNUM <- as.character(data$VISITNUM)\r\ndata$TREATMENT <- as.factor(data$TREATMENT)\r\n\r\n## Set up data frame for changing visitnum to visit name\r\n\r\nvisits <- data.frame(VISITNUM = c('3', '17', '21'),\r\n                     Visit = c('Baseline', 'Week 26', 'Week 52'))\r\n\r\n## join it on\r\n\r\ndataa <- data %>% \r\n  full_join(visits)\r\n\r\nlevels(data$TREATMENT)\r\n\r\n## reorder factor for treatment\r\n\r\n\r\ndataa$Treatment <- factor(dataa$TREATMENT, levels = c(\"Rx high\", \"Rx medium\", \"Rx low\", \"SOC\"))\r\n\r\n## Add in mean and sd for each patient and visit combination ----\r\n\r\ndata1 <- dataa %>% \r\n  group_by(SUBJID, Visit, Treatment) %>% \r\n  summarise(mean_cgmsim = mean(Simulated_CGMValue), sd_cgmsim = sd(Simulated_CGMValue), \r\n            mean_cgm = mean(Original_CGMValue), sd_cgm = sd(Simulated_CGMValue),\r\n            med_cgm = median(Original_CGMValue), iqr_cgm = IQR(Original_CGMValue),\r\n            med_cgmsim = median(Simulated_CGMValue), iqr_cgmsim = IQR(Simulated_CGMValue))\r\n\r\n\r\n\r\n\r\n# plotdata <- ggplot(data= data1, aes(x=mean_cgmsim, y = sd_cgmsim, colour= TREATMENT, shape= Visit))\r\n# plotdata <- ggplot(data= data1, aes(x=mean_cgm, y = sd_cgm, colour= TREATMENT, shape= VISITNUM))\r\nplotdata <- ggplot(data= data1, aes(x=mean_cgmsim, y = sd_cgmsim, colour= Treatment))\r\n# plotdata <- ggplot(data= data1, aes(x=med_cgmsim, y = iqr_cgmsim, colour= TREATMENT))\r\n\r\n\r\nplotdata + geom_point() +\r\n  ggtitle('Medium treatment dose leads to glucose levels within a safe range,') +\r\n  xlab('Mean glucose levels per patient (mg/dL)') +\r\n  ylab('Variablity of glucose measurements per patient (Standard Deviation)') +\r\n  scale_colour_manual(values = c(Green, Blue, Darkblue, Orange)) +\r\n  geom_vline(aes(xintercept=140), linetype=2, colour=Grey) +\r\n  facet_wrap(vars(Visit),labeller = labeller(Visit = label_wrap_gen(55))) +\r\n  labs(caption = \"Glucose levels between 72 and 140 mg/dL are considered to indicate good glycemic control\",\r\n       subtitle = \"and decreased variability compared to SOC and other treatment doses\") +\r\n  theme_bw() +\r\n  theme(panel.background = element_blank(), axis.line = element_blank(),\r\n        axis.text=element_text(size=12),\r\n        axis.title=element_text(size=14),\r\n        # legend.position=\"none\",\r\n        legend.title = element_text(size=14),\r\n        legend.text= element_text(size=12),\r\n        plot.title = element_text(size=18, face=\"bold\"),\r\n        plot.subtitle = element_text(size=14, face=\"bold\"))\r\n\r\n\r\n\r\nBack to blog\r\nExample 5. Colab notebook\r\nThe code is included in the notebook which can be found here.\r\nBack to blog\r\n\r\n\r\n\r\n",
    "preview": "posts/2021-09-06-wonderful-wednesdays-september-2021/./images/CGM-trelliscope.png",
    "last_modified": "2025-08-22T14:49:26+02:00",
    "input_file": {},
    "preview_width": 1680,
    "preview_height": 939
  },
  {
    "path": "posts/2021-09-06-wonderful-wednesdays-august-2021/",
    "title": "Wonderful Wednesdays August 2021",
    "description": "For this edition of the Wonderful Wednesdays, the audience was asked to send examples of visualizations representing coronavirus data. The webinar was a showcase og the different types of visualizations, such as area graphs, forest plots, streamgraphs, or network analysis.",
    "author": [
      {
        "name": "Mark Baillie",
        "url": "https://www.psiweb.org/sigs-special-interest-groups/visualisation"
      }
    ],
    "date": "2021-09-06",
    "categories": [
      "Data journalism",
      "Wonderful wednesdays",
      "COVID-19"
    ],
    "contents": "\r\nThe first example was a UK governmental COVID dashboard. Clean and straight to the point, the UK site provides information about the pandemic in the country. It includes numbers and texts that answer the main questions that users might have: are cases rising? What are the vaccinations rates? By clicking each of the topics, users can see specific information in the form of interactive charts.\r\nUK gov COVID dashboardIn contrast a more do it yourself dashboard was presented implemented in SAS.\r\nCOVID dashboard implemented in SASThe next visualization, by the Financial Times, represents the excess of deaths caused by the Coronavirus pandemic. It shows a set of small multiples -one per country- highlighting when the number of deaths was higher than the average in recent years. Although the information is impressive, the chart is very crowded with data and annotations which makes understanding it a bit difficult. A similar project, done by The Economist, included interactivity to avoid this problem. Their implementation of tooltips to extract information is very well done.\r\nExcess Covid deaths - FT. Coronavirus tracker: the latest figures as countries fight the Covid-19 resurgenceThe following visualization is an unusual chart done again by The Financial Times: a streamgraph. This type of plot is a stacked area chart displaced around a central axis. Its organic shapes and different looks might make them unconventional and attractive. However, with this type of chart is difficult to compare the size of the areas. And users who are not familiarized with them might have a hard time understanding them.\r\nA streamgraph - FT. Coronavirus tracker: Daily death rates by regionBut visualizing the coronavirus pandemic doesn’t mean using rare charts, or interactive projects. One forest plot from The Economist shows how this traditional chart can be extremely successful at highlighting stories. The key is to include labels and annotations to make the information accessible and declutter the axis to make the data be the main protagonist.\r\nForest plot of COVID vaccine trials. Economist news report: In clinical and real world trials, China’s Sinovac underperformsMany of the projects around COVID used gamification and interactivity to explain complex scientific terms to the general audience. The webinar highlighted two that explained how the virus can expand slower or faster depending on people staying or not at home. Users can understand better how simulations and models work by interacting with the different variables that feed the interactive visualizations.\r\nInteractive explainations of epidemiology concepts - What Happens Next?COVID-19 Futures, Explained With Playable Simulations - Marcel Salathé (epidemiologist) & Nicky Case (art/code)The last example is a network analysis of how the virus moved in Hong Kong during the different waves.\r\nCOVID transmission networks in Hong Kong. Uncovering transmission patterns of COVID-19 outbreaks: A region-wide comprehensive retrospective study in Hong Kong: Liu et al\r\n\r\n\r\n",
    "preview": "posts/2021-09-06-wonderful-wednesdays-august-2021/./images/Picture1.png",
    "last_modified": "2025-08-22T14:49:25+02:00",
    "input_file": {},
    "preview_width": 745,
    "preview_height": 408
  },
  {
    "path": "posts/2021-07-18-wonderful-wednesdays-july-2021/",
    "title": "Wonderful Wednesdays July 2021",
    "description": "Patient Reported Outcomes (PROs) are often used within clinical trials. Prior to use as an endpoint, it is important to establish measurement properties of the instrument in the population of interest. This is conducted on blinded data, with no knowledge of the treatment allocation of each patient. Instead, anchor measures are used and compared to the score that is being evaluated. These anchor measures are usually simple questions that are designed to link conceptually to the overall target of evaluation or can be previously validated measures that assess similar concepts.",
    "author": [
      {
        "name": "Rhys Warham",
        "url": "https://www.psiweb.org/sigs-special-interest-groups/visualisation"
      }
    ],
    "date": "2021-07-14",
    "categories": [
      "Patient Reported Outcomes",
      "Wonderful Wednesdays"
    ],
    "contents": "\r\nSimulated Disease Questionnaire\r\nThe dataset includes item level data for a 12 item (question) Simulated Disease Questionnaire (SDQ-12) at four different timepoints and for 2000 patients. Each item is scored on a 0-3 scale (0 representing worst possible health state/most severe symptoms, 3 representing best possible health state and no symptoms), and a sum score is also calculated by adding all item responses. Each of the 12 items has been simulated to represent a distinct symptom\r\n\r\nExample 1. Item Response Distribution Plot\r\nhigh resolution image\r\nThis visualization displays the distribution of the individual items over each of the four days available in the data. Each horizontal bar is coloured in varying shades of blue with darker shades indicating higher levels of severity in the corresponding item for that day.\r\nThe visualization allows the viewer to quickly identify the greater severities observed on Day 4, and to compare the individual items on each day. This provides a nice overview of the data which is quick and easy to understand. The use of darker shades to represent darker colours is intuitive.\r\nThe panel did feel that some of the repeated axis labels are unnecessary and could be removed to reduce clutter, and that a more informative item sorting than alphabetical could be used. Whilst the individual items can easily be compared for each day, it is slightly more difficult to see the changes in each item over time.\r\nlink to code\r\n\r\nExample 2. Individual Item Level Plot\r\nhigh resolution image\r\nThis visualization also displays the distribution of the individual items over time, although an alternative layout is considered here which puts greater emphasis on the progression of each item over time. Again, an intuitive colour scheme is used with green shades indicating better outcomes and pink shades indicating worse.\r\nThe individual items are not ordered according to item number, suggesting some ordering has been applied, although it is not the easiest to see what this sorting is. There are also quite large spaces between the individual bars, which makes it slightly more difficult to compare the bars than if they were closer together.\r\nlink to code\r\n\r\nExample 3. Waterfall Plot\r\nhigh resolution image\r\nThis waterfall plot displays the individual change score of each patient. The bars are coloured by the patients’ self-reported conditions, allowing us to easily see the tools’ ability to detect change. This nicely addresses one of the key focuses of this month’s challenge. The plot has a meaningful title and subtitle, and the removal of unnecessary clutter allows the viewer to really focus on what is important.\r\nWhilst it is easy to see the patterns in the tails of the distribution and thus deduce the general picture, it is slightly harder to distinguish the message towards the middle of the plot where the colours frequently change. This could be somewhat addressed if at a given change score, the individual bars were sorted according to self-reported condition and thus colours were grouped. Without such a sorting, we observe an unusual effect where our eyes pick up some bars which appear to be of different colours than those which are in the legend. Adding a slight jitter or similar may also enhance this plot by allowing us to see the colours of those patients with a change score of zero.\r\nlink to code\r\n\r\nExample 4. Network Plot\r\n\r\nhigh resolution image.\r\nThis plot overviews relationships between the different items and scores. It displays some interesting connections, although it would benefit from some supplementary information to detail what exactly the connections show, what the colours of the bars represent, etc. The assumption of the panel was that the connections represented correlations, with colour used to indicate whether these are positive or negative. It would be great for this to be clarified on the plot, avoiding any risk of misinterpretation. Given the large number of connections in the network, allowing the user to interactively select which items to investigate would be a nice enhancement.\r\nlink to code\r\n\r\nExample 5. Interactive Plot\r\n\r\nThe app can be found here.\r\nThis interactive tool has multiple tabs each displaying different information. As well as the visualisation aspects, the final tab provides an overview of the data, allowing the user to deep-dive into the numbers. This is a great feature for an exploratory tool.\r\nThe first tab displays a principal component analysis showing the relationship between the items. Dots closer to the centre have higher correlations with SQD-12, and the relative positions of the dots display indicate relationships between individual items. This nicely allows the user to investigate multiple relationships. There is also the possibility for the user to select individual time points of interest. The plot is slightly difficult to interpret at first and takes a little bit of time to digest, particularly with the position of the items changing. However, the supplementary text is great for providing detail of how to understand the plot. It would be a useful addition if a key outlining the abbreviations for the individual items was always visible to the user.\r\nThe second tab provides a scatterplot matrix displaying item level distributions, correlations between items and distributional relationships between items. Again, the plot takes a little time to understand and dig into but provides a wealth of information that is useful for individuals who want to investigate the data at length.\r\nlink to code\r\nExample 6. Wright Map\r\nhigh resolution image.\r\nThis final visualization has two features: a histogram displaying the underlying characteristics of the patient population and a supplementary graph displaying the expected response thresholds for the different severity levels in relation to the underlying latent scores.\r\nAgain, the plot takes a moment to interpret, but once understood provides a message that is easy to understand. It may help the viewer understood more quickly if the vertical gridlines were continued up to the histogram (or alternatively if the x-axis was positioned between the two plots) to make clear that the two aspects of the visual are connected.\r\nThe colouring of the points is generally sensible, although some panellists felt that using the darker blue score for the most severe response may be more intuitive. The bars are logically sorted according to the severe/moderate response threshold. The plot would benefit from an informative title and the use of integer values on the x-axis.\r\nlink to code\r\nCode\r\n\r\nExample 1. Item response distribution plot\r\n\r\n\r\nlibrary(tidyverse)\r\nlibrary(mirt)\r\nlibrary(ggpubr)\r\n\r\nlibrary(forcats)\r\nlibrary(psych)\r\nlibrary(polycor)\r\nlibrary(GPArotation)\r\nlibrary(xtable)\r\nlibrary(lavaan)\r\nlibrary(lavaanPlot)\r\n\r\nlibrary(WrightMap)\r\nlibrary(data.table)\r\nlibrary(ggcorrplot)\r\nlibrary(lme4)\r\nlibrary(Matrix) \r\nlibrary(stringr)\r\nlibrary(hrbrthemes)\r\nlibrary(viridis)\r\nlibrary(gmodels)\r\nlibrary(pander)\r\nlibrary(rtf)\r\nlibrary(difR)\r\n\r\n\r\n\r\n#Clear environment\r\nrm(list=ls())\r\n\r\n#Colour scheme\r\nTurquoise100 <- \"#00a3e0\"\r\nTurquoise75 <- \"#40bae8\"\r\nTurquoise50 <- \"#7fd1ef\"\r\nTurquoise25 <- \"#bfe8f7\"\r\nBlue100 <- \"#005587\"\r\nBlue50 <- \"#7FAAC3\"\r\nGreen100 <- \"#43b02a\"\r\nGreen50 <- \"#a1d794\"\r\nPurple100 <-\"#830065\"\r\nPurple50 <- \"#c17fb2\"\r\n\r\nNames <- c(\r\n  'Dry Cough',\r\n  'Loss of Smell',\r\n  'Skin Rash',\r\n  'Fever',\r\n  'Headache',\r\n  'Short of Breath',\r\n  'Diarrhoea',\r\n  'Sore Throat',\r\n  'Fatigue',\r\n  'Runny Nose',\r\n  'Ocular Issues',\r\n  'Loss of Taste')\r\n\r\n\r\n\r\n#Set data and results areas up\r\nsourcedata <- \"C:/Users/q1062810/OneDrive - IQVIA/Wonderful Wednesday/Psychometrics/\"\r\n\r\nsetwd(sourcedata)\r\ndat <-read.csv(\"PSI_WW_psychometric.csv\")\r\n\r\n### Make dataset for each timepoint ====\r\ndat_t1 <- dat %>%\r\n  select(c(ends_with(\"T1\"))) %>%\r\n  select(-c(starts_with(\"PGIC\")))\r\n\r\ncolnames(dat_t1) <- Names\r\n\r\ndat_t2 <- dat %>%\r\n  select(c(ends_with(\"T2\"))) %>%\r\n  select(-c(starts_with(\"PGIC\")))\r\n\r\ncolnames(dat_t2) <- Names\r\n\r\ndat_t3 <- dat %>%\r\n  select(c(ends_with(\"T3\"))) %>%\r\n  select(-c(starts_with(\"PGIC\")))\r\n\r\ncolnames(dat_t3) <- Names\r\n\r\ndat_t4 <- dat %>%\r\n  select(c(ends_with(\"T4\"))) %>%\r\n  select(-c(starts_with(\"PGIC\")))\r\n\r\ncolnames(dat_t4) <- Names\r\n\r\n# Start data manip =========\r\n\r\nmyplot <- function(df, timepoint,graphname){\r\n\r\nResp_Dist <<- df %>% #set the dataset\r\n  apply(2, table) %>% # tabulate response distributions\r\n  as.data.frame() %>% #apply on the above line makes a matrix. This converts to a dataframe.\r\n  mutate(Response = as.factor(c(0:3))) #Here we make sure that we have a column labelling the response options\r\n#select(Response, starts_with(\"item\")) #And move response to the front of the dataset\r\n\r\ncolnames(Resp_Dist) <<- c(Names,\"Response\")\r\n\r\n#Make a staked barchart for one of the timepoints\r\n#First transpose the dataset to long format\r\nResp_Dist <<- Resp_Dist %>%\r\n  pivot_longer(cols = c(1:12), names_to = \"Item\", values_to = \"Frequency\") %>% #this is the line which makes a long dataset. here we are selecting all columns (ie columns relating to time 3) and keeping the item names in a new variable called \"item\" and the number that select each response option in a new variable called  \"Frequency\"\r\n  mutate(Item = as.factor(Item)) %>% #make item a factor rather than just a character variable. important for plotting\r\n  mutate(Response = as.factor(if_else(Response == 0, \"Severe\", \r\n                                      (if_else(Response == 1, \"Moderate\", \r\n                                               (if_else(Response == 2, \"Mild\",\r\n                                                        \"None\")))))))\r\n\r\n\r\nResp_Dist$Response <- factor(Resp_Dist$Response, levels = c(\"Severe\", \"Moderate\", \"Mild\", \"None\"))\r\n\r\n\r\nPlot_Resp_Dist <<- ggplot(data=Resp_Dist, mapping = aes(fill = Response, x=reorder(Item, desc(Item)), y=Frequency)) + #start with a ggplot statement\r\n  geom_bar(aes(fill=factor(Response)),position=\"fill\", stat=\"identity\")+ #tell it you want a bar chart. position \"fill\" makes it a stacked bar chart\r\n  scale_fill_manual(name = \"Response Option\",values=c(Turquoise100, Turquoise75, Turquoise50, Turquoise25), guide = guide_legend(reverse = TRUE)) + #set the colours. Reverse makes sure that the bars are 0-3 rather than 3-0\r\n  theme_classic() + #just removes gridlines etc \r\n  ggtitle(paste(timepoint))+ \r\n  labs(y= \"Frequency of response option use\", x = NULL) +\r\n  scale_y_continuous(labels = scales::percent) + #makes the axis percent\r\n  coord_flip() + #flips to a horizontal chart \r\n  theme(panel.background = element_blank(), axis.line = element_blank(),\r\n        axis.text=element_text(size=10),\r\n        axis.title=element_text(size=10),\r\n        legend.text=element_text(size=10),\r\n        legend.title=element_text(size=10),\r\n        plot.title = element_text(size=16, face=\"bold\"),\r\n        plot.subtitle = element_text(size=14, face=\"bold\"),\r\n        legend.position=\"right\")\r\n\r\n#view plot\r\nPlot_Resp_Dist\r\n\r\nassign(graphname, Plot_Resp_Dist, envir = .GlobalEnv)\r\n\r\n}\r\nDAY1 <- vector(mode = \"list\", length = 9)\r\nmyplot(dat_t1, \"Day 1\", \"DAY1\")\r\n\r\nDAY2 <- vector(mode = \"list\", length = 9)\r\nmyplot(dat_t2, \"Day 2\", \"DAY2\")\r\n\r\nDAY3 <- vector(mode = \"list\", length = 9)\r\nmyplot(dat_t3, \"Day 3\", \"DAY3\")\r\n\r\nDAY4 <- vector(mode = \"list\", length = 9)\r\nmyplot(dat_t4, \"Day 4\", \"DAY4\")\r\n\r\nDAY1\r\nDAY2\r\nDAY3\r\nDAY4\r\n\r\nResponse_Distributions <- ggarrange(DAY1, DAY2, DAY3, DAY4, common.legend = TRUE, legend = \"bottom\")\r\n\r\nResponse_Distributions <- annotate_figure(Response_Distributions, \r\n                top = text_grob(\"Symptom severity increased each day\", color = \"black\", face = \"bold\", size = 20),\r\n                bottom = NULL,\r\n                left = \"SDQ-12 item name\",\r\n                right = NULL)\r\n\r\nResponse_Distributions\r\npng(filename = \"Response Distributions.png\",  width = 920, height = 540, units = \"px\", pointsize = 10,bg = \"white\")\r\nResponse_Distributions\r\ndev.off()\r\n\r\n\r\n\r\nBack to blog\r\n\r\nExample 2. Individual item level plot\r\nThe code can be found here.\r\nBack to blog\r\n\r\nExample 3. Waterfall plot\r\nYou may need to run (some parts of) the code presented in Example 1 before you can run this one.\r\n\r\n\r\nlibrary(tidyverse)\r\nlibrary(dplyr)\r\n\r\n\r\n#Clear environment\r\nrm(list=ls())\r\n\r\n#Colour scheme\r\nTurquoise100 <- \"#00a3e0\"\r\nTurquoise75 <- \"#40bae8\"\r\nTurquoise50 <- \"#7fd1ef\"\r\nTurquoise25 <- \"#bfe8f7\"\r\nBlue100 <- \"#005587\"\r\nBlue50 <- \"#7FAAC3\"\r\nGreen100 <- \"#43b02a\"\r\nGreen50 <- \"#a1d794\"\r\nPurple100 <-\"#830065\"\r\nPurple50 <- \"#c17fb2\"\r\n\r\nNames <- c(\r\n  'Dry Cough',\r\n  'Loss of Smell',\r\n  'Skin Rash',\r\n  'Fever',\r\n  'Headache',\r\n  'Short of Breath',\r\n  'Diarrhoea',\r\n  'Sore Throat',\r\n  'Fatigue',\r\n  'Runny Nose',\r\n  'Ocular Issues',\r\n  'Loss of Taste',\r\n  'SDQ TOTAL',\r\n  'FLU PRO',\r\n  'Fatigue PRO')\r\n\r\n\r\n\r\n#Set data and results areas up\r\nsourcedata <- \"C:/Users/q1062810/OneDrive - IQVIA/Wonderful Wednesday/Psychometrics/\"\r\n\r\nsetwd(sourcedata)\r\ndat <-read.csv(\"PSI_WW_psychometric.csv\")\r\n\r\ndat_t4 <- dat %>%\r\n  head(2000) %>%\r\n  select(c(starts_with(\"T4\"), \"PGIC_T4\" )) %>%\r\n  mutate(Group = if_else(PGIC_T4<=3, \"Improved\",\r\n                         if_else(PGIC_T4 == 4, \"No change\", \r\n                                 if_else(PGIC_T4 == 5, \"Worsened a little\", \"Worsened a lot\")))) %>%\r\n  arrange(desc(T4_SDQ_PRO_SUM_CHG)) %>%\r\n  mutate(x = seq(1:2000))\r\n\r\ndat_t4$Group <- as.factor(dat_t4$Group)\r\ndat_t4$x <- as.factor(dat_t4$x)\r\n\r\n\r\nPlot <- dat_t4 %>%\r\n  ggplot() + \r\n  geom_col(aes(x=x, y=T4_SDQ_PRO_SUM_CHG, fill=Group), width = 1,  na.rm = TRUE) +\r\n  ggtitle(\"Patients self-reported improvement and worsening \\nmatched their SDQ-12 change scores\", subtitle = \"Supporting the ability of the SDQ-12 to detect change\") +\r\n  xlab(\"Patients, in order of SDQ-12 change score\") + \r\n  ylab(\"SDQ-12 change score\") +\r\n  scale_fill_manual(breaks = c(\"Improved\", \"No change\", \"Worsened a little\", \"Worsened a lot\"), \r\n                    values=c(Green50, Turquoise100, Blue100, Purple100), name = \"Self-Reported Condition\") +\r\n  scale_y_continuous(limits = c(-35,30), breaks=c(-35, -15, 0, 15)) +\r\n  theme_classic() + #formatting\r\n  theme(panel.background = element_blank(), axis.line = element_blank(),\r\n        axis.text=element_text(size=14),\r\n        axis.title=element_text(size=16),\r\n        legend.text=element_text(size=14),\r\n        legend.title=element_text(size=16),\r\n        plot.title = element_text(size=22, face=\"bold\"),\r\n        plot.subtitle = element_text(size=14, face=\"bold\")) +\r\n  theme(axis.text.x=element_blank(), # remove the participant numbers \r\n        axis.ticks.x=element_blank())  # remove x-axis ticks \r\nPlot\r\n\r\npng(filename = \"Ability_to_detect_change.png\",  width = 920, height = 540, units = \"px\", pointsize = 10,bg = \"white\")\r\nPlot\r\ndev.off()\r\n\r\n\r\n\r\nBack to blog\r\n\r\nExample 4. Network plot\r\n\r\n\r\nlibrary(tidyverse)\r\nlibrary(dplyr)\r\nlibrary(qgraph)\r\nlibrary(GGally)\r\nlibrary(network)\r\n\r\n#Clear environment\r\nrm(list=ls())\r\n\r\n#Colour scheme\r\nTurquoise100 <- \"#00a3e0\"\r\nTurquoise75 <- \"#40bae8\"\r\nTurquoise50 <- \"#7fd1ef\"\r\nTurquoise25 <- \"#bfe8f7\"\r\nBlue100 <- \"#005587\"\r\nBlue50 <- \"#7FAAC3\"\r\nGreen100 <- \"#43b02a\"\r\nGreen50 <- \"#a1d794\"\r\nPurple100 <-\"#830065\"\r\nPurple50 <- \"#c17fb2\"\r\n\r\nNames <- c(\r\n'Dry Cough',\r\n'Loss of Smell',\r\n'Skin Rash',\r\n'Fever',\r\n'Headache',\r\n'Short of Breath',\r\n'Diarrhoea',\r\n'Sore Throat',\r\n'Fatigue',\r\n'Runny Nose',\r\n'Ocular Issues',\r\n'Loss of Taste',\r\n'SDQ TOTAL',\r\n'Fatigue PRO',\r\n'FLU PRO')\r\n\r\n\r\n\r\n#Set data and results areas up\r\nsourcedata <- \"C:/Users/q1062810/OneDrive - IQVIA/Wonderful Wednesday/Psychometrics/\"\r\n\r\nsetwd(sourcedata)\r\ndat <-read.csv(\"PSI_WW_psychometric.csv\")\r\n\r\ndat_t1 <- dat %>%\r\n  select(c(ends_with(\"_T1\"), starts_with(\"T1\") )) \r\n  \r\n\r\ncolnames(dat_t1) <- Names\r\ncor(dat_t1)\r\ndat_t1 <- dat_t1 # %>%\r\n  #select(-`SDQ TOTAL`)\r\ngroups <- factor(c(\r\n  rep(\"SDQ_ITEMS\", 12),\r\n  rep(\"SDQ_TOTAL\", 1),\r\n  rep(\"FATIGUE_PRO\", 1),\r\n  rep(\"FLU_PRO\", 1)))\r\n\r\n\r\nqgraph(cor(dat_t1), layout = \"spring\", labels =\r\n         colnames(dat_t1),\r\n       groups = groups, graph=\"glasso\", sampleSize=2000)\r\n\r\n\r\n\r\nBack to blog\r\n\r\nExample 5. Interactive plot\r\nThe rmd file can be found here.\r\nBack to blog\r\n\r\nExample 6. Wright map\r\nYou may need to run (some parts of) the code in Example 1 before you can run the following code.\r\n\r\n\r\n###### 4 - Cat Long Form ####### \r\n#run the model. remember that for rasch models, these are 1 parameter models and will have the same slope across all items\r\nGRM_model <- mirt(data=dat_t1, model = 1, itemtype = 'graded', SE=TRUE, verbose=FALSE)\r\n\r\n\r\n#extract the coefficients\r\nGRM_model_coef <- coef(GRM_model, IRTpars=TRUE, simplify=TRUE)\r\n\r\n#save them as a dataframe\r\nGRM_model_items <- round(as.data.frame(GRM_model_coef$items), 2)\r\nItems <- rownames(GRM_model_items)\r\n\r\nGRM_model_items <- cbind(Items, GRM_model_items) %>%\r\n \r\n#create rasch based scores if this is necessary - are used in the person item map below. \r\nScores <- (fscores(GRM_model, model = 'EAP'))\r\n\r\n\r\n\r\n#Take threshold (b) parameters\r\nthresholds <- GRM_model_items[3:5] \r\n\r\n#plot and save\r\n###USING GGPLOT\r\n#Data\r\nthresholds_long <- thresholds %>%\r\n  rownames_to_column() %>%\r\n  rename(Item = rowname) %>%\r\n  arrange(b1) %>%\r\n  mutate(Item = fct_reorder(Item, b1)) %>%\r\n  pivot_longer(cols=-Item, names_to = \"threshold\", values_to = \"AVAL\")\r\n#Itemside\r\nWrightMap_item <- ggplot(data = thresholds_long, aes(x=factor(Item), y=AVAL)) +\r\n  geom_line(aes(group=factor(Item))) +\r\n  geom_point(aes(colour=threshold), size=5) +\r\n  scale_colour_manual(name=\"Response Threshold\", labels = c(\"Severe/Moderate\", \"Moderate/Mild\", \"Mild/None\"), values = c(Turquoise100, Blue100, Green100)) +\r\n  labs( x = \"Item\", y = \"Latent Score\")  +\r\n  theme_bw() + \r\n  theme(text = element_text(size=16),\r\n        axis.text.x=element_text(colour=\"black\"),\r\n        axis.text.y=element_text(colour=\"black\"))+\r\n  theme(axis.text = element_text(size = 10)) + \r\n  theme(\r\n    legend.title = element_text(size = 12),\r\n    legend.text = element_text(size = 10)\r\n  )+\r\n  scale_y_continuous(breaks = seq(from = -2.5, to = 2.5, by = 1),limits=c(-2.5,2.5)) +\r\n  coord_flip() +\r\n  theme(legend.position=\"bottom\") \r\nWrightMap_item\r\n\r\n#PersonSide\r\nScores <- as.data.frame(Scores)\r\nWrightMap_person <- ggplot(data = Scores) +\r\n  geom_bar(aes(x=F1)) +\r\n  scale_x_binned(breaks = seq(from = -2.5, to = 2.5, by = 0.25),limits=c(-2.5,2.5)) +\r\n  #theme_bw()\r\n  theme_void()\r\nWrightMap_person\r\n\r\nWrightMap <- ggarrange(WrightMap_person,WrightMap_item + font(\"x.text\", size = 10),\r\n                               ncol = 1, nrow = 2, align = \"v\", heights=c(0.75,2.25))\r\n\r\nWrightMap\r\n\r\npng(filename = \"Wrightmap.png\",  width = 920, height = 540, units = \"px\", pointsize = 10,bg = \"white\")\r\nWrightMap\r\ndev.off()\r\n\r\n\r\n\r\nBack to blog\r\n\r\n\r\n\r\n",
    "preview": "posts/2021-07-18-wonderful-wednesdays-july-2021/./images/Response Distributions - Philip Griffiths.png",
    "last_modified": "2025-08-22T14:49:25+02:00",
    "input_file": {},
    "preview_width": 920,
    "preview_height": 540
  },
  {
    "path": "posts/2021-07-18-wonderful-wednesdays-june-2021/",
    "title": "Wonderful Wednesdays June 2021",
    "description": "Vasculitis is an inflammation of the blood vessels, in many cases caused by\nthe body’s immune system attacking healthy blood vessels, causing them to\nbecome swollen and narrow. The symptoms associated with vasculitis are varied,\nand include asthma, allergic rhinitis (cold-like symptoms), fever, joint pain,\ntiredness, loss of appetite and weight loss. In serious cases, if left\nuntreated, severe vasculitis can lead to organ failure and death. Vasculitis\nis treated primarily with oral corticosteroid (OCS) treatment. However\nlong-term usage of OCS therapy at high doses is associated with a number of\nside-effects which worsen over time, and steroid-dependency is often a\nconcern, so steroid doses need to be reduced if possible. However, some\npatients have a propensity to relapse, in which the patient experiences an\nacute flare-up of symptoms, usually requiring immediate treatment with high\ndose OCS treatment. Patients are considered to be in remission if the symptom\nscore is zero concurrently with the OCS dose being ≤ 7.5 mg/day.",
    "author": [
      {
        "name": "Irene de la Torre Arenas",
        "url": "https://www.psiweb.org/sigs-special-interest-groups/visualisation"
      }
    ],
    "date": "2021-06-09",
    "categories": [
      "Vasculitis",
      "Rare disease",
      "Wonderful Wednesdays"
    ],
    "contents": "\r\nVasculitis Data\r\nThis is a study of a new investigational medicine for the treatment of a rare type of vasculitis, with patients randomised to active treatment or placebo, with an on-treatment period of 52 weeks and a subsequent off-treatment follow-up period of up for 8 weeks. An ideal medicine would reduce vasculitis symptoms and/or enable a reduction in OCS dose and/or reduce the risk of relapse. Additional endpoints are defined for total number of days the patient was in remission during the on-treatment period, and a binary endpoint for whether a patients achieved remission within the first 24 weeks and maintained in remission until the end of the on-treatment period. Being a rare disease, there is no established consensus on a single endpoint for demonstrating efficacy.\r\nThis session \r\nExample 1. Kaplan-Meier plot\r\nhigh resolution image\r\nThis Kaplan-Meier plot goes straight to the point and provides a picture of the data. Moreover, the chart makes viewers ask about the factor driving the difference between placebo and treatment. In terms of design, some panelists indicated that a way to improve it would have been to include the legend labels close to the lines. That implementation would have helped to highlight the connection between the colors and data.\r\nThe informative title produced a bit of a discussion. A panelist asked the audience where is the line between describing the result and having a promotional title. Another member mentioned the importance of knowing the context where the chart will appear. Is it a poster? A Conference? A scientific journal?\r\nlink to code\r\n\r\nExample 2. Lasagna plot\r\nhigh resolution image\r\nSimilar to a lasagna plot or heatmap, this chart shows timelines of the patients achieving remissions. The sorting is very helpful for identifying when they started their remission, a message also supported by the title. Some panelists wondered how the chart would look like with a different type of sorting, such as the length to achieve remission. Others asked about relapses, which is something that didn’t appear in the plot.\r\nSome of the suggestions mentioned were around legends and annotations. It would have helped to have information about the circles or annotations that clarified the meaning of the dots without lines in the placebo facet. Another recommendation was to change the units of the X-axis to more relevant measurements, such as years or months.\r\nlink to code\r\n\r\nExample 3. Visualisation app\r\n\r\nThe app can be found here.\r\nIn this session, the Webinar had a special guest as part of the panel: Agustin Calatroni, a regular contributor of the Wonderful Wednesdays. The members took the opportunity to ask him about his entry, his work process, and how he started learning R. His entry for this challenge was an R Shiny App that included different filtering and sorting options. His app allowed viewers to see when patients entered in remission or relapse, and also the reasons for those events. In summary, the app brought up many ways of interacting, exploring, and visualizing the data.\r\nAsked about how he builds his apps, Calatroni stated that he always designs his apps to organize the information from general to particular views, or vice-versa. He also tries to provide as many answers for his stakeholders as possible. This is why he always includes a table for them in all his applications.\r\nlink to code\r\n\r\nCode\r\n\r\nExample 1. Kaplan-Meier plot\r\n\r\n\r\nlibrary(readr)\r\nlibrary(tidyverse)\r\nlibrary(labelled)\r\nlibrary(patchwork)\r\nlibrary(visR)\r\n\r\ntheme_set(theme_minimal(base_size = 8))\r\n\r\nvas_data <- read_csv(\"vas_data.csv\")\r\n\r\nvar_label(vas_data) <- c(\r\n  subject    =  'Subject ID',\r\n  trt01pn    =  'Randomised treatment (0 = Placebo; 1 = Treatment)',\r\n  ady          =  'Study Day',\r\n  sym          =  'Vasculitis symptom score',\r\n  dose       =  'Oral Corticosteroid (OCS) dose',\r\n  rem          =  'Subject in Remission, i.e. Vasculitis Symptom Score = 0 and OCS Dose <= 7.5 mg/day (Y/N)',\r\n  rel          =  'Relapse Event (Y)',\r\n  acc_rem    =  'Accrued Duration of Remission (Days)',\r\n  sus_rem    =  'Subject Achieved Remission Within First 24 Weeks and Remained in Remission Until EOS? (Y/N))'\r\n)\r\n\r\n\r\n# 1 rec per subject\r\nvas_per <- vas_01 %>%\r\n  distinct(subject, trt01pn, acc_rem, sus_rem) %>%\r\n  mutate(trt01pc = factor(trt01pn,\r\n                          levels = c(1, 2),\r\n                          labels = c(\"P\", \"T\")))\r\n\r\n\r\n# 1 rec per subject\r\nvas_event <- vas_data %>%\r\n  group_by(subject) %>%\r\n  filter(rem == \"Y\") %>%\r\n  arrange(ady) %>%\r\n  filter(row_number() == 1)\r\n\r\n\r\n\r\n# 1 rec per subject\r\nvas_noevent <- vas_data %>%\r\n  group_by(subject) %>%\r\n  filter(rem == \"N\") %>%\r\n  arrange(ady) %>%\r\n  filter(row_number() == n()) %>%\r\n  mutate(adyN = ady)\r\n\r\n\r\nvas_all <-\r\n  bind_rows(vas_event, vas_noevent) %>%\r\n  group_by(subject) %>%\r\n  arrange(subject) %>%\r\n  filter(row_number() == 1) %>%\r\n  mutate(\r\n    CNSR = if_else(rem == \"Y\", 0, 1),\r\n    AVAL = ady / 30.5,\r\n    trt = factor(\r\n      trt01pn,\r\n      levels = c(1, 2),\r\n      labels = c(\"Placebo\", \"Treatment\")\r\n    )\r\n  )\r\n\r\nmod <- estimate_KM(vas_all, strata = \"trt\")\r\n\r\npp <-\r\n  visr(\r\n    mod,\r\n    conf.int = 0.95,\r\n    fun = \"event\",\r\n    x_label = \"Time to remission [months]\",\r\n    y_label = \"event rate\"\r\n  ) %>%\r\n  add_CI(style = \"ribbon\")\r\n\r\na <- pp +\r\n  labs(title = \"Treatment puts more patients in to remission earlier\",\r\n       subtitle = \"i.e. Vasculitis Symptom Score = 0 and OCS Dose ≤ 7.5 mg/day\") +\r\n  theme(legend.position = \"bottom\",\r\n        legend.title = element_blank())\r\n\r\nggsave(\"remission-tte.png\", a,  dpi = 660, scale = 2)\r\n\r\n\r\n\r\nBack to blog\r\n\r\nExample 2. Lasagna plot\r\n\r\n\r\nlibrary(readr)\r\nlibrary(tidyverse)\r\nlibrary(labelled)\r\nlibrary(patchwork)\r\nlibrary(visR)\r\n\r\ntheme_set(theme_minimal(base_size = 8))\r\n\r\nvas_data <- read_csv(\"vas_data.csv\")\r\n\r\nvar_label(vas_data) <- c(\r\n  subject    =  'Subject ID',\r\n  trt01pn    =  'Randomised treatment (0 = Placebo; 1 = Treatment)',\r\n  ady          =  'Study Day',\r\n  sym          =  'Vasculitis symptom score',\r\n  dose       =  'Oral Corticosteroid (OCS) dose',\r\n  rem          =  'Subject in Remission, i.e. Vasculitis Symptom Score = 0 and OCS Dose <= 7.5 mg/day (Y/N)',\r\n  rel          =  'Relapse Event (Y)',\r\n  acc_rem    =  'Accrued Duration of Remission (Days)',\r\n  sus_rem    =  'Subject Achieved Remission Within First 24 Weeks and Remained in Remission Until EOS? (Y/N))'\r\n)\r\n\r\n\r\n# 1 rec per subject\r\nvas_per <- vas_01 %>%\r\n  distinct(subject, trt01pn, acc_rem, sus_rem) %>%\r\n  mutate(trt01pc = factor(trt01pn,\r\n                          levels = c(1, 2),\r\n                          labels = c(\"P\", \"T\")))\r\n\r\n\r\n# 1 rec per subject\r\nvas_event <- vas_data %>%\r\n  group_by(subject) %>%\r\n  filter(rem == \"Y\") %>%\r\n  arrange(ady) %>%\r\n  filter(row_number() == 1)\r\n\r\n\r\n\r\n# 1 rec per subject\r\nvas_noevent <- vas_data %>%\r\n  group_by(subject) %>%\r\n  filter(rem == \"N\") %>%\r\n  arrange(ady) %>%\r\n  filter(row_number() == n()) %>%\r\n  mutate(adyN = ady)\r\n\r\n\r\nvas_all <-\r\n  bind_rows(vas_event, vas_noevent) %>%\r\n  group_by(subject) %>%\r\n  arrange(subject) %>%\r\n  filter(row_number() == 1) %>%\r\n  mutate(\r\n    CNSR = if_else(rem == \"Y\", 0, 1),\r\n    AVAL = ady / 30.5,\r\n    trt = factor(\r\n      trt01pn,\r\n      levels = c(1, 2),\r\n      labels = c(\"Placebo\", \"Treatment\")\r\n    )\r\n  )\r\n\r\nmod <- estimate_KM(vas_all, strata = \"trt\")\r\n\r\nb <- vas_all %>%\r\n  ggplot(aes(y = reorder(subject,-ady), x = ady)) +\r\n  geom_point(alpha = 0.1) +\r\n  geom_point(alpha = 0.1,\r\n             aes(y = reorder(subject,-ady), x = ady + acc_rem),\r\n             colour = \"red\") +\r\n  geom_linerange(alpha = 0.8,\r\n                 aes(\r\n                   y = reorder(subject,-ady),\r\n                   xmin = ady,\r\n                   xmax = ady + acc_rem\r\n                 ),\r\n                 colour = \"red\") +\r\n  facet_wrap(~ trt, ncol = 2, scales = \"free_y\") +\r\n  theme_bw(base_size = 8) +\r\n  theme(\r\n    panel.grid.major.y = element_blank(),\r\n    panel.grid.minor.x = element_blank(),\r\n    panel.grid.minor.y = element_blank(),\r\n    axis.text.y = element_blank(),\r\n    axis.ticks = element_blank()\r\n  ) +\r\n  labs(title = \"Time to remission including remission duration\",\r\n       subtitle = \"Vasculitis Symptom Score = 0 and OCS Dose ≤ 7.5 mg/day\") +\r\n  xlab(\"Study day\") +\r\n  ylab(\"Subjects\")\r\n\r\nggsave(\"remission-individual.png\", b, dpi = 660, scale = 2)\r\n\r\n\r\n\r\nBack to blog\r\n\r\nExample 3. Visualisation app\r\nThe code can be found here.\r\nBack to blog\r\n\r\n\r\n\r\n",
    "preview": "posts/2021-07-18-wonderful-wednesdays-june-2021/./images/remission-tte - Mark Baillie.png",
    "last_modified": "2025-08-22T14:49:25+02:00",
    "input_file": {},
    "preview_width": 4798,
    "preview_height": 2337
  },
  {
    "path": "posts/2021-05-09-wonderful-wednesdays-may-2021/",
    "title": "Wonderful Wednesdays May 2021",
    "description": "Psoriasis is a chronic, inflammatory skin disease. For such diseases, it is of interest to not only compare treatments in terms of patients achieving a response, but also in terms of patients sustaining this response once it is achieved. This is the focus of this month’s challenge: produce a visualization to compare treatments with regards to patients sustaining a response. The synthetic data contains PASI (Psoriasis Area and Severity Index) scores for three treatment groups: two receive an active treatment in different doses; the third receives a comparator. The three arms are balanced, with 300 patients in each. The data contains PASI scores at Baseline and eight follow-up visits, spread over the course of a year. PASI scores can range from 0 to 72, with higher scores indicating a worse condition state. The criteriafor response can be chosen, but typical thresholds include a 75%, 90% or 100% reduction in PASI scores relative to Baseline (PASI75/PASI90/PASI100). More than one threshold could also be considered in the same visualization.",
    "author": [
      {
        "name": "Lorenz Uhlmann",
        "url": "https://www.psiweb.org/sigs-special-interest-groups/visualisation"
      }
    ],
    "date": "2021-05-12",
    "categories": [
      "Psoriasis",
      "Sustained response",
      "Wonderful Wednesdays"
    ],
    "contents": "\r\nSustained response data\r\nDifferent approaches could be considered to define a patient as having sustained their response. A simple definition of sustained response could be that having achieved a response at a given visit, a patient then has that response at all subsequent visits. More complex approaches may explore different methods for interpolating between visits.\r\nThe dataset also contains a small amount of missing data. It may be of interest to explore how the approach used to handle this missing data influences the interpretation of sustained response.\r\n\r\nExample 1. Lasagna plots\r\nhigh resolution image\r\nThis visualization is based on patient level data and shows the PASI response over time. Each patient is represented by one line and the three groups are presented in three different blocks. The title is very clear and provides the reader with the main message. Furthermore, the color coding is presented (in the sub-title) as well as the imputation strategy. Therefore, it is very informative.\r\nThe selection of the colors is very reasonable. The colors go from red (no response) to yellow (PASI100) which makes intentionally sense considering that we are dealing with dermatology data. You can clearly see a step function over time and that the two active doses lead to a quicker response. Furthermore, at the right end of the plots, we see more yellow areas with the active doses than with the comparator.\r\nThe sorting of the patients is a challenge here. Even though the panelists considered the sorting as reasonable, there might be other options, for example, sorting by PASI100 at week 52. An interactive tool where the user can select the sorting might be an option and brings a lot of flexibility into this visualization.\r\nlink to code\r\n\r\nExample 2. Dashboard with barplots\r\nhigh resolution image\r\nIn the main panel, we see a barplot representing the percentage of responders over time. The groups are color-coded and can be easily distinguished due to the nice choice of colors. The (sub)title and the visualization itself have a clear message. Furthermore, the distance between the bars corresponds to the distance in time which is a nice detail.\r\nThis visualization has an interactive part: The user can select the percentage cut-off for response (in the left panel). When you select a different cut-off, the dimension of the y-axis remains the same which makes it very easy to compare the results even between the results based on different cut-offs. Furthermore, you can hover over the bars and it will provide you with additional information about the sustainability of the response.\r\n(To use the app, just run the Rmd file in the “Code” section below.)\r\nlink to code\r\n\r\nExample 3. Trajectory clustering\r\n\r\nLink to app\r\nThis is a very comprehensive visualization. Actually, it is not only a visualization, but also a presentation of a statistical analysis. A trajectory clustering has been performed to devide the patients into five different clusters with different characteristics in regards to their PASI percentage changes.\r\nThe row A presents the trajectories of all patients. This gives you a first overview over the data. In row B, the trajectories of the five clusters are provided. This gives you an overview over the different characteristics of the clusters. The first cluster seems to contain patients with a quick response and a very good sustainability of the response. This seems to be the cluster with the best performing patients. The second cluster is very similar, however, patients take a little longer until they respond and the overall level of the percentage change seems to be a bit worse. The third cluster is again a bit worse. The forth cluster still shows some improvement in PASI, however, quite many patients do not reach a good PASI response even at week 52. The fifth cluster contains patients who do not seem to improve in regards to the PASI score. (Note that there are only very few patients in this cluster.) Row C shows basically the same information as row B. An average trajectory per cluster is presented. Row D visualizes the number of patients per treatment group in each cluster using a “Waffle Chart”. And row E presents the percentages of patients per treatment group in each cluster.\r\nThe boxes below the plots and the footnote provide additional information about the difference between cluster in their treatment composition. This information is further outlined in the second tab of the app. Using a tree, the differences in the treatment composition between the clusters is visualized.\r\nThis is a very interesting and useful analysis and visulization. You can see that the first cluster (which was the best one) contains mainly patients in the two active treatment arms. Thus, we can say that those treatments seem to lead to a quicker and a sustained response compared to the comparator. In the “worse” cluster, we see more patients who were in the comparator arm.\r\nOne aspect that could be improved is the coloring in row C. Actually, we do not need any color here, because the colors only seem to be different between the clusters. This information is already given by the structure of the columns, though. Furthermore, the colors are very similar to the colors which are used in row D and E to code the treatment arms.\r\nOverall, this is a very elaborated and advanced visualization which provides the user with a lot of information. At the same time, the structure is very clear which makes it easy to understand the message of the visualization.\r\nlink to code\r\nCode\r\n\r\nExample 1. Lasagna plots\r\n\r\n\r\n# Wonderful Wednesdays Submission - Sustained Response #\r\n\r\n# Bring in data\r\nSR_data <- read_excel(\"~/WWW/WWW_SustainedResponse_May.xlsx\")\r\n\r\n# Ensuring PASI score variables numeric\r\nSR_data$BASELINE <- as.numeric(SR_data$BASELINE)\r\nSR_data$WEEK01 <- as.numeric(SR_data$WEEK01)\r\nSR_data$WEEK04 <- as.numeric(SR_data$WEEK04)\r\nSR_data$WEEK08 <- as.numeric(SR_data$WEEK08)\r\nSR_data$WEEK16 <- as.numeric(SR_data$WEEK16)\r\nSR_data$WEEK24 <- as.numeric(SR_data$WEEK24)\r\nSR_data$WEEK32 <- as.numeric(SR_data$WEEK32)\r\nSR_data$WEEK40 <- as.numeric(SR_data$WEEK40)\r\nSR_data$WEEK52 <- as.numeric(SR_data$WEEK52)\r\n\r\n# Flags for different response levels\r\n\r\n# Assigning value 3 for no response at any level\r\n# A value of 2 for PASI75 response\r\n# A value of 1 for PASI90 response\r\n# A value of 0 for complete clearance\r\n# Using NRI - Missing data assigned value 3\r\nfor(i in 1:length(SR_data$USUBJID)){\r\n  \r\n  if(is.na(SR_data$WEEK01[i])==TRUE){SR_data$WEEK01FL[i]=0}\r\n  else if(SR_data$WEEK01[i]>0.25*SR_data$BASELINE[i]){SR_data$WEEK01FL[i]=0}\r\n  else if(SR_data$WEEK01[i]>0.1*SR_data$BASELINE[i]){SR_data$WEEK01FL[i]=1}\r\n  else if(SR_data$WEEK01[i]>0*SR_data$BASELINE[i]){SR_data$WEEK01FL[i]=2}\r\n  else{SR_data$WEEK01FL[i]=3}\r\n  \r\n  if(is.na(SR_data$WEEK04[i])==TRUE){SR_data$WEEK04FL[i]=0}\r\n  else if(SR_data$WEEK04[i]>0.25*SR_data$BASELINE[i]){SR_data$WEEK04FL[i]=0}\r\n  else if(SR_data$WEEK04[i]>0.1*SR_data$BASELINE[i]){SR_data$WEEK04FL[i]=1}\r\n  else if(SR_data$WEEK04[i]>0*SR_data$BASELINE[i]){SR_data$WEEK04FL[i]=2}\r\n  else{SR_data$WEEK04FL[i]=3}\r\n  \r\n  if(is.na(SR_data$WEEK08[i])==TRUE){SR_data$WEEK08FL[i]=0}\r\n  else if(SR_data$WEEK08[i]>0.25*SR_data$BASELINE[i]){SR_data$WEEK08FL[i]=0}\r\n  else if(SR_data$WEEK08[i]>0.1*SR_data$BASELINE[i]){SR_data$WEEK08FL[i]=1}\r\n  else if(SR_data$WEEK08[i]>0*SR_data$BASELINE[i]){SR_data$WEEK08FL[i]=2}\r\n  else{SR_data$WEEK08FL[i]=3}\r\n  \r\n  if(is.na(SR_data$WEEK16[i])==TRUE){SR_data$WEEK16FL[i]=0}\r\n  else if(SR_data$WEEK16[i]>0.25*SR_data$BASELINE[i]){SR_data$WEEK16FL[i]=0}\r\n  else if(SR_data$WEEK16[i]>0.1*SR_data$BASELINE[i]){SR_data$WEEK16FL[i]=1}\r\n  else if(SR_data$WEEK16[i]>0*SR_data$BASELINE[i]){SR_data$WEEK16FL[i]=2}\r\n  else{SR_data$WEEK16FL[i]=3}\r\n  \r\n  if(is.na(SR_data$WEEK24[i])==TRUE){SR_data$WEEK24FL[i]=0}\r\n  else if(SR_data$WEEK24[i]>0.25*SR_data$BASELINE[i]){SR_data$WEEK24FL[i]=0}\r\n  else if(SR_data$WEEK24[i]>0.1*SR_data$BASELINE[i]){SR_data$WEEK24FL[i]=1}\r\n  else if(SR_data$WEEK24[i]>0*SR_data$BASELINE[i]){SR_data$WEEK24FL[i]=2}\r\n  else{SR_data$WEEK24FL[i]=3}\r\n  \r\n  if(is.na(SR_data$WEEK32[i])==TRUE){SR_data$WEEK32FL[i]=0}\r\n  else if(SR_data$WEEK32[i]>0.25*SR_data$BASELINE[i]){SR_data$WEEK32FL[i]=0}\r\n  else if(SR_data$WEEK32[i]>0.1*SR_data$BASELINE[i]){SR_data$WEEK32FL[i]=1}\r\n  else if(SR_data$WEEK32[i]>0*SR_data$BASELINE[i]){SR_data$WEEK32FL[i]=2}\r\n  else{SR_data$WEEK32FL[i]=3}\r\n  \r\n  if(is.na(SR_data$WEEK40[i])==TRUE){SR_data$WEEK40FL[i]=0}\r\n  else if(SR_data$WEEK40[i]>0.25*SR_data$BASELINE[i]){SR_data$WEEK40FL[i]=0}\r\n  else if(SR_data$WEEK40[i]>0.1*SR_data$BASELINE[i]){SR_data$WEEK40FL[i]=1}\r\n  else if(SR_data$WEEK40[i]>0*SR_data$BASELINE[i]){SR_data$WEEK40FL[i]=2}\r\n  else{SR_data$WEEK40FL[i]=3}\r\n  \r\n  if(is.na(SR_data$WEEK52[i])==TRUE){SR_data$WEEK52FL[i]=0}\r\n  else if(SR_data$WEEK52[i]>0.25*SR_data$BASELINE[i]){SR_data$WEEK52FL[i]=0}\r\n  else if(SR_data$WEEK52[i]>0.1*SR_data$BASELINE[i]){SR_data$WEEK52FL[i]=1}\r\n  else if(SR_data$WEEK52[i]>0*SR_data$BASELINE[i]){SR_data$WEEK52FL[i]=2}\r\n  else{SR_data$WEEK52FL[i]=3}\r\n  \r\n}\r\n\r\n# Dataset for each treatment arm and sorting by response level at each visit\r\n\r\n# Active Treatment Arm Dose 01\r\n\r\nactarm01 <- SR_data %>% filter(TRT=='ACTIVE TREATMENT DOSE 01')\r\nactarm01 <- actarm01[order(actarm01$WEEK01FL, actarm01$WEEK04FL, actarm01$WEEK08FL,\r\n                           actarm01$WEEK16FL, actarm01$WEEK24FL, actarm01$WEEK32FL,\r\n                           actarm01$WEEK40FL, actarm01$WEEK52FL),]\r\nactarm01$subjord <- seq(from=1, to=300)\r\nactarm01 <- actarm01 %>% dplyr::select(USUBJID, subjord, WEEK01FL, WEEK04FL, WEEK08FL, WEEK16FL,\r\n                                WEEK24FL, WEEK32FL, WEEK40FL, WEEK52FL)\r\n\r\n# Convert to long format\r\nactarm01 <- gather(actarm01, visit, colour, WEEK01FL:WEEK52FL)\r\nactarm01 <- actarm01[order(actarm01$subjord),]\r\n# Evenly spaced bars for each visit\r\nactarm01$bheight <- 1\r\n\r\nact1plot <- ggplot() + scale_y_continuous(limits = c(0, 8), breaks = c(0.5,7.5), \r\n                                          labels = c(\"0.5\"=\"\", \"7.5\" = \"\")) +   \r\n  geom_bar(data = actarm01, mapping = aes(x = subjord, y = bheight, fill = colour), stat = \"identity\", position = position_stack(reverse = TRUE), show.legend = TRUE) +\r\n  coord_flip() + theme_bw() + theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),\r\n                                                                                                                          panel.grid.minor = element_blank()) + \r\n  theme(axis.ticks.x = element_blank(),\r\n        axis.ticks.y = element_blank(),\r\n        axis.text.y = element_blank()) + labs(x = \"\", y = \"\") + \r\n  scale_fill_continuous(low=\"#660025\", high=\"#edbf79\", guide=FALSE) + labs(title=\"       Active Treatment Dose 01\")\r\n\r\n\r\n# Active Treatment Dose 02\r\n\r\nactarm02 <- SR_data %>% filter(TRT=='ACTIVE TREATMENT DOSE 02')\r\nactarm02 <- actarm02[order(actarm02$WEEK01FL, actarm02$WEEK04FL, actarm02$WEEK08FL,\r\n                           actarm02$WEEK16FL, actarm02$WEEK24FL, actarm02$WEEK32FL,\r\n                           actarm02$WEEK40FL, actarm02$WEEK52FL),]\r\nactarm02$subjord <- seq(from=1, to=300)\r\nactarm02 <- actarm02 %>% dplyr::select(USUBJID, subjord, WEEK01FL, WEEK04FL, WEEK08FL, WEEK16FL,\r\n                                       WEEK24FL, WEEK32FL, WEEK40FL, WEEK52FL)\r\n\r\nactarm02 <- gather(actarm02, visit, colour, WEEK01FL:WEEK52FL)\r\nactarm02 <- actarm02[order(actarm02$subjord),]\r\nactarm02$bheight <- 1\r\n\r\n\r\nact2plot <- ggplot()  + scale_y_continuous(limits = c(0, 8), breaks = c(0.5, 7.5), \r\n                                           labels = c(\"0.5\"=\"\", \"7.5\" = \"\")) + \r\n  geom_bar(data = actarm02, mapping = aes(x = subjord, y = bheight, fill = colour), stat = \"identity\", position = position_stack(reverse = TRUE), show.legend = TRUE) +\r\n  coord_flip() + theme_bw() + theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),\r\n                                                 panel.grid.minor = element_blank()) + \r\n  theme(axis.ticks.x = element_blank(),\r\n        axis.ticks.y = element_blank(),\r\n        axis.text.y = element_blank()) + labs(x = \"\", y = \"\") + \r\n  scale_fill_continuous(low=\"#660025\", high=\"#edbf79\", guide=FALSE)+ labs(title=\"       Active Treatment Dose 02\")\r\n\r\n# Comparator Treatment\r\ncomparm <- SR_data %>% filter(TRT=='COMPARATOR TREATMENT')\r\ncomparm <- comparm[order(comparm$WEEK01FL, comparm$WEEK04FL, comparm$WEEK08FL,\r\n                         comparm$WEEK16FL, comparm$WEEK24FL, comparm$WEEK32FL,\r\n                         comparm$WEEK40FL, comparm$WEEK52FL),]\r\ncomparm$subjord <- seq(from=1, to=300)\r\ncomparm <- comparm %>% dplyr::select(USUBJID, subjord, WEEK01FL, WEEK04FL, WEEK08FL, WEEK16FL,\r\n                                     WEEK24FL, WEEK32FL, WEEK40FL, WEEK52FL)\r\n\r\ncomparm <- gather(comparm, visit, colour, WEEK01FL:WEEK52FL)\r\ncomparm <- comparm[order(comparm$subjord),]\r\ncomparm$bheight <- 1\r\n\r\n\r\ncompplot <- ggplot()  + scale_y_continuous(limits = c(0, 8), breaks = c(0.5,1.5,2.5,3.5,4.5,5.5,6.5,7.5), \r\n                                           labels = c(\"0.5\"=\"Week 1\", \"1.5\" = \"Week 4\", \"2.5\" = \"Week 8\", \"3.5\" = \"Week 16\",\r\n                                                      \"4.5\" = \"Week 24\", \"5.5\" = \"Week 32\", \"Week 6.5\" = \"Week 40\", \"7.5\" = \"Week 52\")) + \r\n  geom_bar(data = comparm, mapping = aes(x = subjord, y = bheight, fill = colour), stat = \"identity\", position = position_stack(reverse = TRUE), show.legend = TRUE) +\r\n  coord_flip() + theme_bw() + theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),\r\n                                                 panel.grid.minor = element_blank()) + \r\n  theme(axis.ticks.x = element_blank(),\r\n        axis.ticks.y = element_blank(),\r\n        axis.text.y = element_blank()) + labs(x = \"\", y = \"\") + \r\n  scale_fill_continuous(low=\"#660025\", high=\"#edbf79\", guide=FALSE)+ labs(title=\"       Comparator Treatment\")\r\n\r\n# Plotting together\r\n                                             \r\ntext1 = paste(\"Patients receiving the active treatment respond quicker\\nand are more likely to sustain this response.\\n\\n\\n\")\r\ntext2 = paste(\"\\nEach row represents one patient.\")\r\ntext3 = paste(\"\\n\\n\\nKey:________________________________________________________________________\")\r\ntext4 = paste(\"\\n\\n\\n_____-_No Response__________________________________________________________\")\r\ntext5 = paste(\"\\n\\n\\n____________________-_PASI75 Response_______________________________________\")\r\ntext6 = paste(\"\\n\\n\\n_______________________________________-_PASI90 Response____________________\")\r\ntext7 = paste(\"\\n\\n\\n__________________________________________________________-_PASI100 Response\")\r\n# White overlay to cover coloured underscores used for spacing\r\ntext8 = paste(\"\\n\\n\\n___________________________________________________________________________________\")\r\ntext9 = paste(\"\\n\\n\\n\\n\\n\\nMissing data was imputed using non-responder imputation (NRI).\")\r\nblankplot <- ggplot() + \r\n  annotate(\"text\", x = 4, y = 25, size=6, label = text1, fontface='bold') + \r\n  annotate(\"text\", x = 4, y = 25, size=4, label = text2) + \r\n  annotate(\"text\", x = 4, y = 25, size=4, label = text3) +\r\n  annotate(\"text\", x = 4, y = 25, size=4, label = text4, col=\"#660025\", fontface='bold') + \r\n  annotate(\"text\", x = 4, y = 25, size=4, label = text5, col=\"#93483f\", fontface='bold') +\r\n  annotate(\"text\", x = 4, y = 25, size=4, label = text6, col=\"#c0825c\", fontface='bold') +\r\n  annotate(\"text\", x = 4, y = 25, size=4, label = text7, col=\"#edbf79\", fontface='bold')+\r\n  annotate(\"text\", x = 4, y = 25, size=4, label = text8, col=\"white\", fontface='bold') +\r\n  annotate(\"text\", x = 4, y = 25, size=4, label = text8, col=\"white\", fontface='bold') + \r\n  annotate(\"text\", x = 4, y = 25, size=4, label = text8, col=\"white\", fontface='bold') +\r\n  annotate(\"text\", x = 4, y = 25, size=4, label = text8, col=\"white\", fontface='bold') +\r\n  annotate(\"text\", x = 4, y = 25, size=4, label = text8, col=\"white\", fontface='bold') +\r\n  annotate(\"text\", x = 4, y = 25, size=4, label = text9) +\r\n  theme_void()\r\n\r\n\r\n\r\n# Multiplot function taken from cookbook for r:\r\n# http://www.cookbook-r.com/Graphs/Multiple_graphs_on_one_page_%28ggplot2%29/\r\n\r\nmultiplot <- function(..., plotlist=NULL, file, cols=1, layout=NULL) {\r\n  library(grid)\r\n\r\n  # Make a list from the ... arguments and plotlist\r\n  plots <- c(list(...), plotlist)\r\n  \r\n  numPlots = length(plots)\r\n  \r\n  # If layout is NULL, then use 'cols' to determine layout\r\n  if (is.null(layout)) {\r\n    # Make the panel\r\n    # ncol: Number of columns of plots\r\n    # nrow: Number of rows needed, calculated from # of cols\r\n    layout <- matrix(seq(1, cols * ceiling(numPlots/cols)),\r\n                     ncol = cols, nrow = ceiling(numPlots/cols))\r\n  }\r\n  \r\n  if (numPlots==1) {\r\n    print(plots[[1]])\r\n    \r\n  } else {\r\n    # Set up the page\r\n    grid.newpage()\r\n    pushViewport(viewport(layout = grid.layout(nrow(layout), ncol(layout))))\r\n    \r\n    # Make each plot, in the correct location\r\n    for (i in 1:numPlots) {\r\n      # Get the i,j matrix positions of the regions that contain this subplot\r\n      matchidx <- as.data.frame(which(layout == i, arr.ind = TRUE))\r\n      \r\n      print(plots[[i]], vp = viewport(layout.pos.row = matchidx$row,\r\n                                      layout.pos.col = matchidx$col))\r\n    }\r\n  }\r\n}\r\n\r\n#Final Plot\r\nmultiplot(blankplot, act1plot, act2plot, compplot)\r\n\r\n\r\n\r\nBack to blog\r\n\r\nExample 2. Dashboard with barplots\r\nLink to Rmd file\r\nBack to blog\r\n\r\nExample 3. Trajectory clustering\r\nLink to Rmd file\r\nBack to blog\r\n\r\n\r\n\r\n",
    "preview": "posts/2021-05-09-wonderful-wednesdays-may-2021/./images/WWW_May_RhysWarham - Rhys Warham.png",
    "last_modified": "2025-08-22T14:49:25+02:00",
    "input_file": {},
    "preview_width": 787,
    "preview_height": 979
  },
  {
    "path": "posts/2021-04-13-wonderful-wednesdays-april-2021/",
    "title": "Wonderful Wednesdays April 2021",
    "description": "COPD is a disease that effects adults typically aged 40 years or older. It is a chronic condition that effects the lungs of a patient. The intervention in this study was an self-management app that aimed to improve inhaler use and exercise capacity in individuals with COPD. Users of the intervention could access different videos to educate themselves around different topics to better understand COPD and what steps help improve their condition, such as exercise or smoking cessation. Users could also report other detail such as their medication use, their CAT score and even a daily symptom score on how they are feeling that day. All this information could be shared with their doctor who can then monitor and manage patients to ensure they get the right treatment for them.",
    "author": [
      {
        "name": "Lovemore Gakava",
        "url": "https://www.psiweb.org/sigs-special-interest-groups/visualisation"
      }
    ],
    "date": "2021-04-14",
    "categories": [
      "Mobile app data",
      "Wonderful Wednesdays"
    ],
    "contents": "\r\nMobile app data\r\nThis was a 12-week small scale, open-label, parallel-group, randomised controlled trial of the app compared with usual care in people with mild-moderate COPD. The aim of the trial was to establish if the delivery of the self-management app would improve patients COPD impact. For this 60 participants were randomised 1:1 to either the app (N=29) or to usual care (N=31) and were stratified by COPD Severity, the study was not fully powered.\r\nIn the intervention arm:\r\nHow does individual app usage change over time?\r\nHow does app usage impact individual symptom and CAT scores?\r\nThe challenge was to explore these patterns/relationships visually.\r\n\r\nExample 1. Animation: Dot plot over time\r\n\r\nThe video can be found here.\r\nPros: This is a more effective replacement to patient profile listings. It’s easy at a glance to detect patterns across patients: for example some patients had more data compared to others. You can compare across days if there are different activities for each subject.\r\nCons:\r\nDifficult to see activities that occur on different weeks and at the same week day and time.\r\nDifficult to compare across individuals\r\nUse of the inverted y-axis where the bottom is maximum and the top is minimum can be viewed as counter-intuative. It would be great to align to the usual conventions of the minimum being at the bottom and the maximum at the top.\r\nUse of different colours for each patient is ineffective as each patient is shown separately.\r\nPossible improvements: Add an explanation to explain that activities occuring on the same week day for different weeks will be overlaid. Jittering could be used to show information where there is an overlay Frequency of activities is not visible and the size/area of the symbols could be adjusted to reflect this An overall plot showing all patients could be provided to check if there is a pattern over all patients A more effective way would be to show all the patients in grey and the patient for that panel in colour. This will help in comparing the patient to all the subjects.\r\nlink to code\r\n\r\nExample 2. Dashboard/Multiplot: LineUp\r\n\r\nThe app can be found here.\r\nPros:\r\nA great exploration tool - with all the information at one glance.\r\nGreat exploration functionalities such as sorting, filtering and analysis\r\nThe explanation video helps to understand the features and functionalities of the dashboard.\r\nAn additional benefit of being able to see the distribution of the variables of interest through use of the bar/histogram charts\r\nThe visualisation is easily extended to different types of datasets, which for example can be part of an appendix of clinical documents\r\nCons: It might be difficult to view on smaller screens\r\nPossible improvements:\r\nThere was a debate among the panelists on the advantages and disadvantages of the reuse of colour. There was a suggestion that it might be good to use intuitive colors, for example for COPD severity\r\nlight red or orange or dark red for severity. Another suggestion was to use different shades of grey for baseline characteristics.\r\nlink to code\r\n\r\nExample 3. Visualization app\r\n\r\nThe app can be found here.\r\nPros:\r\nA great exploration tool - with all the information at one glance.\r\nGreat exploration functionalities such as sorting, filtering and analysis\r\nThe explanation video helps to understand the features and functionalities of the dashboard.\r\nAn additional benefit of being able to see the distribution of the variables of interest through use of the bar/histogram charts\r\nThe visualisation is easily extended to different types of datasets, which for example can be part of an appendix of clinical documents\r\nCons: It might be difficult to view on smaller screens\r\nPossible improvements:\r\nThere was a debate among the panelists on the advantages and disadvantages of the reuse of colour. There was a suggestion that it might be good to use intuitive colors, for example for COPD severity\r\nlight red or orange or dark red for severity. Another suggestion was to use different shades of grey for baseline characteristics.\r\nExample 3. Visualization app\r\nComments for the visualisation with the title: When did users register activities and watch COPD Education Videos on the App?\r\nPros:\r\nThe overall organisation is great. The layout is crisp, clean and has very limited distractions.\r\nIt’s great to see all patients in one view.\r\nThe functionality of different sorting by the variable of interest makes it versatile to explore these.\r\nShowing all the other patients data in grey makes it easier to compare the selected patient across all patients.\r\nThe graph can be extended to other graphs we see in clinical trials\r\nThe clever use of the right aligning y-axis tick labels on the left makes it easier to connect the words with the horizontal lines.\r\nCons: The tradeoff of showing all patients in one view is that the lines for some patients will be very small\r\nPossible improvements: There is a great variation in the number videos watched and the scale may benefit from using a logarithmic scale or cut off data (e.g. greater than 10)\r\nOther representations: If the aim is to explore within patient patterns it might be best to have a filter to select a patient and the visualisation will show the different types of videos watched by that patient.\r\nlink to code\r\nCode\r\n\r\nExample 1. Animation: Dot plot over time\r\n\r\n\r\n# Data viz PSI\r\n\r\n#install.packages(\"readxl\")\r\nlibrary(\"readxl\")\r\nlibrary(lubridate)\r\nlibrary(dplyr)\r\nlibrary(ggplot2)\r\nlibrary(rayshader)\r\nlibrary(viridis)\r\nlibrary(gganimate)\r\nlibrary(scales)\r\n\r\nsetwd(\"C:/Users/lsh1703883/Documents/Data visualisation PSI\")\r\n\r\nviz_data <- read_excel(\"mobile app data.xlsx\")\r\n\r\nView(viz_data)\r\n\r\nsummary(viz_data)\r\n\r\nstr(viz_data)\r\n\r\nviz_data$time <- lubridate::with_tz(viz_data$time, \"Europe/London\")\r\n# hour\r\nviz_data$hour <- hour(viz_data$time)\r\ntable(viz_data$hour)\r\n# day \r\nviz_data$day <- wday(viz_data$date, label=TRUE)\r\ntable(viz_data$day)\r\n\r\n\r\n# day of the week\r\n\r\nviz_data <- viz_data %>% \r\n  group_by(AppID) %>% mutate(session=1:n()) \r\n\r\n\r\nviz_data <- viz_data %>% \r\n  group_by(AppID, date) %>% count(day,hour) \r\n\r\n\r\nviz_data <- na.omit(viz_data)\r\n\r\nView(viz_data)\r\n\r\n\r\np <- ggplot(\r\n  viz_data, \r\n  aes(x = as.factor(day), y=as.numeric(hour), size= 8)) + \r\n  geom_point(aes(fill = as.factor(AppID), colour=as.factor(AppID)))  + \r\n  xlab(\"Day of Activity in the App\")+\r\n  ylab(\"Time of Activity in the App \")+  \r\n  labs(color = \"Scenario\")+ \r\n  scale_color_discrete()+\r\n  theme_minimal()+\r\n  guides(size = TRUE)+\r\n  guides(alpha = FALSE)+\r\n  guides(linetype = FALSE)+\r\n  theme(legend.position = \"none\")+\r\n  theme(axis.text = element_text(size = 12),\r\n        title = element_text(size = 12,face=\"bold\"),\r\n        panel.border= element_rect(size=2,color=\"black\",fill=NA))+\r\n  scale_y_continuous(trans = \"reverse\",breaks=seq(3,21,3))\r\n  \r\n \r\np\r\n\r\nlibrary(transformr)\r\nlibrary(av)\r\n\r\np <- p + transition_states(AppID, transition_length = 15, state_length = 15) +\r\n  ggtitle(label = \"Day and Time of Activity in the App\",\r\n          subtitle= 'Now showing App ID {closest_state}')\r\n\r\n \r\np <- p + theme(plot.subtitle=element_text(size=18, hjust=0, face=\"italic\", color=\"dark blue\")) +\r\n  theme(plot.title=element_text(size=18, hjust=0.5, colour=\"black\", vjust=-1))\r\n\r\n\r\n\r\nfinal_animation<-animate(p,100,fps = 20,duration = 30, width = 950, height = 750,\r\n                         renderer = av_renderer())\r\n\r\n\r\nanim_save(\"./data_viz.mp4\",animation=final_animation)\r\n\r\n\r\n\r\nBack to blog\r\n\r\nExample 2. Dashboard/Multiplot: LineUp\r\nThe rmd file can be found here.\r\nBack to blog\r\n\r\nExample 3. Visualization app\r\nThe code can be found here.\r\nBack to blog\r\n\r\n\r\n\r\n",
    "preview": "posts/2021-04-13-wonderful-wednesdays-april-2021/./images/ITA_time_scores - Irene De la Torre Arenas.png",
    "last_modified": "2025-08-22T14:49:25+02:00",
    "input_file": {},
    "preview_width": 2081,
    "preview_height": 1165
  },
  {
    "path": "posts/2021-03-08-wonderful-wednesdays-march-2021/",
    "title": "Wonderful Wednesdays March 2021",
    "description": "The current example data set is focusing on missing data. Missing data are present in almost any (clinical) data set. Ways to visualize different patterns of missing values is the topic of this webinar / blog entry.",
    "author": [
      {
        "name": "Steve Mallett",
        "url": "https://www.psiweb.org/sigs-special-interest-groups/visualisation"
      }
    ],
    "date": "2021-03-10",
    "categories": [
      "Missing values",
      "Wonderful Wednesdays"
    ],
    "contents": "\r\nMissing data\r\nMissing data are present in almost any (clinical) data set. For this simulated data set, we assume a clinical phase III trial on Psoriasis. An active treatment arm is compared to a placebo arm. The main interest lies in the comparison of these two arms. (The comparison may be adjusted for age, gender, and BMI). The outcome variable is Pain which was collected on a visual analogue scale (range: 0-100). Greater values mean worse pain. Next to the original values, a dichotomized version of pain is calculated and included in the data set: Pain reduction from baseline of at least 30. Data were collected at baseline and at ten follow-up time points.\r\n\r\nExample 1. Simple Heatmap\r\nhigh resolution image\r\nThis graph is focussing on the missingness of the data, with proportions of missing data coded to different hues (colours). Missingness is shown by treatment group and visit, and is quite impactful with a clear message in the title.\r\nAn improved design might be to represent different degrees of missingness by colour value (lightness or darkness), as in general it is not so easy to interpret numeric data represented by different colours. Alternatively the missingness values could be added within the cells. The colour palette used here was colour-blind safe (which can be tested by downloading Oracle Color software).\r\nIt was questioned whether the graph needed to be a heatmap in this case, and whether a line plot might have been sufficient, possibly using colour in another way e.g. treatment. A further improvement might have been to also incorporate the pain score. In general, the “data to ink ratio” is rather low, and this design of graph may be more effective for a dataset with more variables, e.g. large number of treatments, or in a machine learning application.\r\nlink to code\r\n\r\nExample 2. Mirrored Histogram\r\nhigh resolution image\r\nThis graph certainly has a clear message! The graph has pooled treatment groups and visits, and is focussing on the relationship between missingness and age group. In terms of patients with complete data (zero missing data), there is clearly a large difference between age groups.\r\nIt is not clear why 55 years was used as the threshold value, as this was not specified in the problem description, and there does not seem to be an obvious rationale (e.g. median value). Also, the labelling of the subgroups could have been be improved to show “<55 years” and “>=55 years”. Use of “NA” should also be avoided, as the meaning would not be clear to most audiences, and some panellist thought that a simpler design with fewer gridlines would be a little more effective.\r\nThere was a difference of opinion regarding whether to include the “0” category. The large number of patients in the <55 group distorts the horizontal axis range and creates a lot of white space in the graph overall. However others thought that this was the essential message of the graph. Finally, when showing relative frequency, one should consider using percentages rather than number of subjects.\r\nlink to code\r\n\r\nExample 3. Sankey Diagram\r\n\r\nThe pdf file can be found here.\r\nThis was the first plot presented that included the actual pain scores, which have been categorised and summarised over time separately for the two treatment groups. Categorisation allows missing data categories to also be included alongside the efficacy data, with separate categories for single missing visits and monotone missing values (dropouts). A Sankey Diagram is effective in showing shifts between categories at the individual patient level, and in this case a subset of visits has been included to allow the flows to be seen more easily (although this has also created some issues with interpreting the “no subsequent visit” category).\r\nAs well as showing overall trends, the graph provides insights into the pain scores that preceded withdrawal from the study. The results are showing a rapid improvement in both treatment groups at the start of the study, possibly due to regression to the mean resulting from study inclusion criteria selecting a cohort of patients with relatively high baseline pain score.\r\nlink to code\r\n\r\nExample 4. Animated Scatter Plot\r\n\r\n\r\nThe first animated visualization can be found here.\r\nThe second animated visualization can be found here.\r\nThis plot shows an animated representation of pain score in each treatment group, and requires little explanation to the viewer. The plot is effective in showing obvious trends in the data, in this case with patients in the active treatment group showing improved efficacy, particularly after week 24. Also, data were only observed at discrete visits, with data between visits having been derived using linear interpolation.\r\nThe graph could have been improved by representing missingness in the data, for example including imputed data in a different colour. The graph would also benefit from an effective title. Some other possible variations were discussed, including a moving boxplot, or showing the proportions of patients above a set of pain thresholds over time, to more effectively quantify differences between treatment groups. Another idea discussed was for the individual patient trajectories to be shown (i.e. Spaghetti plot), superimposed onto the animation.\r\nlink to code\r\n\r\nExample 5. Complex Heatmap\r\n\r\nThe app can be found here\r\nThis graph provides a rich source of information that would be suitable as an exploratory plot, e.g. atdatabase freeze, to gain a deep understanding of the data. There are several components to this graph.The body of the graph is a lasagna plot, showing individual patient data with colour-coded pain scores. The graph is divided into different panels according to treatment group and whether or not patients had some missing data. This design allows obvious differences between the treatment groups to be discerned easily, i.e. that patients in the active treatment group generally showed lower pain scores after visit 4 but with more missing data. In general, lasagne plots (and other graphsshowing individual patient level data) can benefit from sorting. A further design improvement might have been to include the legend closer to the body of the plot. The stacked barchart at the top shows the proportion of patients with missing data, monotone and overall, although the overall message wasn’t clear to some of the panellists. It would be useful to somehow provide more insight into relationship between pain and missingness, e.g. to summarise outcomes that preceded missing data.The line plot at the bottom summarise mean pain score for each of the four groups, and suggests that the missingness pattern is MCAR, as pairs of lines for each treatment group are largely superimposable.The graph included marginal lasagne plots and boxplots, showing the distribution of age and BMI in the different groups. The boxplot confirmed the relationship between age and missingness seen in the mirrored histogram, although it was questioned whether the additional lasagne plots added value to the graph.\r\nlink to code\r\n\r\nExample 6. Scrollytelling\r\n\r\nThe scrollitelling website can be found here.\r\nScrollytelling is a relatively new graphical format, that allows the viewer to scroll through a series of graphs, with a text panel providing a changing commentary on the interpretation of the data. The panellists really appreciated the originality of this format, which provides the ability to present and discuss several different aspects of the data.\r\nFirstly, a stacked barchart shows the proportion of missing data by visit (not including treatment group). This graph was quite effective, although it was thought that including time on vertical axis is not optimal, and it’d also be useful to include the numbers in the bars. Also the title is highlighting “missing data”, but the left part of the bars is showing non-missing data, which is a little counter-intuitive.\r\nScrolling on to the Upset plot, and the graph presents vertical barcharts showing the prevalence of different patterns of missing data. For simplicity, the graph only includes a subset of categories (visit 6 onwards). The graph is effective in telling a clear story that if visit 6 is missed, then subsequent visits are likely to be missing. However the horizontal bars are not so easy to interpret.\r\nNext up was a lasagna plot, which in this case is sorted. Adding colour-coding for pain score, and including treatment group would have improved the interpretation in terms of efficacy.\r\nA series of boxplots are provided next, showing the relationship between missingness and covariates(BMI and Age), which clearly shows the higher degree of missingness seen in older patients. However there was some confusion in terms of interpreting the overall horizontal and vertical axes, which would have benefited from clearer labelling.\r\nFinally, the mean pain scores in the treatment groups are summarised in line plots, which shows the overall trend in terms of efficacy, although may have been easier to interpret if the treatment groupshad been superimposed.\r\nlink to code\r\nCode\r\n\r\nExample 1. Simple Heatmap\r\n\r\n\r\n# Heatmap:\r\n##########\r\n\r\n# Load required packages:\r\nrequire(naniar)\r\nrequire(ggplot2)\r\n\r\n# Load data set:\r\ndat <- read.csv(\"missing_data.csv\")\r\n\r\n# Focus only on continuous pain variables:\r\ndat <- dat[, c(1:11, 25)]\r\n\r\n# Reshape data into long format and do some data preparation steps:\r\ndat.long <- reshape(dat, varying = 1:11, direction = \"long\", sep = \".\")\r\ndat.long <- dat.long[, -4]\r\ndat.long$time <- factor(dat.long$time)\r\n\r\n\r\ndat.long.pbo <- dat.long[which(dat.long$trt == \"pbo\"), ]\r\ndat.long.act <- dat.long[which(dat.long$trt == \"act\"), ]\r\n\r\nnames(dat.long.act)[3] <- \"active\"\r\n\r\ndat.long.pbo <- dat.long.pbo[, -1]\r\ndat.long.act <- dat.long.act[, -1]\r\n\r\ndat.long.combined <- dat.long.act\r\ndat.long.combined$placebo <- dat.long.pbo$pain\r\n\r\n# Create heatmap:\r\ngg_miss_fct(x = dat.long.combined, fct = time) +\r\n  ggtitle(\"Percentage of missing values increases over time\r\nand is generally higher in the active group\") +\r\n  xlab(\"Visit\") + ylab(\"Treatment\") +\r\n  theme(axis.text.x = element_text(angle = 0, hjust = 0.5),\r\n        text = element_text(size = 18))\r\nggsave(\"heatmap.png\", height = 5, width = 10)\r\n\r\n\r\n\r\nBack to blog\r\n\r\nExample 2. Mirrored Histogram\r\nThe Rmd file can be found here\r\nBack to blog\r\n\r\nExample 3. Sankey Diagram\r\nThe sas file can be found here.\r\nBack to blog\r\n\r\nExample 4. Animated Scatter Plot\r\nThe sas file for the first visualization can be found here\r\nThe sas file for the second visualization can be found here\r\nBack to blog\r\n\r\nExample 5. Complex Heatmap\r\nThe Rmd file can be found here\r\nBack to blog\r\n\r\nExample 6. Scrollytelling\r\nThere is no code available (yet).\r\nBack to blog\r\n\r\n\r\n\r\n",
    "preview": "posts/2021-03-08-wonderful-wednesdays-march-2021/./images/ch_missing_data - Agustin Calatroni.png",
    "last_modified": "2025-08-22T14:49:25+02:00",
    "input_file": {},
    "preview_width": 1206,
    "preview_height": 978
  },
  {
    "path": "posts/2021-02-07-wonderful-wednesdays-february-2021/",
    "title": "Wonderful Wednesdays February 2021",
    "description": "The DLQI is the most frequently used method for evaluating quality of life for patients with different skin conditions. There are 10 questions, covering the following topics: symptoms, embarrassment, shopping and home care, clothes, social and leisure, sport, work or study, close relationships, sex, treatment. Each question refers to the impact of the skin disease over the previous week and is scored from 0 to 3, giving a possible score range from 0 (meaning no impact of skin disease on quality of life) to 30 (meaning maximum impact on quality of life). This month's challenge was to use an effective visualisation to show the effect of treatment on DLQI scores across time points, possibly also reflecting the DLQI's multidimensional nature.",
    "author": [
      {
        "name": "PSI VIS SIG",
        "url": "https://www.psiweb.org/sigs-special-interest-groups/visualisation"
      }
    ],
    "date": "2021-02-10",
    "categories": [
      "DLQI",
      "Wonderful Wednesdays"
    ],
    "contents": "\r\nDLQI data set\r\nIn this month’s dataset, DLQI has been administered in a phase 3 clinical trial to patients with psoriasis. There are two imbalanced treatment groups, with 150 patients randomised to Placebo (Treatment A) and 450 to the active treatment (Treatment B). DLQI responses are recorded at Baseline and Week 16 (although some DLQI assessment is missing at Week 16), allowing the treatment effect in terms of Quality of Life to be assessed. The Psoriasis Area and Severity Index (PASI) is also recorded at baseline.\r\n\r\nExample 1. Heatmaps\r\nhigh resolution image\r\nThis example uses a heatmap to display how often each item is assigned a given level of response when each other item has been given that same level of response. The heatmap is coloured according to the proportion of times for which this same level of response is observed, which is always equal to 1 on the diagonal as can be easily seen.\r\nIt was immediately noted that this example is extremely colourful which makes it stand out nicely from the white background. However, it was felt that the colour spectrum could be flipped - usually on a white background darker colours represent something ‘more’ rather than something ‘less’. Given that DLQI items are scored on an ordinal scale, it was highlighted that it may better to look at the relationships between item responses in terms of being ‘at least’ or ‘at most’ a certain score, rather than ‘equal to’.\r\nThe main issue with this plot is that it is difficult to know what exactly the author is trying to tell us. We do not see any differentiation between treatments or time points and therefore we are unable to determine the effects which these had on DLQI scores.\r\nlink to code\r\n\r\nExample 2. Mixed models\r\n\r\nThe app can be found here.\r\nIn this next example, we have the results of mixed models visualised in an interactive html document. The figure is split into three columns, allowing us to see all of the effects we may be interested in: treatment by visit; within treatment, between visit differences; between treatment, between treatment differences.\r\nOne of the features that is really nice about this example is that, unlike many other examples, it considers an alternative way to sort the different items using a dendrogram. This allows us to quickly see two clear clusters in the items, although it was felt that total score should not have been included in this clustering. It is also great that the distributions are shown around the estimated effects, allowing us to quickly see the uncertainty in these estimates.\r\nThere were mixed feelings around the large amount of white space included in some of the columns. In some ways, this could be seen as unnecessary, but it was pointed out that the white space provides a nice level of consistency, allowing us to get an immediate impression of effect sizes on the upper plots which are quite a way from the labels on the horizontal axis. The vertical reference lines included are also really nice for getting a quick impression of effect sizes and how meaningful these are.\r\nSimilarly, there were mixed feelings around the level of complexity of this example, with the conclusion being that its appropriateness would largely depend on how technical the audience was. Whilst it may be slightly difficult for a non-technical audience to understand, it was felt that this example would be great for providing a large amount of information to technical audiences, particularly given that tables of values were provided in additional tabs alongside the figure. The group envisaged many applications where similar figures would be great to have, such as meta-analyses and subgroup analyses.\r\nThe final thing discussed at length for this example was the representation of the effect sizes. The group really liked that the colours used correspond to those provided in the above text, allowing us to determine treatment groups without the need for a legend. Similarly, it was great to see the different effect sizes consistently pointing either upwards or downwards for the different treatment groups, although it would be beneficial to have this also described in the text. This would allow the figure to be interpreted without having to be able to distinguish between the colours.\r\nThe panel highlighted a really nice tool which allows us to see how easily certain colours are distinguished by individuals with different kinds of colour-blindness. Whilst it was shown that the blue and green used here are not too difficult to distinguish for most individuals, the tool was used to identify colours which could be even easier to differentiate between.\r\nlink to code\r\n\r\nExample 3. Change in mean scores\r\nhigh resolution image\r\nThe dot plot displayed here is a great way to quickly see the effect of treatment on the different DLQI items. For each item and each group, we see mean scores for both Baseline and Week 16, which are coloured differently and consistently to allow patterns to be quickly and easily identified. Whilst it is not something commonly seen, the position of the legend in the middle of the page works really nicely and can be quickly referenced for each plot.\r\nOverall, this is a very clean design and provides a clear message. However, there were some ways in which the panel felt that the layout of this example could be improved. Whilst it is easy to compare within treatment groups, it is not so easy to make comparisons between treatment groups here. The group proposed combining the two treatment groups in a vertical layout, possibly using different colours to differentiate between treatment groups and arrows to indicate the direction of the effect. This would also mean that labels of the different items would not need to be repeated as they currently are. This vertical structure could be accommodated by using less space for the first figure showing effect sizes on overall means. Having this so large is not necessarily a bad thing if it shows key information which needs to be emphasised, but we should be intentional about it when doing things such as this.\r\nUnlike in the previous example, here the items are sorted in the order they appear on the questionnaire. Alternative ways to sort the items could be considered to highlight those which are most interesting, such as sorting by baseline means or by effect size. There are also a few tweaks to the horizontal axes which the group felt should be made. Firstly, it would be better to start from zero on the first dot plot, otherwise the effect size appears to be exaggerated. Further, the horizontal axes and spacing between labels should be made consistent for the two treatment groups, allowing for direct comparison between the two figures.\r\nlink to code\r\n\r\nExample 4. Histograms\r\n\r\nhigh resolution image\r\nThis example shows four histograms which nicely display the distributions of responses for the different treatment groups and the different time points. Overall it is a very clean design with minimal clutter, no unnecessary tick-marks and the gridlines very much in the background. Again, this example makes it easy to get an impression of the treatment effect, with a clear ‘shift’ between time points for the active treatment.\r\nWhilst the current layout with the columns corresponding to treatment and rows corresponding to time allows us to easily see this shift, it goes against our intuition which is to think of changes in time happening along the horizontal axis. Switching the rows and columns may be more in line with what we naturally expect to see.\r\nThere are a couple of issues with this example that the group felt could be easily addressed. Firstly, given that DLQI scores can only be equal to natural numbers, a bin width of one would be more suitable. Otherwise, as is the case with the current bin width, some bars correspond to only one DLQI score whereas others correspond to more than one. This results in the misleading ‘up and down’ nature of the histograms. Further, there should be more consistency between the y-axes on the top and bottom panels. The change in axes in the current example gives an impression of ‘squashing’ for placebo when actually there was not a great deal of change.\r\nOverall, the group felt that this example only needed some easily implemented changes to become a really nice visualisation, and thought this was a great opportunity to highlight how some of these changes may look, as displayed in the next example.\r\nlink to code\r\nExample 5. Histograms updated\r\n\r\nhigh resolution image\r\nHere we see a really effective visualisation which has been produced with only minimal additional work to the previous example. Firstly, we see that a more appropriate and telling title has been used and a footnote has been added to aid in interpretation for those individuals who are unfamiliar with the DLQI. We also see that the layout has been changed with changes in time occurring horizontally as we expect to see.\r\nDifferent colours have also been used to allow the two treatment groups to be easily distinguished, and the titles have been coloured accordingly. Consistent spacing has been used on the vertical axes to allow for easy comparisons, and these axes now represent percentages rather than counts to allow for more meaningful comparison between the imbalanced treatment groups. There was some discussion amongst the group regarding the fact that lower panel is shorter, but there were no strong feelings about this given that the spacing on the vertical axes is consistent.\r\nProbably the biggest improvement here, though, is that a bin width of one has now been used. This simple change allows the histograms to be interpreted in a much more meaningful way for a score that can only take values in the natural numbers.\r\nlink to code\r\nExample 6. Lineplots\r\nhigh resolution image\r\nhigh resolution image\r\nThese slope graphs provide a clear and meaningful picture of patient level changes in DLQI scores for the different items and treatment groups. Here, the circles are proportional to the percentage of patients with a given response to that item at that visit, and the strips represents the ‘flow’ of patients across response levels between the visits. The decision to make the circles proportional to percentages rather than counts is the correct one here and allows for meaningful comparison between the imbalanced treatment groups.\r\nThis is a really nice example of a plot type which we don’t often see and tells a good story. The consistent improvement for the active treatment is clear to see and we see that there is not too much happening in terms of a response for placebo. Whilst we do not get the same level of understanding of marginal distributions that we might with a histrogram, we do still get some notion and this is balanced by the additional level of patient understanding which we have.\r\nThe group liked how the flow of patients could easily be seen by the intensity of lines, but felt that either a greater level of ‘minimum’ intensity or a different colour to blue could be used to still allow even a single patient’s movement to be seen, which is currently slightly difficult. However, it was acknowledged that not being able to see a lot within certain items for placebo is in itself meaningful.\r\nThe consistent use of colour between plots and titles allows us to easily distinguish between treatment groups, although it was felt that a more telling title may have been used. It is great that item descriptions rather than just numbers are provided, and the panel really liked that we see the effects when certain items are combined together into different domains. Grouping of the ten DLQI items into these six domains is something which is commonly done in clinical practice but is not something which was considered by many of the other examples. It was acknowledged that the inclusion of these additional plots for the six domains justifies keeping the items ordered as they appear on the questionnaire, so we can clearly see which items correspond to which domains. However, there was still some discussion as to whether an alternative ordering of both individual items and domains could be considered.\r\nThis example has a long, vertical layout. This would be great for something like a poster, but is maybe less convenient for viewing on screen. There was a feeling that when being presented as a poster, a lighter background may be more suitable.\r\nlink to code\r\nCode\r\n\r\nExample 1. Heatmaps\r\n\r\n\r\nlibrary(GGally)\r\nlibrary(dplyr)\r\nlibrary(tidyr)\r\nlibrary(patchwork)\r\n\r\nqol <- read.csv(\"Data/2021-01-13-QualityOfLife.csv\")\r\n\r\nhead(qol)\r\nglimpse(qol)\r\n\r\nqol2 <- qol %>% \r\n    mutate_if(function(x){length(unique(x)) < 6}, factor)\r\n\r\nggpairs(qol2[qol2$VISIT == \"Week 16\", c(2, 3, 15)], \r\n    mapping = aes(colour = TRT))\r\nggpairs(qol[qol$VISIT == \"Week 16\", 5:14])\r\nggpairs(qol2[qol2$VISIT == \"Week 16\", 5:14])\r\nggpairs(qol[qol$VISIT == \"Week 16\", 5:14], \r\n    mapping = aes(colour = qol[qol$VISIT == \"Week 16\",]$TRT))\r\nggpairs(qol2[qol2$VISIT == \"Week 16\", 5:14], \r\n    mapping = aes(colour = qol2[qol2$VISIT == \"Week 16\",]$TRT))\r\n\r\n\r\n#### Goal 1: Multidimensional nature of DLQI ####\r\n# As integers, they're all highly correlated\r\n# As categorical variables, need an intelligent way to summarise\r\n# Something like PCA or NMF, but for categories?\r\n# Collection of stacked bar plots?\r\n# Percent agreement between categories?\r\n# Compound Poisson model for discrete categories?\r\n#### Goal 2: Show the effect of treatment, incorporate multidimensionality ####\r\n\r\n\r\n# Attempt 1: Conditional Distributions\r\n\r\ndlq <- select(qol, starts_with(\"DLQI\")) %>% \r\n    select(-DLQI_SCORE)\r\nheatmaps <- lapply(0:3, function(w){\r\n    m1 <- sapply(1:10, function(x){\r\n        f1 <- filter(dlq, dlq[, x] == w)\r\n        if(nrow(f1) > 0) {\r\n            return(apply(f1, 2, function(y) mean(y == w, na.rm = TRUE)))\r\n        } else {\r\n            return(rep(NA, 10))\r\n        }\r\n    })\r\n    colnames(m1) <- rownames(m1)\r\n    m1 <- m1 %>% as.data.frame() %>% \r\n        tibble::rownames_to_column(var = \"from\") %>% \r\n        pivot_longer(-from, names_to = \"to\", values_to = \"both_0\")\r\n    return(m1)\r\n})\r\n\r\n\r\nnumwords <- c(\"Zero\", \"One\", \"Two\", \"Three\")\r\nwrap_plots(lapply(1:4, function(i) {\r\n    zeros <- apply(dlq, 2, function(x) sum(x == i - 1, na.rm = TRUE))\r\n    ggplot(heatmaps[[i]]) +\r\n        aes(x = to, y = from, fill = both_0) + \r\n        geom_tile() +\r\n        labs(x = paste0(\"...how often is this measure \", i - 1, \"?\"), \r\n            y = paste0(\"When this measure is \", i - 1, \"...\"),\r\n            title = paste0(numwords[i], \" Together\"),\r\n            fill = paste0(\"Both \", numwords[i])) +\r\n        scale_fill_viridis_c(option = \"C\") + \r\n        annotate(\"text\", x = 1:10, y = 1:10, label = zeros) +\r\n        theme(aspect.ratio = 1, \r\n            axis.text.x = element_text(angle = 90, vjust = 0.5))\r\n}))\r\n\r\n\r\n\r\nBack to blog\r\n\r\nExample 2. Mixed models\r\nThe R Markdown file can be found here.\r\nBack to blog\r\n\r\nExample 3. Change in mean scores\r\n\r\n\r\n# Load data\r\ndql <- read.csv(\"ww2020_dlqi.csv\")\r\nattach(dql)\r\nView(dql)\r\n\r\n# Load library\r\nlibrary(tidyverse)\r\nlibrary(ggplot2)\r\nlibrary(ggthemes)\r\nlibrary(ggcharts)\r\nlibrary(ggalt)\r\n\r\n# Seperate treatment arms\r\nnew_A <- \r\n  dql %>% \r\n  filter(TRT==\"A\")\r\nnew_B <- \r\n  dql %>% \r\n  filter(TRT==\"B\")\r\n\r\n## Treatment A : Placebo\r\n\r\ndtA <- new_A %>%\r\n  # Remove missing data\r\n  filter(!is.na(new_A)) %>% \r\n  # Select relevant variables\r\n  select(\r\n    DLQI101, DLQI102, DLQI103, DLQI104, DLQI105,\r\n    DLQI106, DLQI107, DLQI108, DLQI109, DLQI110,\r\n    VISIT\r\n    ) %>%\r\n  # Summarize mean score for each question grouped by visit\r\n  # while also renaming variables to indicate the meaning of each score\r\n  group_by(VISIT) %>%\r\n  summarise(\r\n    Symptoms = mean(DLQI101, na.rm = T),\r\n    Embarrassment = mean(DLQI102, na.rm = T),\r\n   `Shopping and home care` = mean(DLQI103, na.rm = T),\r\n    Clothes = mean(DLQI104, na.rm = T),\r\n   `Social and leisure` = mean(DLQI105, na.rm = T),\r\n    Sport = mean(DLQI106, na.rm = T),\r\n    `Work and study` = mean(DLQI107, na.rm = T),\r\n    `Close relationships` = mean(DLQI108, na.rm = T),\r\n    Sex = mean(DLQI109, na.rm = T),\r\n    Treatment = mean(DLQI110, na.rm = T)\r\n   )\r\n\r\n# Tidying data\r\ndtA <- \r\n  dtA %>% \r\n  pivot_longer(\r\n    !VISIT,\r\n    names_to = \"Domain\",\r\n    values_to = \"Mean_Score\"\r\n    )\r\n\r\n# Seperating the visit variable into baseline and week 16\r\ndtA <-\r\n  dtA %>% \r\n  pivot_wider(\r\n    names_from = VISIT,\r\n    values_from = Mean_Score\r\n    )\r\n\r\n# Ensuring the domain levels are ordered the same\r\ndtA <-\r\n  dtA %>% \r\n  mutate(\r\n    Domain = factor(Domain,\r\n                    levels = c(\"Symptoms\", \"Embarrassment\",\r\n                               \"Shopping and home care\",\r\n                               \"Clothes\", \"Social and leisure\",\r\n                               \"Sport\", \"Work and study\",\r\n                               \"Close relationships\",\r\n                               \"Sex\", \"Treatment\"))\r\n    )\r\n\r\n# Constructing a dumbbell plot using ggalt package with a ggchart theme\r\n\r\n(a <- \r\n  ggplot()+\r\n  geom_dumbbell(\r\n    data = dtA,\r\n    aes(\r\n      y = Domain,\r\n      x = Baseline,\r\n      xend = `Week 16`\r\n      ),\r\n    size = 1.5,\r\n    color = \"lightgray\",\r\n    size_x = 3,\r\n    colour_x = \"violetred4\",\r\n    size_xend = 3,\r\n    colour_xend = \"maroon1\"\r\n    )\r\n  + theme_ggcharts(grid = \"Y\")\r\n  + labs(\r\n    title = \"Placebo\"\r\n    )\r\n  + theme(\r\n    plot.title = element_text(hjust = 0.5),\r\n    axis.title.y = element_blank(),\r\n    axis.title.x = element_blank(),\r\n    axis.text.y = element_text(size = 9)\r\n    ))\r\n\r\n## Treatment B : Active Treatment\r\n\r\ndtB <- new_B %>%\r\n  # Remove missing data\r\n  filter(!is.na(new_B)) %>% \r\n  # Select relevant variables\r\n  select(\r\n    DLQI101, DLQI102, DLQI103, DLQI104, DLQI105,\r\n    DLQI106, DLQI107, DLQI108, DLQI109, DLQI110,\r\n    VISIT\r\n    ) %>%\r\n  # Summarize mean score for each question grouped by visit\r\n  # while also renaming variables to indicate the meaning of each score\r\n  group_by(VISIT) %>%\r\n  summarise(\r\n    Symptoms = mean(DLQI101, na.rm = T),\r\n    Embarrassment = mean(DLQI102, na.rm = T),\r\n    `Shopping and home care` = mean(DLQI103, na.rm = T),\r\n    Clothes = mean(DLQI104, na.rm = T),\r\n    `Social and leisure` = mean(DLQI105, na.rm = T),\r\n    Sport = mean(DLQI106, na.rm = T),\r\n    `Work and study` = mean(DLQI107, na.rm = T),\r\n    `Close relationships` = mean(DLQI108, na.rm = T),\r\n    Sex = mean(DLQI109, na.rm = T),\r\n    Treatment = mean(DLQI110, na.rm = T)\r\n    )\r\n\r\n# Tidying data\r\ndtB <- \r\n  dtB %>% \r\n  pivot_longer(\r\n    !VISIT,\r\n    names_to = \"Domain\",\r\n    values_to = \"Mean_Score\"\r\n    )\r\n\r\n# Seperating the visit variable into baseline and week 16\r\ndtB <-\r\n  dtB %>% \r\n  pivot_wider(\r\n    names_from = VISIT,\r\n    values_from = Mean_Score\r\n    )\r\n\r\n# Ensuring the domain levels are ordered the same\r\ndtB <-\r\n  dtB %>% \r\n  mutate(\r\n    Domain = factor(Domain,\r\n                    levels = c(\"Symptoms\", \"Embarrassment\",\r\n                               \"Shopping and home care\",\r\n                               \"Clothes\", \"Social and leisure\",\r\n                               \"Sport\", \"Work and study\",\r\n                               \"Close relationships\",\r\n                               \"Sex\", \"Treatment\"))\r\n    )\r\n\r\n# Constructing a dumbbell plot using ggalt package with a ggchart theme\r\n\r\n(b <- \r\n  ggplot()+\r\n  geom_dumbbell(\r\n    data = dtB,\r\n    aes(\r\n      y = Domain,\r\n      x = Baseline,\r\n      xend = `Week 16`\r\n      ),\r\n    size = 1.5,\r\n    color = \"lightgray\",\r\n    size_x = 3,\r\n    colour_x = \"violetred4\",\r\n    size_xend = 3,\r\n    colour_xend = \"maroon1\")\r\n  + theme_ggcharts(grid = \"Y\") \r\n  + labs(\r\n    title = \"Active Treatment\"\r\n    ) + theme(\r\n    plot.title = element_text(hjust = 0.5),\r\n    axis.title.y = element_blank(),\r\n    axis.title.x = element_blank(),\r\n    axis.text.y = element_text(size = 9)\r\n        ))\r\n\r\n## Mean total score for both treatment arms\r\n\r\ntotaldt <- \r\n  dql %>%\r\n  # Remove missing data\r\n  filter(!is.na(dql)) %>%\r\n  # select and summarizing relevant variables\r\n  select(DLQI_SCORE, TRT, VISIT) %>%\r\n  group_by(TRT, VISIT) %>%\r\n  summarise(\r\n    qtotal = mean(DLQI_SCORE, na.rm = T)\r\n    )\r\n\r\n# Tidying data\r\ntotaldt <- \r\n  totaldt %>% \r\n  pivot_wider(\r\n    names_from = VISIT,\r\n    values_from = qtotal\r\n    )\r\n\r\ntotaldt$TRT[totaldt$TRT==\"A\"] <- \"Placebo\"\r\ntotaldt$TRT[totaldt$TRT==\"B\"] <- \"Active Treatment\"\r\n\r\n# Constructing a dumbbell plot using ggcharts\r\n\r\n(c <- \r\n  dumbbell_chart(\r\n    data = totaldt,\r\n    x = TRT,\r\n    y1 = Baseline,\r\n    y2 = `Week 16`,\r\n    line_color = \"lightgray\",\r\n    line_size = 3,\r\n    point_color = c(\"violetred4\", \"maroon1\"),\r\n    point_size = 7\r\n  ) + labs(\r\n    x = NULL,\r\n    y = NULL,\r\n    title = \"Dermatological Life Quality Index DLQI\",\r\n    subtitle = \"Change in mean scores from Baseline to Week 16  (Top chart is total score)\",\r\n    caption = \"Samah Abdelaal\"\r\n    ) + theme(\r\n    axis.text.y = element_text(face = \"bold\"),\r\n    plot.title = element_text(size = 14,\r\n                              face = \"bold\"),\r\n    plot.subtitle = element_text(size = 12),\r\n    plot.caption = element_text(size = 11,\r\n                                face = \"italic\"),\r\n    legend.position = \"bottom\"\r\n    ))\r\n\r\n# Compine all three plots\r\nlibrary(gridExtra)\r\n\r\ngrid.arrange(c, arrangeGrob(b, a, ncol = 2), nrow = 2)\r\n\r\n\r\n\r\nBack to blog\r\n\r\nExample 4. Histrograms\r\n\r\n\r\n# Load data\r\ndql <- read.csv(\"ww2020_dlqi.csv\")\r\nattach(dql)\r\nView(dql)\r\nsummary(dql)\r\n\r\n# Load Library\r\nlibrary(tidyverse)\r\nlibrary(ggplot2)\r\nlibrary(ggthemes)\r\nlibrary(ggcharts)\r\n\r\n# Select relevant variables\r\ndql_renamed <-\r\n  dql %>%\r\n  select(\r\n    TRT, VISIT, DLQI_SCORE\r\n    )\r\n\r\n# Rename treatment levels\r\ndql_renamed$TRT[dql_renamed$TRT==\"A\"] <- \"Placebo\"\r\ndql_renamed$TRT[dql_renamed$TRT==\"B\"] <- \"Active Treatment\"\r\n\r\n# Seperate visits\r\n\r\n# Baseline visit\r\ntotalbaseline <- \r\n  dql_renamed %>% \r\n  filter(VISIT==\"Baseline\")\r\n\r\n# Construct a histogram for each treatment arm at baseline visit\r\n(d <- \r\n  ggplot(\r\n    data = totalbaseline,\r\n    aes(\r\n      x = DLQI_SCORE\r\n      ))\r\n  + geom_histogram(\r\n    binwidth = 1.5,\r\n    color = \"grey\",\r\n    fill = \"deeppink3\"\r\n    ) +\r\n  facet_grid(~ TRT)\r\n  + theme_ng(grid = \"X\")\r\n  + labs(\r\n    x = \"DLQI Score\",\r\n    y = \"Count\",\r\n    title = \"Total DLQI Score\",\r\n    subtitle = \"At Baseline\",\r\n    caption = \"Samah Abdelaal\")\r\n  + theme(\r\n    axis.title.x = element_blank(),\r\n    plot.title = element_text(size = 20,\r\n                              face = \"bold\"),\r\n    plot.subtitle = element_text(size = 18),\r\n    plot.caption = element_text(size = 15,\r\n                                face = \"bold.italic\")\r\n    ))\r\n\r\n\r\n# Week 16 visit\r\ntotalweek16 <- \r\n  dql_renamed %>% \r\n  filter(VISIT==\"Week 16\")\r\n\r\n(e <- \r\n  ggplot(\r\n    data = totalweek16,\r\n    aes(\r\n      x = DLQI_SCORE\r\n      )\r\n    )\r\n  + geom_histogram(\r\n    binwidth = 1.5,\r\n    color = \"grey\",\r\n    fill = \"deeppink3\"\r\n    ) +\r\n  facet_grid(~ TRT)\r\n  + theme_ng(grid = \"X\")\r\n  + labs(\r\n    x = \"DLQI Score\",\r\n    y = \"Count\",\r\n    subtitle = \"At Week 16\"\r\n    ) +\r\n  theme(\r\n    plot.subtitle = element_text(size = 18)\r\n    ))\r\n\r\n# Compine plots\r\nlibrary(gridExtra)\r\n\r\ngridExtra::grid.arrange(d, e, nrow = 2)\r\n\r\n\r\n\r\nBack to blog\r\n\r\nExample 5. Histrograms updated\r\n\r\n\r\n# Load data\r\ndql <- read.csv(\"O:\\\\1_Global_Biostatistics\\\\Biostatistics Innovation Center\\\\BIC Project - Subgroup Analyses\\\\Screening\\\\R-Package\\\\Supports\\\\WW\\\\ww2020_dlqi.csv\")\r\nattach(dql)\r\nView(dql)\r\nsummary(dql)\r\n\r\n# Load Library\r\nlibrary(tidyverse)\r\nlibrary(ggplot2)\r\nlibrary(ggthemes)\r\nlibrary(ggcharts)\r\n\r\n# Select relevant variables\r\ndql_renamed <-\r\n  dql %>%\r\n  select(\r\n    TRT, VISIT, DLQI_SCORE\r\n    )\r\n\r\n# Rename treatment levels\r\ndql_renamed$TRT[dql_renamed$TRT==\"A\"] <- \"Placebo\"\r\ndql_renamed$TRT[dql_renamed$TRT==\"B\"] <- \"Active Treatment\"\r\n\r\n# Seperate treatments\r\n\r\n# Active\r\ntotalB <- \r\n  dql_renamed %>% \r\n  filter(TRT==\"Active Treatment\")\r\n\r\n# Construct a histogram for each treatment arm at baseline visit\r\n(d <- \r\n  ggplot(\r\n    data = totalB,\r\n    aes(\r\n      x = DLQI_SCORE\r\n      ))\r\n  + geom_histogram(\r\n    binwidth = 1,\r\n    color = \"grey\",\r\n    fill = \"deeppink3\"\r\n    ) +\r\n  facet_grid(~ VISIT)\r\n  + theme_ng(grid = \"X\")\r\n  + labs(\r\n    x = \"Total DLQI Score\",\r\n    y = \"Patients\",\r\n    title = \"Improved Quality of life after 16 weeks of treatment\",\r\n    subtitle = \"Active Treatment\")\r\n  + theme(\r\n    axis.title.x = element_blank(),\r\n    axis.text.x = element_blank(),\r\n    plot.title = element_text(size = 17,\r\n                              face = \"bold\"),\r\n    plot.subtitle = element_text(size = 15, color = \"deeppink3\")\r\n    ))\r\n\r\n\r\n# Week 16 visit\r\ntotalA <- \r\n  dql_renamed %>% \r\n  filter(TRT==\"Placebo\")\r\n\r\n(e <- \r\n  ggplot(\r\n    data = totalA,\r\n    aes(\r\n      x = DLQI_SCORE\r\n      )\r\n    )\r\n  + geom_histogram(\r\n    binwidth = 1,\r\n    color = \"grey\",\r\n    fill = \"green4\"\r\n    ) +\r\n  facet_grid(~ VISIT)\r\n  + theme_ng(grid = \"X\")\r\n  + labs(\r\n    x = \"Total DLQI Score\",\r\n    y = \"Patients\",\r\n    subtitle = \"Placebo\",\r\n    caption = \"Lower score equals better quality of life\"\r\n    ) +\r\n  theme(\r\n    strip.text.x = element_blank(),\r\n    plot.subtitle = element_text(size = 15, color = \"green4\"),\r\n    plot.caption = element_text(size = 12,\r\n                                face = \"italic\")\r\n    ))\r\n\r\n# Compine plots\r\nlibrary(gridExtra)\r\n\r\ngridExtra::grid.arrange(d, e, nrow = 2, heights = c(1.5,1))\r\n\r\n\r\n\r\n\r\nExample 6. Lineplots\r\n\r\n\r\nlibrary(tidyverse)\r\nlibrary(data.table)\r\nlibrary(grid)\r\nlibrary(cowplot)\r\nlibrary(RCurl)\r\n\r\n\r\nx <- getURL(\"https://raw.githubusercontent.com/VIS-SIG/Wonderful-Wednesdays/master/data/2021/2021-01-13/ww2020_dlqi.csv\")\r\n\r\nd <- read.csv(text = x)\r\nd1a <- d %>%\r\n  gather(key = PARAMCD,\r\n         value = AVAL, DLQI101:DLQI_SCORE, factor_key=TRUE) %>%\r\n  filter(!PARAMCD %in% c(\"DLQIMCID\", \"DLQIRESP\")) %>%\r\n  mutate(VISIT = ifelse(VISIT==\"Baseline\", \"Wk 0\", \"Wk 16\"),\r\n         VISITN = if_else(VISIT==\"Wk 0\", 0, 1))\r\nd1a\r\n\r\nd1b <- d1a %>%\r\n  group_by(TRT, PARAMCD, VISITN, VISIT, AVAL) %>%\r\n  summarise(n = n())%>%\r\n  mutate(freq = n / sum(n))\r\nd1b\r\n\r\nd1a$TRT <- relevel(as.factor(d1a$TRT), \"B\")\r\nd1b$TRT <- relevel(as.factor(d1b$TRT), \"B\")\r\n\r\n\r\ntit_col = \"grey50\"\r\ncap_col = \"grey50\"\r\n\r\nggplotib <- function(paramcd = NULL,\r\n                     title = NULL, \r\n                     caption = NULL, \r\n                     breaks = 0:3,\r\n                     transparency = 0.01){\r\n  d1a_2 <- d1a %>%\r\n    filter(PARAMCD %in% paramcd) %>%\r\n    group_by(TRT, USUBJID, VISITN, VISIT) %>%\r\n    summarise(AVAL_SUB = sum(AVAL))\r\n  \r\n  d1b_2 <- d1a_2 %>%\r\n    group_by(TRT, VISITN, VISIT, AVAL_SUB) %>%\r\n    summarise(n = n())%>%\r\n    mutate(freq = n / sum(n))\r\n  p1 <- ggplot() +\r\n    geom_line(data = d1a_2, aes(x = VISITN, y = AVAL_SUB, group = USUBJID, col=TRT),\r\n              alpha = transparency, size = 2) +\r\n    geom_point(data = d1b_2, aes(x = VISITN, y = AVAL_SUB, size = freq, col=TRT)) +\r\n    facet_grid(cols = vars(TRT)) +\r\n    scale_x_continuous(breaks = c(0, 1), labels = c(\"Wk 0\", \"Wk 16\"), limits = c(-0.1,1.1)) +\r\n    scale_y_continuous(breaks = breaks) +\r\n    theme_minimal() +\r\n    labs(x = \"\", y = \"\", title = title, subtitle = caption) +\r\n    theme(panel.grid = element_blank(),\r\n          title = element_text(size = 12, colour = tit_col),\r\n          plot.subtitle = element_text(size = 10, colour = cap_col, hjust = 0), \r\n          axis.text.x = element_text(size = 12, colour = \"grey50\"),\r\n          plot.background = element_rect(fill=\"black\"),\r\n          strip.text = element_blank()) +\r\n    guides(color = F, size = F)\r\n  p1\r\n}\r\n\r\n\r\n# Unidimensional ----------------------------------------------------------\r\np1 <- ggplotib(paramcd = \"DLQI101\",\r\n              title=\"Item 1\",\r\n              caption=\"Itchy, sore, painful, or stinging skin\") +\r\n  theme(axis.text.y = element_text(colour = \"grey50\"))\r\np1\r\np2 <- ggplotib(paramcd = \"DLQI102\",\r\n              title=\"Item 2\",\r\n              caption=\"Embarassment\") + \r\n  theme(axis.text.y = element_text(colour = \"grey50\"))\r\np2\r\np3 <- ggplotib(paramcd = \"DLQI103\",\r\n              title=\"Item 3\",\r\n              caption=\"Interference with shopping / home / gardening\") + \r\n  theme(axis.text.y = element_text(colour = \"grey50\"))\r\np3\r\np4 <- ggplotib(paramcd = \"DLQI104\",\r\n              title = \"Item 4\",\r\n              caption = \"Influence on clothing\") + \r\n  theme(axis.text.y = element_text(colour = \"grey50\"))\r\np4\r\np5 <- ggplotib(paramcd = \"DLQI105\",\r\n              title = \"Item 5\",\r\n              caption = \"Social or leisure activities affected\") + \r\n  theme(axis.text.y = element_text(colour = \"grey50\"))\r\np5\r\np6 <- ggplotib(paramcd = \"DLQI106\",\r\n              title = \"Item 6\",\r\n              caption = \"Difficult to do any sport?\") +\r\n  theme(axis.text.y = element_text(colour = \"grey50\"))\r\np6\r\np7 <- ggplotib(paramcd = \"DLQI107\",\r\n              title = \"Item 7\",\r\n              caption = \"Prevented you from working / studying?\") + \r\n  theme(axis.text.y = element_text(colour = \"grey50\"))\r\np7\r\np8 <- ggplotib(paramcd = \"DLQI108\",\r\n               title = \"Item 8\",\r\n               caption = \"Problems with partner / close friends / relatives\") + \r\n  theme(axis.text.y = element_text(colour = \"grey50\"))\r\np8\r\np9 <- ggplotib(paramcd = \"DLQI109\",\r\n               title = \"Item 9\",\r\n               caption = \"Sexual difficulties\") + \r\n  theme(axis.text.y = element_text(colour = \"grey50\"))\r\np9\r\np10 <- ggplotib(paramcd = \"DLQI110\",\r\n                title = \"Item 10\",\r\n                caption = \"Problem from treatment\") + \r\n  theme(axis.text.y = element_text(colour = \"grey50\"))\r\np10\r\n\r\npt <- ggplotib(paramcd = \"DLQI_SCORE\", \r\n               breaks = 0:30, \r\n               transparency = 0.02,\r\n               title = \"DLQI\",\r\n               caption = \"Total Score\") +\r\n  theme(axis.text.y = element_text(colour = \"grey50\"))\r\npt\r\n\r\n# t_b\r\ntfs <- 24\r\nx <- 0.05\r\nt1 <- textGrob(expression(bold(\"Active treatment\") * phantom(bold(\" vs. Placebo\"))),\r\n               x = x, y = 0.7, gp = gpar(col = \"#F8766D\", fontsize = tfs), just = \"left\")\r\nt2 <- textGrob(expression(phantom(bold(\"Active treatment vs.\")) * bold(\" Placebo\")),\r\n               x = x, y = 0.7, gp = gpar(col = \"#00BFC4\", fontsize = tfs), just = \"left\")\r\nt3 <- textGrob(expression(phantom(bold(\"Active treatment \")) * bold(\"vs.\") * phantom(bold(\" Placebo\"))),\r\n               x = x, y = 0.7, gp = gpar(col = \"grey\", fontsize = tfs), just = \"left\")\r\nt4 <- textGrob(expression(\"Strips describe the flow of the patients from different categories between visits\"),\r\n               x = x, y = 0.4, gp = gpar(col = \"grey\", fontsize = 10), just = \"left\")\r\nt5 <- textGrob(expression(\"Circles are proportional to the percentage of patients at every visit\"),\r\n               x = x, y = 0.25, gp = gpar(col = \"grey\", fontsize = 10), just = \"left\")\r\n\r\ntb <- ggplot(data = d) +\r\n  theme(panel.grid = element_blank(),\r\n        plot.background = element_rect(fill=\"black\"))  +\r\n  coord_cartesian(clip = \"off\") +\r\n  annotation_custom(grobTree(t1, t2, t3, t4, t5)) +\r\n  theme(legend.position = 'none')\r\ntb\r\n\r\nb <- plot_grid(tb, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10,\r\n             nrow = 11, rel_heights = c(0.5, rep(1, 10)))\r\nggsave(plot=b, filename=\"b.png\", path=(\"~\") , width = 6, height = 32, device = \"png\")   \r\n\r\n# Multidimensional --------------------------------------------------------\r\np12 <- ggplotib(paramcd = c(\"DLQI101\", \"DLQI102\"),\r\n                breaks = 0:6,\r\n                transparency = 0.015,\r\n                title=\"Item 1 + Item 2\",\r\n                caption=\"Symptoms and feelings\") +\r\n  theme(axis.text.y = element_text(colour = \"grey50\"))\r\np12\r\n\r\np34 <- ggplotib(paramcd = c(\"DLQI103\", \"DLQI104\"),\r\n                breaks = 0:6,\r\n                transparency = 0.015,\r\n                title=\"Item 3 + Item 4\",\r\n                caption=\"Daily activities\") +\r\n  theme(axis.text.y = element_text(colour = \"grey50\"))\r\np34\r\n\r\np56 <- ggplotib(paramcd = c(\"DLQI105\", \"DLQI106\"),\r\n                breaks = 0:6,\r\n                transparency = 0.015,\r\n                title=\"Item 5 + Item 6\",\r\n                caption=\"Leisures\") +\r\n  theme(axis.text.y = element_text(colour = \"grey50\"))\r\np56\r\n\r\np89 <- ggplotib(paramcd = c(\"DLQI108\", \"DLQI109\"),\r\n                breaks = 0:6,\r\n                transparency = 0.015,\r\n                title=\"Item 8 + Item 9\",\r\n                caption=\"Interpersonal relationships\") +\r\n  theme(axis.text.y = element_text(colour = \"grey50\"))\r\np89\r\n\r\ntfs <- 42\r\nx <- 0.0175\r\nt1 <- textGrob(expression(bold(\"Active treatment\") * phantom(bold(\" vs. Placebo\"))),\r\n               x = x, y = 0.7, gp = gpar(col = \"#F8766D\", fontsize = tfs), just = \"left\")\r\nt2 <- textGrob(expression(phantom(bold(\"Active treatment vs.\")) * bold(\" Placebo\")),\r\n               x = x, y = 0.7, gp = gpar(col = \"#00BFC4\", fontsize = tfs), just = \"left\")\r\nt3 <- textGrob(expression(phantom(bold(\"Active treatment \")) * bold(\"vs.\") * phantom(bold(\" Placebo\"))),\r\n               x = x, y = 0.7, gp = gpar(col = \"grey\", fontsize = tfs), just = \"left\")\r\nt4 <- textGrob(expression(\"Strips describe the flow of the patients from different categories between visits\"),\r\n               x = x, y = 0.4, gp = gpar(col = \"grey\", fontsize = 10), just = \"left\")\r\nt5 <- textGrob(expression(\"Circles are proportional to the percentage of patients at every visit\"),\r\n               x = x, y = 0.25, gp = gpar(col = \"grey\", fontsize = 10), just = \"left\")\r\n\r\nt <- ggplot(data = d) +\r\n  theme(panel.grid = element_blank(),\r\n        plot.background = element_rect(fill=\"black\"))  +\r\n  coord_cartesian(clip = \"off\") +\r\n  annotation_custom(grobTree(t1, t2, t3, t4, t5)) +\r\n  theme(legend.position = 'none')\r\nt\r\n\r\nt2 <- ggplot(data = d) +\r\n  theme(panel.grid = element_blank(),\r\n        plot.background = element_rect(fill=\"black\"))  +\r\n  theme(legend.position = 'none')\r\nt2\r\ncol1 <- plot_grid(p1, p2, p3, p4, p5, p6, p7, p8, p9, p10,\r\n               nrow = 10, rel_heights = c(rep(1, 10)))\r\ncol2 <- plot_grid(p12, p34, p56, p7, p89, p10,\r\n                nrow = 6, rel_heights = c(2, 2, 2, 1, 2, 1))\r\ncol3 <- plot_grid(pt, t2,\r\n                nrow = 2, rel_heights = c(4, 6))\r\ncols <- plot_grid(col1, col2, col3, ncol = 3, rel_widths = c(3, 3, 3))\r\no <- plot_grid(t, cols, nrow = 2, rel_heights = c(0.5, 10))\r\nggsave(plot = o, filename=\"o.png\", path=(\"~\") , width = 18, height = 32, device = \"png\")   \r\n\r\n\r\n\r\nBack to blog\r\n\r\n\r\n\r\n",
    "preview": "posts/2021-02-07-wonderful-wednesdays-february-2021/./images/hysto2c.png",
    "last_modified": "2025-08-22T14:49:25+02:00",
    "input_file": {},
    "preview_width": 688,
    "preview_height": 449
  },
  {
    "path": "posts/2021-01-11-wonderful-wednesdays-january-2021/",
    "title": "Wonderful Wednesdays January 2021",
    "description": "The data set is about a retrospecitve study on finding \"Predictors of Residual Tumor in Breast-Conserving Therapy\". There are 500 subjects included. The outcome variable is reexcision and it describes, if there has been a reexcision necessary after the (initial) surgery. In a first step, a prediction model for reexcission needed to be set up. The goal of this exercise was to visualize the results. The audience was intended to be a \"non-technical\" one.",
    "author": [
      {
        "name": "PSI VIS SIG",
        "url": "https://www.psiweb.org/sigs-special-interest-groups/visualisation"
      }
    ],
    "date": "2021-01-13",
    "categories": [
      "Prediction",
      "Wonderful Wednesdays"
    ],
    "contents": "\r\nPrediction dataset\r\n\r\nExample 1. Exploratory analysis, correlation, and prediction\r\nhigh resolution image\r\nhigh resolution image\r\n\r\nThis is a relatively simple plot to present the data which can be seen as a preview of the data which is very helpful to start with. There are some things we could improve. Since absolute data is used, it is a little bit hard to compare the groups with each other. We could even lay the two plots on top of each other to make a comparison between groups very straightforward. Furthermore, a title is missing.\r\nhigh resolution image\r\nThis plot helps to compare the groups in regards to age and is therefore very helpful to get a first insight into a potential difference in age between both groups. Boxplots are very well-known and, thus, there is no need for any explanation when they are presented to the audience. The use of grey is done very nicely. The gridlines are visible but kept in the background. There is also a description below the boxplot which is very helpful. However, a title is still missing. Another detail is about the labeling. We could use “yes” and “no” instead of 1 and 0 on the x-axis.\r\nhigh resolution image\r\nThe same comments apply as above (for age plots).\r\nhigh resolution image\r\nThe same comments apply as above (for age plots).\r\nhigh resolution image\r\nThe same comments apply as above (for age plots).\r\nhigh resolution image\r\nColours going fro m blue to red are used to present the correlation between variables. In general, it is a very good idea to present correlations as another step towards finding predictors. The red and blue ones pop out and you can identify strong correlations very quickly. The panel also liked the white space which makes it clear and “simple”. Some things could be improved: The labels on the y-axis could be rotated 90 degrees to make them easier to read. Also, it is a bit of an visual “overload” since there is a lot of information in the plot. Furthermore, the column on the very left might be the most interesting one and could therefore be framed or anything like that to make the audience focus on it. You could even order this first column by correlation to make it easier to compare the correlations with each other. Also, it might not be clear what a correlation with a binary variable really means. How is the “direction” of the correlation defined. A short footnote might help here.\r\nhigh resolution image\r\nLog-odds are presented with confidence bands. The footnote is very helpful to better understand the plot and to interpret the results. However, the plot might be a bit challenging to a non-technical audience. At the same time, this plot can be very helpful to see if (fractional) polynomials of the predictors are needed in the model. Furthermore, the uncertainty is shown which is very helpful. The x-axis shows only data that we actually have. There is no extrapolation which is very good practice. The gridlines are also very helpful and the use of colour is nicely done.\r\nhigh resolution image\r\nIn this plot, we see the probability on the y-axis which is easier to interpret as compared to the plot above (using log-odds). The data points are included using some jittering which is a very good idea to make all data points visible. It might help to reduce the point size a little bit, though. Furthermore, we can easily see the “direction” of the predictor. This is a nice visualization to put on a poster, for example.\r\nhigh resolution image\r\nThe same comments apply as above (for age plots).\r\nhigh resolution image\r\nThe same comments apply as above (for age plots).\r\nlink to code\r\n\r\nExample 2. Classification tree\r\nhigh-resolution image\r\nThis is a very different way to present the data. Obviously, single trees are not recommended to do prediction. However, it may help to get a quick overview over the data.\r\nHaving the full name instead of variable labels would be an improvement of the plot. Furthermore the labels of categories should be updated to make clear what they stand for (instead of using 0/1 etc.). Also, the number of patients per path or box are missing. One way would be to use different thicknesses of the lines to represent the sample sizes. Another issues is about colouring which can be used to visualize the probabilities of re-excision. The use of the cut-off in regards to the probability to decide whether a box is denoted as “yes” or “no” is questionable. Another idea would be to present the tree in a horizontal way.\r\nlink to code\r\n\r\nExample 3. Nomogram\r\nhigh-resolution image\r\nThis is a rather challenging visualization because it is not so easy to get a message out of by just looking at it. It is rather a tool. For a (new) patient, you need to read out the values per predictor, sum them up, and read out the probability for re-excision. It is kind of an interactive tool without interactivity. The advantage of this plot is still that all predictors are included and the length between tickmarks (per unit) give an impression of the strenght of the impact of a predictor. Furthermore, there almost no clutter and it comes with a description.\r\nIn general, it might look a bit old-fashioned, but it may still be useful to some audience. An alternative would be a shiny app or something like that.\r\nlink to code\r\n\r\nExample 4. Prediction app\r\n\r\nThe html file can be found here.\r\nThis is kind of a nomogram as an interactive app. Starting with the first tab, there is a nice explanation included, but also the plots speak for themselves. The color coding is clearly defined and we get a nice overview. The second tab, provides a visualization of an individual person. And the third tab provides us with the estimated model.\r\nIn general, it has got a very nice design.\r\nlink to code\r\n\r\nExample 5. Interactive Model Studio\r\n\r\nThe html file can be found here.\r\nHere, we see the impact of each predictor which is a very nice idea to present the data and the prediction model. When you select a new patient the plot grows step by step and this is a very nice way to describe what is happening in the model.\r\nOverall, it is a very nice and well-structured visualization. The colouring is nicely chosen and there are is very good title and a helpful footnote. It is just very useful and informative graph and tool.\r\nlink to code\r\nCode\r\n\r\nExample 1. Exploratory analysis, correlation, and prediction\r\n\r\n#!/usr/bin/env python\r\n# coding: utf-8\r\n\r\n# In[1]:\r\n\r\n\r\n###### #Following instructions in DataCamp course:\r\n \r\n#https://campus.datacamp.com/courses/generalized-linear-models-in-python/modeling-binary-data?ex=15\r\n#https://towardsdatascience.com/a-quick-guide-on-descriptive-statistics-using-pandas-and-seaborn-2aadc7395f32\r\n#https://github.com/VIS-SIG/Wonderful-Wednesdays/tree/master/data/2020/2020-12-09\r\n\r\n\r\n#Import libraries\r\n \r\nimport statsmodels.api as sm #Array based model\r\n \r\nfrom statsmodels.formula.api import glm\r\n \r\nimport numpy as np\r\nimport matplotlib.pyplot as plt\r\n\r\n#from lifelines import KaplanMeierFitter\r\n\r\nfrom sklearn.ensemble import RandomForestClassifier\r\n\r\n\r\n# In[2]:\r\n\r\n\r\nimport seaborn as sns\r\n\r\n\r\n# In[3]:\r\n\r\n\r\nimport pandas as pd\r\n\r\n\r\n# In[4]:\r\n\r\n\r\nimport os\r\nprint(os.getcwd()) #/Users/zahraSari\r\n\r\n\r\n# In[23]:\r\n\r\n\r\n\r\ncwd=os.chdir('/Users/zahraSari/Desktop/') \r\n\r\n#Change directory\r\n\r\nFiles = os.listdir(cwd) \r\n\r\n\r\n# In[24]:\r\n\r\n\r\n#Data from Github : \r\n#https://github.com/VIS-SIG/Wonderful-Wednesdays/blob/master/data/2020/2020-12-09/Reexcision.csv    \r\n\r\ndata= pd.read_csv('Book.csv')\r\n\r\nprint(data)\r\n \r\n#age\r\n#tumorsize\r\n#histology (hist; 0: others, 1: Invasive-duct./ductal-lob.)\r\n#Multifocality (mult.foc; 0: no, 1: yes)\r\n#Accomp. in situ (acc.in.situ; 0: others, 1: DCIS and LCIS)\r\n#Lymphovascular invasion (lymph.inv; 0: no, 1: yes)\r\n#Estrogen-receptor (estr.rec; 0: no, 1: yes)\r\n#Progesterone-receptor (prog.rec; 0: no, 1: yes)\r\n\r\n\r\n# In[25]:\r\n\r\n\r\n\r\nprint(data.columns.tolist()) #View the column names\r\n \r\n\r\n\r\n# In[26]:\r\n\r\n\r\ndata.info() # Tumor size has 9 unknown variables\r\n \r\n\r\n\r\n# In[27]:\r\n\r\n\r\ndata.mean()\r\n\r\n\r\n# In[28]:\r\n\r\n\r\ntotal_rows=len(data.axes[0])\r\ntotal_cols=len(data.axes[1])\r\nprint(\"Number of Rows: \"+str(total_rows))\r\nprint(\"Number of Columns: \"+str(total_cols))\r\n\r\n\r\n# In[29]:\r\n\r\n\r\n\r\ndata['tumorsize']= pd.to_numeric(data['tumorsize'])\r\n\r\n\r\n# In[30]:\r\n\r\n\r\ndata=data.dropna() #Removing the 9 unknown variables from Data Frame\r\n \r\n\r\n\r\n# In[31]:\r\n\r\n\r\ndata.mean()\r\n\r\n\r\n# In[32]:\r\n\r\n\r\n\r\n# Plot the age variable\r\nsns.distplot(data['age'])\r\n\r\nplt.axvline(np.median(data['age']),color='b', linestyle='--') \r\n\r\nplt.axvline(np.mean(data['age']),color='b', linestyle='-') \r\n\r\n#Display the plot\r\nplt.show()\r\n \r\ndata.age.mean()\r\n\r\n\r\n# In[33]:\r\n\r\n\r\n\r\n# Plot first variable\r\n\r\nsns.distplot(data['tumorsize'])\r\n \r\nplt.axvline(np.median(data['tumorsize']),color='b', linestyle='--') \r\n\r\nplt.axvline(np.mean(data['tumorsize']),color='b', linestyle='-') \r\n    \r\n    \r\n# Display the\r\n\r\nplt.show()\r\n\r\ndata.tumorsize.mean()\r\n \r\n\r\n\r\n# In[34]:\r\n\r\n\r\n#Interpretation: People with re-exision \r\n\r\ng = sns.FacetGrid(data, col='RE')\r\ng.map(plt.hist, 'tumorsize', bins=20)\r\n\r\n\r\n# In[35]:\r\n\r\n\r\n\r\ng = sns.FacetGrid(data, col='RE')\r\ng.map(plt.hist, 'age', bins=20)\r\n\r\n\r\n# # Pivoting Features\r\n\r\n# In[57]:\r\n\r\n\r\ndata['hist'].value_counts().sort_values()\r\n\r\n\r\n# In[58]:\r\n\r\n\r\nsns.countplot(x='hist',data=data,palette='hls')\r\nplt.show()\r\n\r\n\r\n# In[56]:\r\n\r\n\r\nsns.countplot(x='RE',data=data,palette='hls')\r\nplt.show()\r\n\r\n\r\n# In[48]:\r\n\r\n\r\n\r\n# Summary Chart Re-excision\r\n\r\nax = ((100 *data[\"RE\"].value_counts() / len(data))).plot.bar(rot=0)\r\nax.set( ylabel=\"%\", title=\"Re-excision\")\r\n\r\nplt.show()\r\n\r\n# Summary Chart hist\r\n\r\nax = ((100 *data[\"hist\"].value_counts() / len(data))).plot.bar(rot=0)\r\nax.set( ylabel=\"%\", title=\"hist\")\r\n\r\nplt.show()\r\n\r\n# Summary Chart multfoc\r\n\r\nax = ((100 *data[\"multfoc\"].value_counts() / len(data))).plot.bar(rot=0)\r\nax.set( ylabel=\"%\", title=\"multfoc\")\r\n\r\nplt.show()\r\n\r\n\r\n# In[38]:\r\n\r\n\r\n\r\ndata.groupby(['RE']).mean() #Mean of variables for RE of 0 or 1\r\n\r\n\r\n# In[39]:\r\n\r\n\r\n\r\n#Interpretation: Age distribution for patinets who had Re-excision is lower than those with \r\n\r\nget_ipython().run_line_magic('matplotlib', 'inline')\r\n\r\nsns.set(style=\"whitegrid\")\r\nplt.figure(figsize=(10,8))\r\nax = sns.boxplot( x='RE',y='age', data=data, orient=\"v\")\r\n\r\n\r\n# In[40]:\r\n\r\n\r\n\r\nget_ipython().run_line_magic('matplotlib', 'inline')\r\n\r\nsns.set(style=\"whitegrid\")\r\n\r\nplt.figure(figsize=(10,8))\r\nax = sns.boxplot(y='tumorsize' , x='RE', data=data, orient=\"v\")\r\n\r\n#The box plot shows you how a feature's values spread out for each class. \r\n#It's a compact representation of the distribution, showing the extreme high value, \r\n#upper quartile, median, lower quartile and extreme low value.\r\n\r\n\r\n# In[41]:\r\n\r\n\r\ndf = df.convert_objects(convert_numeric=True)    \r\nsub_df = df.groupby(['RECL_LCC','RECL_PI'])['COUNT'].sum().unstack()\r\nsub_df.plot(kind='bar',stacked=True)\r\n\r\n\r\n# # Correlating categorical features\r\n\r\n# In[42]:\r\n\r\n\r\n\r\ngrid = sns.FacetGrid(data, row='accinsitu', size=2.2, aspect=1.6)\r\ngrid.map(sns.pointplot, 'hist', 'RE' , 'lymphinv', palette='deep')\r\ngrid.add_legend()\r\n\r\n\r\n# In[43]:\r\n\r\n\r\nprint(data.corr)\r\n\r\n\r\n# # Correlation\r\n\r\n# In[44]:\r\n\r\n\r\n####Correlation Plot#######\r\n\r\ncorr=data.corr()\r\n\r\n# Generate a mask for the upper triangle\r\nmask = np.zeros_like(corr, dtype=np.bool)\r\nmask[np.triu_indices_from(mask)] = True\r\n\r\n# Set up the matplotlib figure\r\nf, ax = plt.subplots(figsize=(15, 13))\r\n\r\n# Generate a custom diverging colormap\r\ncmap = sns.diverging_palette(220, 10, as_cmap=True)\r\n\r\n# Draw the heatmap with the mask and correct aspect ratio\r\nsns.heatmap(corr, mask=mask, cmap=cmap, vmax=.3, center=0,\r\n            square=True, linewidths=.5, cbar_kws={\"shrink\": .5})\r\n\r\n\r\n# # Statistical Model - Logistic Model\r\n\r\n# In[ ]:\r\n\r\n\r\n\r\n#########Statistical Model############\r\n\r\n#Fit logistic regression model\r\n#Logistic regression is an improved version of linear regression.\r\n\r\n\r\n# In[17]:\r\n\r\n\r\n\r\nmodel = sm.GLM.from_formula(\"RE ~ hist + age + tumorsize + hist + multfoc + accinsitu + lymphinv + estrrec + progrec \", family = sm.families.Binomial(), data=data)\r\nresult = model.fit()\r\nresult.summary()\r\n\r\n#Based on p-value being less than 0.05, \r\n#Significant variables are: hist, tumorsize, accinsitu, lymphinv\r\n#Age is very close to 0.05 so speculuative whether it is significant, \r\n#Similarly for Intercept, p-value is very close to 0.05 but doesn't pass\r\n\r\n\r\n#Coef for hist: (Thinking of linear regression formula Y = AX + B) \r\n#where A= -1.2014 , B is 0 since it is non-significant. \r\n#If a person’s hist is 1 unit more s/he will have a 0.052 (coefficient with age in the table above) unit more \r\n#chance of having heart disease based on the p-value in the table.\r\n\r\n#Generally, positive coefficients indicate that the event becomes more likely as the predictor increases. \r\n#Negative coefficients indicate that the event becomes less likely as the predictor increases.\r\n\r\n\r\n# In[67]:\r\n\r\n\r\n#Removing non-significant variables and re-fitting the model\r\n#Age seems to be significant now\r\n\r\nmodel = sm.GLM.from_formula(\"RE ~ hist + age + tumorsize + accinsitu + lymphinv  -1 \", family = sm.families.Binomial(), data=data)\r\nresult = model.fit()\r\nresult.summary()\r\n\r\n#coeffiecnt -1.2849 for hist shows increase of odds\r\n#for ones with hist=1 than ones with hist=0\r\n\r\n#According to this fitted model, older people are more\r\n#likely to have Reexicision than younger people. The \r\n#log odds for heart disease increases by 0.0545 units for each year.\r\n#If a person is 10 years older his or her chance of having RE\r\n#increases by 0.0545 * 10 = 0.545 units.\r\n\r\n\r\n# In[68]:\r\n\r\n\r\n\r\ndata[['RE','hist', 'age' , 'tumorsize' , 'accinsitu' , 'lymphinv']].corr()\r\n\r\n\r\n# # Visualization of the Fitted Model\r\n\r\n# In[91]:\r\n\r\n\r\n#https://towardsdatascience.com/logistic-regression-model-fitting-and-finding-the-correlation-p-value-z-score-confidence-8330fb86db19\r\n#With help from this site\r\n\r\n\r\n# In[92]:\r\n\r\n\r\nfrom statsmodels.sandbox.predict_functional import predict_functional\r\n\r\n\r\n# In[104]:\r\n\r\n\r\nvalues = {\"hist\": 0, \"tumorsize\": 50, \"accinsitu\":0 , \"lymphinv\" :0 }\r\n\r\n\r\n# In[105]:\r\n\r\n\r\npr, cb, fv = predict_functional(result, \"age\", values=values, ci_method=\"simultaneous\")\r\n\r\n\r\n# In[106]:\r\n\r\n\r\nax = sns.lineplot(fv, pr, lw=4)\r\nax.fill_between(fv, cb[:, 0], cb[:, 1], color='grey', alpha=0.4)\r\nax.set_xlabel(\"age\")\r\nax.set_ylabel(\"Re-excision\")\r\n\r\nax.set_title('Fitted Model: Log-odd probability of Age by Re-excision')\r\n\r\n#This plot of fitted log-odds  visualizes the effect of age on reexcision for \r\n#hist=0, tumorsize=23, accinsitu=0 and lumphinv=0 by the glm fitted model\r\n#Slight negative correlation of age and RE are visible in this plot\r\n#For the specific described variables\r\n\r\n\r\n# In[ ]:\r\n\r\n\r\n\r\n\r\n\r\n# In[100]:\r\n\r\n\r\nfrom statsmodels.sandbox.predict_functional import predict_functional\r\nvalues = {\"hist\": 0, \"age\": 45, \"accinsitu\":0 , \"lymphinv\" :0 }\r\npr, cb, fv = predict_functional(result, \"tumorsize\", values=values, ci_method=\"simultaneous\")\r\n\r\nax = sns.lineplot(fv, pr, lw=4)\r\nax.fill_between(fv, cb[:, 0], cb[:, 1], color='grey', alpha=0.4)\r\nax.set_xlabel(\"Tumor Size\")\r\nax.set_ylabel(\"Re-excision\")\r\n\r\nax.set_title('Fitted Model: Log-odd probability of Tumorsize by Re-excision')\r\n\r\n#This plot of fitted log-odds  visualizes the effect of tumorsize on reexcision for \r\n#hist=0, age=45, accinsitu=0 and lumphinv=0 by the glm fitted model\r\n#Clear Positive correlation of tumorsize and RE are visible in this plot\r\n\r\n\r\n# In[ ]:\r\n\r\n\r\n\r\n\r\n\r\n# In[ ]:\r\n\r\n\r\n\r\n\r\n\r\n# In[103]:\r\n\r\n\r\n\r\nimport seaborn as sns\r\n \r\n#Plot the relationship between two variables in a DataFrame and \r\n#add overlay with the logistic fit\r\n\r\n\r\nsns.regplot(x = 'tumorsize', y = 'RE',\r\n            y_jitter = 0.03,\r\n            data = data,\r\n            logistic = True,\r\n            ci = 95)\r\n\r\nplt.title('Fitted Plot for Re-excision vs. Tumorsize')\r\n\r\n# Display the plot\r\nplt.show()\r\n\r\n#Interpretation: the lower tumor sizes are associated with value 0 for Reexcision, \r\n#higher values of tumorsize.\r\n#Tumor sizes of over 55 are associated with value of 1 for Reexicision.\r\n#The confidence interval gets wider as the value of the predictor increases. The \r\n#wide interval is partly due to the small amount of data for larger tumor size.\r\n\r\n\r\n# In[101]:\r\n\r\n\r\n#Plot the relationship between two variables in a DataFrame and add overlay with the logistic fit\r\n\r\nsns.regplot(x = 'age', y = 'RE',\r\n            y_jitter = 0.03,\r\n            data = data,\r\n            logistic = True,\r\n            ci = 95)\r\n \r\n# Display the plot\r\nplt.show()\r\n\r\n#Interpretation: the lower values age is associated with value 0 for Reexcision, higher values of tumorsize\r\n#eg. tumor size of over 55 are associated with value of 1 for Reexicision.\r\n#The confidence interval gets wider as the value of the predictor increases. The \r\n#wide interval is partly due to the small amount of data for larger lower and higher ages.\r\n\r\n\r\n# In[ ]:\r\n\r\n\r\n# Compute predictions for the test sample df and save as prediction\r\nprediction = model_fit.predict(exog = data)\r\n\r\n\r\n# In[ ]:\r\n\r\n\r\n# Add prediction to the existing data frame df and assign column name prediction\r\ndata['prediction'] = prediction\r\n\r\n\r\n# In[ ]:\r\n\r\n\r\n# Examine the first 5 computed predictions\r\nprint(data[['RE',  'hist', 'multfoc', 'accinsitu', 'lymphinv', 'estrrec', 'progrec']].head())\r\n\r\n\r\n# In[ ]:\r\n\r\n\r\n\r\n# Define the cutoff\r\ncutoff = 0.5\r\n\r\n# Compute class predictions: y_prediction\r\ny_prediction = np.where(prediction > cutoff, 1, 0)\r\n\r\n\r\n# # Machine Learning\r\n\r\n# In[ ]:\r\n\r\n\r\n#Random Forest\r\n\r\n\r\n# In[ ]:\r\n\r\n\r\n\r\nfrom sklearn.model_selection import train_test_split\r\n\r\n\r\n# In[ ]:\r\n\r\n\r\n\r\ny=data['RE']\r\n\r\n\r\n# In[ ]:\r\n\r\n\r\n\r\ntrain_df = data.drop(['RE'], axis=1)\r\n\r\n\r\n# In[ ]:\r\n\r\n\r\nimport numpy as np\r\n\r\nfrom sklearn.model_selection import train_test_split\r\nX, y = np.arange(10).reshape((5, 2)), range(5)\r\nX\r\nlist(y)\r\n\r\n\r\n# In[ ]:\r\n\r\n\r\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.33, random_state=42)\r\nX_train\r\n\r\n\r\n# In[ ]:\r\n\r\n\r\ny_train\r\n\r\n\r\n# In[ ]:\r\n\r\n\r\nX_test\r\n\r\n\r\n# In[ ]:\r\n\r\n\r\ny_test\r\n\r\n\r\n# In[ ]:\r\n\r\n\r\n\r\n#print(\"Before\", train_df.shape, test_df.shape, combine[0].shape, combine[1].shape)\r\n\r\n#train_df = train_df.drop(['Ticket', 'Cabin'], axis=1)\r\n#test_df = test_df.drop(['Ticket', 'Cabin'], axis=1)\r\n#combine = [train_df, test_df]\r\n\r\n#\"After\", train_df.shape, test_df.shape, combine[0].shape, combine[1].shape\r\n\r\n\r\n# In[ ]:\r\n\r\n\r\n\r\ntrain_df = data.drop(['RE'], axis=1)\r\n\r\n\r\n# In[ ]:\r\n\r\n\r\ndf = pd.DataFrame(np.random.randn(100, 2))\r\n\r\nmsk = np.random.rand(len(df)) < 0.8\r\n\r\ntrain = df[msk]\r\n\r\ntest = df[~msk]\r\n\r\nlen(test)\r\nlen(train)\r\n\r\n\r\n# In[ ]:\r\n\r\n\r\n#####################DATACAMP#################\r\n\r\n# Import train_test_split function\r\n#from sklearn.model_selection import train_test_split\r\n\r\n#X=data[['sepal length', 'sepal width', 'petal length', 'petal width']]  # Features\r\n#y=data['species']  # Labels\r\n\r\n# Split dataset into training set and test set\r\n#X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3) # 70% training and 30% test\r\n\r\n\r\n\r\n\r\n# Import train_test_split function\r\nfrom sklearn.model_selection import train_test_split\r\n\r\nX=data[['age' , 'tumorsize' , 'hist',  'multfoc' , 'accinsitu',  'lymphinv',  'estrrec' , 'progrec']]  # Features\r\ny=data['RE']  # Labels\r\n\r\n# Split dataset into training set and test set\r\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3) # 70% training and 30% test\r\n\r\n\r\n\r\n# In[ ]:\r\n\r\n\r\n\r\n\r\n\r\n# In[ ]:\r\n\r\n\r\n\r\n\r\n#Import Random Forest Model\r\nfrom sklearn.ensemble import RandomForestClassifier\r\n\r\n#Create a Gaussian Classifier\r\nclf=RandomForestClassifier(n_estimators=100)\r\n\r\n#Train the model using the training sets y_pred=clf.predict(X_test)\r\nclf.fit(X_train,y_train)\r\n\r\ny_pred=clf.predict(X_test)\r\n\r\n\r\n# In[ ]:\r\n\r\n\r\n\r\n#Import scikit-learn metrics module for accuracy calculation\r\nfrom sklearn import metrics\r\n# Model Accuracy, how often is the classifier correct?\r\nprint(\"Accuracy:\",metrics.accuracy_score(y_test, y_pred))\r\n\r\n\r\n# In[ ]:\r\n\r\n\r\n\r\nRandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',\r\n            max_depth=None, max_features='auto', max_leaf_nodes=None,\r\n            min_impurity_decrease=0.0, min_impurity_split=None,\r\n            min_samples_leaf=1, min_samples_split=2,\r\n            min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=1,\r\n            oob_score=False, random_state=None, verbose=0,\r\n            warm_start=False)\r\n\r\n\r\n# In[ ]:\r\n\r\nBack to blog\r\n\r\nExample 2. Classification tree\r\n\r\n\r\n# Prediction data:\r\n##################\r\n\r\n# Classification tree:\r\n# ====================\r\n\r\nsetwd(\"/home/lorenz/Wonderful_Wednesday_Webinars/2021-01/\")\r\ndat <- read.csv(\"Reexcision.csv\")\r\nfor (i in 1:ncol(dat)) {\r\n  if (length(unique(dat[, i])) < 5) {\r\n    dat[, i] <- factor(dat[, i])\r\n  }\r\n}\r\n\r\ndat$RE <- factor(dat$RE, levels = c(0, 1), labels = c(\"no\", \"yes\"))\r\n\r\nrequire(rpart)\r\nrequire(rpart.plot)\r\ndat_tree <- rpart(RE~., dat, model = TRUE)\r\npng(\"tree.png\", height = 4, width = 6, res = 150, units = \"in\")\r\nprp(dat_tree, type = 4, extra = 6, cex = 0.5, varlen = 0,\r\n    main = 'Classification tree for reexcission:\r\n    Accomp. in situ, Tumor size, and histology seem to be the most important predictors.\r\n    Each box shows the predicted value and the relative frequency of the category RE=yes.')\r\ndev.off()\r\n\r\n\r\n\r\nBack to blog\r\n\r\nExample 3. Nomogram\r\n\r\n\r\n# Nomogram:\r\n# =========\r\n\r\nsetwd(\"/home/lorenz/Wonderful_Wednesday_Webinars/2021-01/\")\r\ndat <- read.csv(\"Reexcision.csv\")\r\nfor (i in 1:ncol(dat)) {\r\n  if (length(unique(dat[, i])) < 5) {\r\n    dat[, i] <- factor(dat[, i])\r\n  }\r\n}\r\n\r\ndat$RE <- factor(dat$RE, levels = c(0, 1), labels = c(\"no\", \"yes\"))\r\n\r\nrequire(rms)\r\n\r\n# attach(dat)\r\n# ddist <- datadist(age, tumor.size, hist, mult.foc, acc.in.situ, lymph.inv, estr.rec, prog.rec)\r\nddist <- datadist(dat)\r\noptions(datadist='ddist')\r\n# detach(dat)\r\nfit <- lrm(RE ~ ., data = dat)\r\n\r\npng(\"nomogram.png\", height = 8, width = 10, res = 150, units = \"in\")\r\npar(xpd = T)\r\nplot(nomogram(fit, fun = function(x) 1/(1 + exp(-x)),\r\n              funlabel = \"Probability for reexcission\",\r\n              fun.at = c(.001, 0.01, 0.05, seq(.1, .9, by = .1), .95, .99, .999)),\r\n     label.every = 1)\r\ntext(0.4, 1.07, \"Nomogram based on RE data:\r\n     Read out the points for each predictor and sum them up.\r\n     Then, the probability for re-excission can be read out.\")\r\ndev.off()\r\n\r\n\r\n\r\nBack to blog\r\n\r\nExample 4. Prediction app\r\nThe rmd file can be found here.\r\nBack to blog\r\n\r\nExample 5. Interactive Model Studio\r\n\r\n\r\n# LINKS\r\n# modelStudio github: https://github.com/ModelOriented/modelStudio\r\n# modelStudio package: https://modelstudio.drwhy.ai/index.html\r\n# book: Explanatory Model Analysis Explore, Explain, and Examine Predictive Models: http://ema.drwhy.ai/\r\n# website: https://modeloriented.github.io/DrWhy/\r\n\r\n# location\r\nrstudioapi::getSourceEditorContext()$path %>% \r\n  dirname() %>% \r\n  setwd()\r\n\r\n# Import & Reshape\r\npacman::p_load(tidyverse)\r\n\r\nd1 <- read.csv(\"https://raw.githubusercontent.com/VIS-SIG/Wonderful-Wednesdays/master/data/2020/2020-12-09/Reexcision.csv\") %>% \r\n  mutate( hist         = factor(hist, labels = c(\"Others\", \"Invasive-duct./ductal-lob.\")) %>% \r\n            fct_rev(),\r\n          mult.foc     = factor(mult.foc, labels = c(\"No\",\"Yes\")),\r\n          acc.in.situ  = factor(acc.in.situ, labels = c(\"Others\",\"DCIS & LCIS\")),\r\n          lymph.inv    = factor(lymph.inv, labels = c(\"No\",\"Yes\")) %>% \r\n            fct_rev(),\r\n          estr.rec     = factor(estr.rec, labels = c(\"No\",\"Yes\")),\r\n          prog.rec     = factor(prog.rec, labels = c(\"No\",\"Yes\")) ) %>% \r\n  rename(`Residual_Tumor` = RE, \r\n         `Age` = age,\r\n         `Tumor_Size` = tumor.size,\r\n         `Histology` = hist,\r\n         `Multifocality` = mult.foc,\r\n         `Accomp_in_situ` = acc.in.situ,\r\n         `Lymphovascular` = lymph.inv,\r\n         `Estrogen_receptor` = estr.rec,\r\n         `Progesterone_receptor` = prog.rec) \r\n\r\n# Logistic Regression w/ Interactions\r\nf2 <- glm(Residual_Tumor ~ Age + Tumor_Size + Histology + \r\n            Multifocality + Accomp_in_situ + Lymphovascular +              \r\n            Age*Lymphovascular + Accomp_in_situ*Lymphovascular, \r\n          data = d1, family = \"binomial\")\r\n\r\n# Model Studio\r\npacman::p_load(modelStudio)\r\npacman::p_load(DALEX)\r\n\r\n# Explain\r\nexplainer <- explain(f2,\r\n                     data = d1,\r\n                     y = d1$Residual_Tumor,\r\n                     type = 'classification',\r\n                     verbose = FALSE,\r\n                     precalculate = FALSE)\r\n\r\n# Interactive\r\nmodelStudio(explainer,\r\n            facet_dim = c(1,1),\r\n            new_observation = d1[140:150,],\r\n            eda       = FALSE,\r\n            show_info = FALSE,\r\n            options = ms_options(w = 500, h = 400,\r\n                                 margin_left = 200,\r\n                                 show_boxplot = FALSE,\r\n                                 show_subtitle = TRUE,\r\n                                 ms_title    = \"Interactive Model Studio\",\r\n                                 ms_subtitle = \"Predictors of Residual Tumor in Breast-Conserving Therapy\",\r\n                                 positive_color = '#1a9641',\r\n                                 negative_color = '#d7191c',\r\n                                 default_color  = '#404040',\r\n                                 bd_title     = 'Break-down Plot for Logistic Regression model',\r\n                                 bd_subtitle = 'Shows contributions of every variable to a final prediction',\r\n                                 fi_subtitle = '')) %>% \r\n  r2d3::save_d3_html(file = \"viz_ms.html\",\r\n                     selfcontained = TRUE)\r\n\r\n# Upload to RPubs\r\n# markdown::rpubsUpload(title = \"Interactive Model Studio\", \r\n#                       htmlFile = \"viz_ms_edited.html\")\r\n\r\n\r\n\r\nBack to blog\r\n\r\n\r\n\r\n",
    "preview": "posts/2021-01-11-wonderful-wednesdays-january-2021/./images/viz_ms_edited - Agustin Calatroni.png",
    "last_modified": "2025-08-22T14:49:25+02:00",
    "input_file": {},
    "preview_width": 1011,
    "preview_height": 906
  },
  {
    "path": "posts/2020-12-21-festive-reindeer-plots/",
    "title": "Festive Reindeer Plots",
    "description": "In this entry, we do a little festive fun. We hope you will enjoy it!",
    "author": [
      {
        "name": "Steve Mallett",
        "url": "https://www.psiweb.org/sigs-special-interest-groups/visualisation"
      }
    ],
    "date": "2020-12-21",
    "categories": [
      "Christmas",
      "Rudolph"
    ],
    "contents": "\r\nBackground\r\nHere is a little festive fun, to illustrate the idea of “storytelling” with data. It is based on a longitudinal cohort study of species Rangier tarandus (reindeer). A cohort of n=8 reindeer were studied over 7 days, with primary endpoint of Reindeer Popularity Index (RPI). RPI is a validated measure of social acceptance by the herd, on a scale of 0 to 10.\r\nExcel Grouped Bar Chart\r\nThis chart was produced using Excel, showing popularity scores for each participant over the 7 day study period. This chart uses many of the default settings available in Excel, and the design of the graph has a number of shortcomings. The amount of information presented is overwhelming, and while the results for Rudolph appear atypical, there are a lot of improvements that could be made to gain insights into the data.\r\n\r\nR Spaghetti Plot\r\nThe remaining graphs were drawn using the ggplot2 package in R. In this example, RPI scores for each reindeer are drawn as lines on a common X-axis. It’s easy to see why this type of plot is called a spaghetti plot, and discerning any pattern in the data is challenging (although Rudolph is showing signs of being different from the other reindeer).\r\n\r\nlink to code\r\n\r\nDecluttered Spaghetti Plot\r\nAn important stage in creating a clear data story is to remove “chart junk”, i.e. any elements in the graph that might distract from the overall message. By experimenting with R “themes” we obtain a cleaner design. A consideration in data visualisation is the “cognitive load” we are placing on our audience, and in this case the viewer is having to work hard to move backward and forward between the lines and the legend.\r\n\r\nlink to code\r\n\r\nFocussed Spaghetti Plot\r\nAt this stage, we’ve decided that the “story” here is Rudolph, with a low RPI score at the start of the study (consistent with other reindeer laughing and calling him names), who gains popularity prior to the end of the study period on 25th December.\r\nHere we use “pre-attentive” attributes to focus the attention of the viewer, by use of a strong red colour representing Rudolph (consistent with the abnormal nasal colouration of this subject). We can lose the legend, and apply muted tones for the other study participants, the identities of which are not essential to the story.\r\nBecause interest lies in the relative RPI scores between subjects, a decision was made to remove the vertical axis in order to further simplify the design. However consideration always needs to be given to the audience; a more quantitative audience may require absolute RPI scores to be retained on the plot.\r\n\r\nlink to code\r\n\r\nCompleted Graph\r\nFinally, we add a title with our key message. Rudolph’s surge in popularity towards the end of the study coincides with a foggy night, and red shiny noses are thought to provide navigational assistance to airborne sleighs in these conditions [citation needed].\r\nThe final graph is certainly very effective in telling the audience our data “story”. This was achieved by choosing the right chart type (line plot instead of bar chart), removing unnecessary clutter, and using design features (e.g. use of colour for highlighting and muted tones for de-emphasizing) to focus the attention of our viewer.\r\n\r\nlink to code\r\n\r\nRudolph Animation\r\nIn this visualization, the number of packages (or presents) to be delivered within the last 2.5h before Christmas (midnight) is being presented over time by the region where the packages are supposed to arrive. Note that the local time is shown and, thus, it looks like a simultaneous delivery (due to the different time zones). In fact, this means that the package delivery starts in the Eastern regions and ends in the Western regions. The blue asteriscs seem to have some horizontal movement on their way down to zero. However, this is due to the nature of how the updates are done per time point. If there has been no update in a specific region but in the one next to it, the asterisc seems to be moving horizontically, but in fact it is an update in the near neighborhood.\r\nThis visualization is informative and helps to better understand Rudolph’s stressful time just before Christmas. However, there are some issues which should be fixed. The region on the x axis is lacking some details (which might be due to the need for anonymization of the exact region). Furthermore, the color and the shape of the “dots” are somewhat irritating and you might lose your focus. Simple black dots would have been the better choice to avoid unnecessary clutter. Speaking about clutter: The background picture is certainly distracting and does not add any value to the visualization as it contains no additional information. Overall, it might still serve as an insight into the number of packages arriving just in time.\r\n (The background picture has been downloaded from https://pixabay.com/ and slightly modified.)\r\nlink to code\r\nCode\r\n\r\nR Spaghetti Plot\r\n\r\n\r\nlibrary(ggplot2)\r\nlibrary(tidyverse)\r\nlibrary(dplyr)\r\nlibrary(tidyr)\r\nlibrary(readxl)\r\n\r\n# Get data, and transpose into long format\r\n\r\ndata <- read_excel(\"/shared/175/arenv/arwork/gsk1278863/mid209676/present_2020_01/code/RPI/reindeer_data.xlsx\") %>%\r\n  pivot_longer(!SUBJECT, names_to = \"Date\", values_to = \"RPI\") %>%\r\n  mutate(flag = (SUBJECT == \"Rudolph\"))\r\n\r\n# Basic line plot (default grey theme)\r\n\r\nplot01 <- ggplot() +\r\n  geom_line(data = data, aes(x = Date, y = RPI, group=factor(SUBJECT), color=factor(SUBJECT)), size = 1) +\r\n  scale_y_continuous(\"RPI\",\r\n                     breaks=c(0:10),\r\n                     limits=c(0, 10)) +\r\n  labs(title=\"Reindeer Popularity Index Over Time\",\r\n       color=\"Reindeer Name\") +\r\n  xlab(\"December\")\r\n\r\nggsave(\"/shared/175/arenv/arwork/gsk1278863/mid209676/present_2020_01/code/RPI/R_example01.png\", plot01, width=12, height=8, dpi=300)\r\n\r\n\r\n\r\nBack to blog\r\n\r\nDecluttered Spaghetti Plot\r\n\r\n\r\nplot02 <- ggplot() +\r\n  geom_line(data = data, aes(x = Date, y = RPI, group=factor(SUBJECT), color=as.factor(SUBJECT)), size = 1) +\r\n  scale_y_continuous(\"RPI\",\r\n                     breaks=c(0:10),\r\n                     limits=c(0, 10)) +\r\n  labs(title=\"Reindeer Popularity Index Over Time\",\r\n       color=\"Reindeer Name\") +\r\n  xlab(\"December\") +\r\n  theme_classic() +\r\n  theme(plot.title = element_text(size = 16),\r\n        axis.title = element_text(size = 16),\r\n        axis.text = element_text(size = 14),\r\n        legend.title = element_text(size = 14),\r\n        legend.text = element_text(size = 12)) \r\n\r\nggsave(\"/shared/175/arenv/arwork/gsk1278863/mid209676/present_2020_01/code/RPI/R_example02.png\", plot02, width=12, height=8, dpi=300)\r\n\r\n\r\n\r\nBack to blog\r\n\r\nFocussed Spaghetti Plot\r\n\r\n\r\nplot03 <- ggplot() +\r\n  geom_line(data = data, aes(x = Date, y = RPI, group=factor(SUBJECT), color=as.factor(flag), size = flag)) +\r\n  scale_x_discrete(\"December\",\r\n                     labels = c(\"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\"),\r\n                   expand = c(0.02, 0.02)) +\r\n  scale_y_continuous(\" \",\r\n                     breaks=c(0:10),\r\n                     limits=c(0, 10)) +\r\n  scale_color_manual(values=c(\"#d9d9d9\", \"#e41a1c\")) +\r\n  scale_size_manual(values=c(1, 1.5)) +\r\n  labs(title=\"Reindeer Popularity Index Over Time\",\r\n       color=\"Reindeer Name\") +\r\n  theme_classic() +\r\n  theme(plot.title = element_text(size = 16, color = \"#525252\"),\r\n        axis.title.x = element_text(size = 16, color = \"#525252\"),\r\n        axis.text.x = element_text(size = 14, color = \"#525252\"),\r\n        axis.title.y = element_blank(),\r\n        axis.text.y = element_blank(),\r\n        axis.line.y = element_blank(),\r\n        axis.ticks.y = element_blank(),\r\n        legend.position = \"none\"\r\n        ) +\r\n  annotate(\"text\", label = \"Rudolph\", x = 6.7, y = 9, color = \"#e41a1c\", size=6)\r\n\r\nggsave(\"/shared/175/arenv/arwork/gsk1278863/mid209676/present_2020_01/code/RPI/R_example03.png\", plot03, width=12, height=8, dpi=300)\r\n\r\n\r\n\r\nBack to blog\r\n\r\nCompleted Graph\r\n\r\n\r\nplot04 <- ggplot() +\r\n  geom_line(data = data, aes(x = Date, y = RPI, group=factor(SUBJECT), color=as.factor(flag), size = flag)) +\r\n  scale_x_discrete(\"December\",\r\n                   labels = c(\"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\"),\r\n                   expand = c(0.02, 0.02)) +\r\n  scale_y_continuous(\"RPI\",\r\n                     breaks=c(0:10),\r\n                     limits=c(0, 11),\r\n                     expand = c(0, 0.02)) +\r\n  scale_color_manual(values=c(\"#d9d9d9\", \"#e41a1c\")) +\r\n  scale_size_manual(values=c(1, 1.5)) +\r\n  geom_hline(yintercept=10, color = \"#f46d43\", linetype = \"longdash\") + \r\n  geom_hline(yintercept=1, color = \"#f46d43\", linetype = \"longdash\") + \r\n  labs(title=\"Summary of Reindeer Popularity Index Over Time\\n \\nKey Message: Reindeer with shiny noses gain popularity on foggy nights\") +\r\n  xlab(\"December\") +\r\n  theme_classic() +\r\n  theme(plot.title = element_text(size = 18, color = \"#253494\"),\r\n        axis.title.x = element_text(size = 16, color = \"#525252\"),\r\n        axis.text.x = element_text(size = 14, color = \"#525252\"),\r\n        axis.title.y = element_blank(),\r\n        axis.text.y = element_blank(),\r\n        axis.line.y = element_blank(),\r\n        axis.ticks.y = element_blank(),\r\n        legend.position = \"none\"\r\n  ) +\r\n  annotate(\"text\", label = \"Rudolph\", x = 6.7, y = 9, color = \"#e41a1c\", size=6) +\r\n  annotate(\"rect\", xmin=5, xmax = 6, ymin=0, ymax = 10, fill = \"#9ecae1\", alpha = 0.5) +\r\n  annotate(\"text\", label = \"Foggy\", x = 5.5, y = 4, color = \"#0570b0\", size=5.5) +\r\n  annotate(\"text\", label = \"Weather\", x = 5.5, y = 3, color = \"#0570b0\", size=5.5) +\r\n  annotate(\"text\", label = \"Conditions\", x = 5.5, y = 2, color = \"#0570b0\", size=5.5) +\r\n  annotate(\"text\", label = \"Goes down in history\", x = 1.6, y = 9.4, color = \"#f46d43\", size=6) +\r\n  annotate(\"text\", label = \"Unpopular\", x = 1.3, y = 1.6, color = \"#f46d43\", size=6) \r\n\r\nggsave(\"/shared/175/arenv/arwork/gsk1278863/mid209676/present_2020_01/code/RPI/R_example04.png\", plot04, width=12, height=8, dpi=300)\r\n\r\n\r\n\r\nBack to blog\r\nRudolph Animation\r\n\r\n\r\n\r\nrequire(gganimate)\r\nrequire(gapminder)\r\nrequire(ggpubr)\r\nrequire(png)\r\n\r\n# Simulate data:\r\nset.seed(12345)\r\ny <- c()\r\nfor (j in 1:10) {\r\n  for (i in 1:150) {\r\n    y <- c(y, rnorm(10, 150-j*5-i))\r\n  }\r\n}\r\n\r\ny[which(y < 0)] <- 0\r\n\r\nx <- runif(10, 0, 1)\r\nfor (i in 1:((length(y)/10)-1)) {\r\n  for (j in 1:10) {\r\n    x <- c(x, x[(i-1)*10 + j] + rnorm(1, 0, 0.025))\r\n  }\r\n}\r\nc.n <- paste0(0, 0:9)\r\nz <- rep(paste0(\"09:\", 31:59), each = 10)\r\nz <- c(z, rep(paste0(\"10:\", c(c.n, 10:59)), each = 10))\r\nz <- c(z, rep(paste0(\"11:\", c(c.n, 10:59)), each = 10))\r\nz <- c(z, rep(\"Midnight\", 10))\r\nz <- rep(z, 10)\r\n\r\ndat <- data.frame(x, y, z)\r\n\r\n# Import background image:\r\nimg <- png::readPNG(\"Rudolph_cut.png\")\r\n\r\n# Create the plot:\r\np <- ggplot(dat, aes(x = x, y = y)) + theme_bw() +\r\n    background_image(img) +\r\n    theme(axis.line = element_line(colour = \"white\"),\r\n        panel.grid.major = element_blank(),\r\n        panel.grid.minor = element_blank(),\r\n        panel.border = element_blank(),\r\n        panel.background = element_blank(),\r\n        axis.ticks = element_blank(),\r\n        text = element_text(size=15)) +\r\n    scale_x_continuous(name = \"Region\", limits = c(-1, 2), breaks = c(-1, 2),\r\n                       labels = c(\"West\", \"East\")) +\r\n    scale_y_continuous(name = \"No. of presents (million)\", limits = c(0, 100),\r\n                       breaks = c(0, 25, 50, 75, 100), labels = c(\"0\", \"2.5\", \"5\", \"7.5\", \"10\")) +\r\n    geom_point(shape = 8, color = \"lightblue\", size = 3)\r\n\r\n# Transform it into an animated plot:\r\nanim <- p + transition_states(states = z) + shadow_wake(wake_length = 0.1, alpha = T) +\r\n  labs(title = \"Number of presents to be delivered\r\n       within 2.5h to Christmas.\",\r\n       subtitle = \"Time: {closest_state}pm\")\r\n\r\nanimate(anim, nframes = 300, height = 450, width = 550)\r\nanim_save(\"rudolph.gif\")\r\n\r\n\r\n\r\nBack to blog\r\n\r\n\r\n\r\n",
    "preview": "posts/2020-12-21-festive-reindeer-plots/./images/R_example04.png",
    "last_modified": "2025-08-22T14:49:25+02:00",
    "input_file": {},
    "preview_width": 3600,
    "preview_height": 2400
  },
  {
    "path": "posts/2020-12-03-wonderful-wednesdays-december-2020/",
    "title": "Wonderful Wednesdays December 2020",
    "description": "Mark Baillie guides us through the submissions for the meta-analysis data set. The purpose of the challenge was to explore how data visualisation can be deployed to find insights when faced with big data. Big data in the pharma setting typically means wide data i.e. more variables than observations. We went through a number of interesting submissions from a shiny application of a forest plot, an interactive application to explore relationships between variables, an application that provides a workflow for developing a prognostic model, through to exploratory plots using small multiple ridge and scatter plots. A lesson from the challenge is to always visualise your data to avoid surprises.",
    "author": [
      {
        "name": "Mark Baillie",
        "url": "https://www.psiweb.org/sigs-special-interest-groups/visualisation"
      }
    ],
    "date": "2020-12-09",
    "categories": [
      "Meta-analysis",
      "Wonderful Wednesdays"
    ],
    "contents": "\r\nExample meta-analysis dataset\r\nThe meta-analysis data set introduced some of the challenges faced when working with pooled or integrated clinical trial data. This is often referred to as meta-analysis.\r\nMeta-analyses concerning integrated data throw up a number of challenges typically as the data sets are “found” i.e. not designed by the team performing the analysis or designed for the question of interest. This is often the typical task of a data science project.\r\nKey issues where data visualisation can help are around the investigation of whether studies can or should be combined due to study heterogeneity among individual trials. This throws up questions such as:\r\nwhat graphical tools can be used to assess heterogeneity, describing the fixed and random-effects?\r\nwhat variables are potentially prognostic or predictive of outcome, etc?\r\nwhere can graphical methods provide some general recommendations?\r\nLets go through the submissions and how they tackled some of these questions.\r\n\r\nExample 1. Forest plot\r\nhigh-resolution image\r\nThis is an example of a forest plot displaying the within study results based on two outcomes comparing treatment effect on patient blood pressure response at 1-year using odds ratio and relative risk measures. The treatment effect is displayed as a table and visualisation by study as well as the overall fixed effect size. The size of the study is also encoded in the size of the “point estimate”. The agreement or overlap between each study is also highlighted through bands.\r\nThere are nice interactive options that allow the switching between odds ratio and relative risk. This can help with comparisons or essentially a sensitivity analysis, comparing different assumptions. Another option is to be able to resize the plot, which is a great feature if the plot has to be presented at different forums or media (i.e. report or powerpoint).\r\nThe banding to display the overlap or agreement between studies is an interesting idea, but is not intuitive. Often banding is used to encode uncertainty.\r\nAnother potential addition to this plot would be annotation to indicate the overall random or fixed effect, to help draw comparisons across study with the full model.\r\nThe shiny app can be found here.\r\nlink to code\r\n\r\nExample 2. Explorer app\r\n\r\nThe second submission is an example of the open source subscreen shiny app applied to the problem of exploring integrated data. The application provides a number of options to explore the relationship between explanatory and dependent variables. With wide data, the combinations between variables can become overwhelming. This is where such an application helps with systematically exploring the data to look for potential issues or trends that require further investigation.\r\nlink to code\r\n\r\nExample 3. Prognostic model workflow shiny app\r\n\r\nhigh-resolution image\r\nThe app can be found here.\r\nThis submission was a carefully thought through example of how visualisations can be embedded into the workflow of the development of a model. The app is developed to support a 2-stage meta-analysis approach to detect baseline variables that are predictive of mean systolic blood pressure (mm Hg) measured at 1-year. A number of visualisations are provided to support each phase of the workflow.\r\nWhat is nice about this app is that plots such as a ranking of variable importance is placed alongside other supporting visualisations that provide supporting context. In this case a scatter plot of the observed and predictive outcome. This provides an instant overview of the model.\r\nThe second step provides both the forest plot of within study estimates with a GOSH plot to explore the heterogeneity of each study and the impact of including or not including a study within the model. Again, both plots side by side provide context that support the workflow.\r\nPlease click on the link to explore for yourself.\r\nlink to code\r\n\r\nExample 4. Comparison of blood pressure by study\r\n\r\nThis submission is a selection of plots that uses small multiples to explore the within study relationship between key variables related to baseline and outcome. In this case the relationship between blood pressure measured at baseline and 1-year. Small multiples provide an instant overview and a visual check for potential differences.\r\nThe first set of plots use ridge plots to explore the distribution by treatment. This is an example of the outcome variable (BP at 1-year). Ridge plots provide a visual check and comparison. However, the comparison is by treatment, where plotting the treatment difference could be more informative. The ridge plots also create a slight “3d” effect, where the upper placed treatment is “higher” in value compared to the lower; this could be potentially misleading when comparing across treatments.\r\n\r\nThe second set of plots use scatter plots to explore the relationship between baseline and 1-year by treatment. The plots are designed to provide a message. In this case, further checking of the data is required for studies 1 and 3.\r\n\r\nCloser examination identifies systematic patterns in the data that may indicate we would want to exclude those studies from a “full model”, or at least query the issue further. This is a good example of why visualisations are important to identify issues with the data, and to identify “insights”.\r\nhigh-resolution image high-resolution image high-resolution image high-resolution image\r\nlink to code\r\n\r\nExample 5. Baseline characteristics\r\nhigh-resolution image\r\nlink to code\r\nThe final submission explored the use of ridge plots again to replace the typical “table one” with a visual representation. As a quick overview, this provides an instant overview of the distribution of many continuous variables. However, the treatment comparisons between ridges also suffer from this “3d” effect. Another potential problem is how to scale the distributions so that comparisons with skewed distributions with data points with extreme values can be displayed.\r\nCode\r\n\r\nExample 1. Forest plot\r\nThe following code only shows the app code. The complete code can be found here (zip folder).\r\n\r\n\r\nlibrary(shiny)\r\nlibrary(shinythemes)\r\nlibrary(r2d3)\r\nlibrary(shinyhelper)\r\n\r\nui <- fluidPage(\r\n  theme = shinytheme('united'),\r\n  title = 'Visualizing Heterogeneity in Meta-Analyses',\r\n\r\n  tags$style('\r\n    body {\r\n      margin: auto 30px;\r\n    }\r\n    footer {\r\n      padding: 5px;\r\n      text-align: right;\r\n    }\r\n    .shinyhelper-container i {\r\n      font-size: 20px;\r\n    }\r\n    #control-panel {\r\n      display: flex;\r\n      align-items: center;\r\n    }\r\n    #forest-container {\r\n      display: flex;\r\n      flex-direction: column;\r\n      align-items: center;\r\n    }\r\n  '),\r\n  \r\n  div(class = 'page-header',\r\n      h1('Visualizing Heterogeneity in Meta-Analyses'),\r\n      h3('Forest Plot with Heterogeneity Bands')),\r\n  \r\n  wellPanel(style = 'margin: 20px auto;',\r\n            fluidRow(id = 'control-panel',\r\n                     column(2,\r\n                            radioButtons('summary_measure',\r\n                                         label = 'Summary measure:',\r\n                                         choices = list('Odds ratio' = 'or',\r\n                                                        'Risk ratio' = 'rr'))),\r\n                     column(5,\r\n                            sliderInput('d3_width',\r\n                                        'Plot width:',\r\n                                        value = 850,\r\n                                        min = 750,\r\n                                        max = 1300,\r\n                                        step = 10,\r\n                                        post = ' px')),\r\n                     column(5,\r\n                            sliderInput('d3_height',\r\n                                        'Plot height:',\r\n                                        value = 500,\r\n                                        min = 350,\r\n                                        step = 10,\r\n                                        max = 800,\r\n                                        post = ' px')))),\r\n  \r\n  helper(content = 'interpretation',\r\n         colour = 'teal',\r\n         buttonLabel = 'OK',\r\n         div(id ='forest-container',\r\n             style = 'min-height: 350px;',\r\n             d3Output('d3Forest'))),\r\n  \r\n  hr(),\r\n  tags$footer('Built by',\r\n              a(' Waseem Medhat',\r\n                href = 'https://linkedin.com/in/waseem-medhat'),\r\n              ' for ',\r\n              a('Wonderful Wednesdays',\r\n                href = 'https://psiweb.org/sigs-special-interest-groups/visualisation/welcome-to-wonderful-wednesdays')))\r\n\r\nserver <- function(input, output) {\r\n  observe_helpers()\r\n  \r\n  observe({\r\n    metadata <- readRDS(\r\n      sprintf('data/metadata_%s.rds', input$summary_measure)\r\n    )    \r\n    \r\n    removeUI('#d3Forest', immediate = TRUE)\r\n    \r\n    insertUI(\r\n      selector = '#forest-container',\r\n      where = 'beforeEnd',\r\n      ui = d3Output('d3Forest', height = input$d3_height, width = input$d3_width)\r\n    )\r\n    \r\n    output$d3Forest <- renderD3({\r\n      r2d3(metadata, script = 'src/forestWithBands.js')\r\n    })\r\n  })\r\n  \r\n}\r\n\r\nshinyApp(ui = ui, server = server)\r\n\r\n\r\n\r\nBack to blog\r\n\r\nExample 2. Explorer app\r\n\r\n\r\n# EC subscreen presentation\r\n\r\nrm(list=ls())\r\nsetwd(\"o:/1_Global_Biostatistics/Biostatistics Innovation Center/BIC Project - Subgroup Analyses/Screening/_archive/WW/\")\r\n\r\nsuppressPackageStartupMessages(library(dplyr)) \r\nlibrary(survival)\r\nlibrary(subscreen)\r\n\r\nA=read.csv(file=\"BIG_DATA_PSI_WW_DEC2020.csv\", sep=\",\", dec=\".\", na.strings = \"\", header=TRUE)\r\n\r\nA$CHG <- as.numeric(A$CHG)\r\nA$PCHG <- as.numeric(A$PCHG)\r\nA$AVALCAT1N <- as.numeric(A$AVALCAT1N)\r\nA$AVALCAT2N <- as.numeric(A$AVALCAT2N)\r\n\r\nA %>% group_by(Base_SBP) %>% count()\r\n\r\n#dychotomisation/categorisation of continuous variables\r\n\r\nA$HEIGHT <- as.numeric(A$HEIGHT)\r\nhei.median <- median(A$HEIGHT, na.rm=TRUE)\r\nA$Height_gr[A$HEIGHT <  171] <- \"A) < 171 cm (median)\"\r\nA$Height_gr[A$HEIGHT >= 171] <- \"B) >=171 cm\"\r\nA$Height_gr[is.na(A$HEIGHT)] <- \"C) missing\"\r\n\r\nA$WEIGHT <- as.numeric(A$WEIGHT)\r\nwei.median <- median(A$WEIGHT, na.rm=TRUE)\r\nA$Weight_gr[A$WEIGHT <  60] <- \"A) < 60 kg\"\r\nA$Weight_gr[A$WEIGHT >= 60] <- \"B) 60-90 cm\"\r\nA$Weight_gr[A$WEIGHT >  90] <- \"C) > 90 cm\"\r\nA$Weight_gr[is.na(A$WEIGHT)] <- \"D) missing\"\r\n\r\nA$BMI <- as.numeric(A$BMI)\r\nbmi.median <- median(A$BMI, na.rm=TRUE)\r\nA$BMI_gr[A$BMI <  18.5] <- \"A) < 18.5 (WHO)\"\r\nA$BMI_gr[A$BMI >= 18.5] <- \"B) 18.5-24.9 (WHO)\"\r\nA$BMI_gr[A$BMI >=  25]  <- \"C) 25-29.9 (WHO)\"\r\nA$BMI_gr[A$BMI >=  30]  <- \"D) >=30 (WHO)\"\r\nA$BMI_gr[is.na(A$BMI)]  <- \"E) missing\"\r\n\r\nA$Age_gr[A$AGE <  30] <- \"A) < 30 years\"\r\nA$Age_gr[A$AGE >= 30] <- \"B) 30-59 cm\"\r\nA$Age_gr[A$AGE >= 60] <- \"C) 60-75 cm\"\r\nA$Age_gr[A$AGE >  75] <- \"D) > 75 cm\"\r\n\r\nA$CHD10R1[A$CHD10R1==\"High (>20%)\"] <- \"Mx High (>20%)\"\r\n\r\nA$ALBSI <- as.numeric(A$ALBSI)\r\nmedian(A$ALBSI, na.rm=TRUE)\r\nA$ALB_med[A$ALBSI <  45] <- \"A) <  45 (median)\"\r\nA$ALB_med[A$ALBSI >= 45] <- \"B) >= 45 (median)\"\r\nA$ALB_med[is.na(A$ALBSI)]  <- \"C) missing\"\r\n\r\nA$BASOSI <- as.numeric(A$BASOSI)\r\nmedian(A$BASOSI, na.rm=TRUE)\r\nA$BASO_med[A$BASOSI <  0.02] <- \"A) <  0.02 (median)\"\r\nA$BASO_med[A$BASOSI >= 0.02] <- \"B) >= 0.02 (median)\"\r\nA$BASO_med[is.na(A$BASOSI)]  <- \"C) missing\"\r\n\r\nA$BICARSI <- as.numeric(A$BICARSI)\r\nmedian(A$BICARSI, na.rm=TRUE)\r\nA$BICAR_med[A$BICARSI <  24] <- \"A) <  24 (median)\"\r\nA$BICAR_med[A$BICARSI >= 24] <- \"B) >= 24 (median)\"\r\nA$BICAR_med[is.na(A$BICARSI)]  <- \"C) missing\"\r\n\r\nA$BILISI <- as.numeric(A$BILISI)\r\nmedian(A$BILISI, na.rm=TRUE)\r\nA$BILI_med[A$BILISI <  7] <- \"A) <  7 (median)\"\r\nA$BILI_med[A$BILISI >= 7] <- \"B) >= 7 (median)\"\r\nA$BILI_med[is.na(A$BILISI)]  <- \"C) missing\"\r\n\r\nA$BUNSI <- as.numeric(A$BUNSI)\r\nmedian(A$BUNSI, na.rm=TRUE)\r\nA$BUN_med[A$BUNSI <  4.64] <- \"A) <  4.64 (median)\"\r\nA$BUN_med[A$BUNSI >= 4.64] <- \"B) >= 4.64 (median)\"\r\nA$BUN_med[is.na(A$BUNSI)]  <- \"C) missing\"\r\n\r\nA$CASI <- as.numeric(A$CASI)\r\nmedian(A$CASI, na.rm=TRUE)\r\nA$CA_med[A$CASI <  2.38] <- \"A) <  2.38 (median)\"\r\nA$CA_med[A$CASI >= 2.38] <- \"B) >= 2.38 (median)\"\r\nA$CA_med[is.na(A$CASI)]  <- \"C) missing\"\r\n\r\nA$CHOL_HDL <- as.numeric(A$CHOL_HDL)\r\nmedian(A$CHOL_HDL, na.rm=TRUE)\r\nA$CHOL_HDL_med[A$CHOL_HDL <  4] <- \"A) <  4 (median)\"\r\nA$CHOL_HDL_med[A$CHOL_HDL >= 4] <- \"B) >= 4 (median)\"\r\nA$CHOL_HDL_med[is.na(A$CHOL_HDL)]  <- \"C) missing\"\r\n\r\nA$CHOLSI <- as.numeric(A$CHOLSI)\r\nmedian(A$CHOLSI, na.rm=TRUE)\r\nA$CHOL_med[A$CHOLSI <  4.95] <- \"A) <  4.95 (median)\"\r\nA$CHOL_med[A$CHOLSI >= 4.95] <- \"B) >= 4.95 (median)\"\r\nA$CHOL_med[is.na(A$CHOLSI)]  <- \"C) missing\"\r\n\r\nA$CREATSI <- as.numeric(A$CREATSI)\r\nmedian(A$CREATSI, na.rm=TRUE)\r\nA$CREAT_med[A$CREATSI <  77] <- \"A) <  77 (median)\"\r\nA$CREAT_med[A$CREATSI >= 77] <- \"B) >= 77 (median)\"\r\nA$CREAT_med[is.na(A$CREATSI)]  <- \"C) missing\"\r\n\r\nA$EOSLESI <- as.numeric(A$EOSLESI)\r\nmedian(A$EOSLESI, na.rm=TRUE)\r\nA$EOSLE_med[A$EOSLESI <  2] <- \"A) <  2 (median)\"\r\nA$EOSLE_med[A$EOSLESI >= 2] <- \"B) >= 2 (median)\"\r\nA$EOSLE_med[is.na(A$EOSLESI)]  <- \"C) missing\"\r\n\r\nA$EOSSI <- as.numeric(A$EOSSI)\r\nmedian(A$EOSSI, na.rm=TRUE)\r\nA$EOS_med[A$EOSSI <  0.16] <- \"A) <  0.16 (median)\"\r\nA$EOS_med[A$EOSSI >= 0.16] <- \"B) >= 0.16 (median)\"\r\nA$EOS_med[is.na(A$EOSSI)]  <- \"C) missing\"\r\n\r\nA$GGTSI <- as.numeric(A$GGTSI)\r\nmedian(A$GGTSI, na.rm=TRUE)\r\nA$GGT_med[A$GGTSI <  25] <- \"A) <  25 (median)\"\r\nA$GGT_med[A$GGTSI >= 25] <- \"B) >= 25 (median)\"\r\nA$GGT_med[is.na(A$GGTSI)]  <- \"C) missing\"\r\n\r\nA$GLUCPSI <- as.numeric(A$GLUCPSI)\r\nmedian(A$GLUCPSI, na.rm=TRUE)\r\nA$GLUCP_med[A$GLUCPSI <  5.2] <- \"A) <  5.2 (median)\"\r\nA$GLUCP_med[A$GLUCPSI >= 5.2] <- \"B) >= 5.2 (median)\"\r\nA$GLUCP_med[is.na(A$GLUCPSI)]  <- \"C) missing\"\r\n\r\nA$HCT <- as.numeric(A$HCT)\r\nmedian(A$HCT, na.rm=TRUE)\r\nA$HCT_med[A$HCT <  0.43] <- \"A) <  0.43 (median)\"\r\nA$HCT_med[A$HCT >= 0.43] <- \"B) >= 0.43 (median)\"\r\nA$HCT_med[is.na(A$HCT)]  <- \"C) missing\"\r\n\r\nA$HDLSI <- as.numeric(A$HDLSI)\r\nmedian(A$HDLSI, na.rm=TRUE)\r\nA$HDL_med[A$HDLSI <  1.22] <- \"A) <  1.22 (median)\"\r\nA$HDL_med[A$HDLSI >= 1.22] <- \"B) >= 1.22 (median)\"\r\nA$HDL_med[is.na(A$HDLSI)]  <- \"C) missing\"\r\n\r\nA$HDT <- as.numeric(A$HDT)\r\nmedian(A$HDT, na.rm=TRUE)\r\nA$HDT_med[A$HDT <  1.1] <- \"A) <  1.1 (median)\"\r\nA$HDT_med[A$HDT >= 1.1] <- \"B) >= 1.1 (median)\"\r\nA$HDT_med[is.na(A$HDT)]  <- \"C) missing\"\r\n\r\nA$HGBSI <- as.numeric(A$HGBSI)\r\nmedian(A$HGBSI, na.rm=TRUE)\r\nA$HGB_med[A$HGBSI <  146] <- \"A) <  146 (median)\"\r\nA$HGB_med[A$HGBSI >= 146] <- \"B) >= 146 (median)\"\r\nA$HGB_med[is.na(A$HGBSI)]  <- \"C) missing\"\r\n\r\nA$KSI <- as.numeric(A$KSI)\r\nmedian(A$KSI, na.rm=TRUE)\r\nA$K_med[A$KSI <  4.3] <- \"A) <  4.3 (median)\"\r\nA$K_med[A$KSI >= 4.3] <- \"B) >= 4.3 (median)\"\r\nA$K_med[is.na(A$KSI)]  <- \"C) missing\"\r\n\r\nA$LDLSI <- as.numeric(A$LDLSI)\r\nmedian(A$LDLSI, na.rm=TRUE)\r\nA$LDL_med[A$LDLSI <  3.11] <- \"A) <  3.11 (median)\"\r\nA$LDL_med[A$LDLSI >= 3.11] <- \"B) >= 3.11 (median)\"\r\nA$LDL_med[is.na(A$LDLSI)]  <- \"C) missing\"\r\n\r\nA$LPASI <- as.numeric(A$LPASI)\r\nmedian(A$LPASI, na.rm=TRUE)\r\nA$LPA_med[A$LPASI <  0.21] <- \"A) <  0.21 (median)\"\r\nA$LPA_med[A$LPASI >= 0.21] <- \"B) >= 0.21 (median)\"\r\nA$LPA_med[is.na(A$LPASI)]  <- \"C) missing\"\r\n\r\nA$LYMLESI <- as.numeric(A$LYMLESI)\r\nmedian(A$LYMLESI, na.rm=TRUE)\r\nA$LYMLE_med[A$LYMLESI <  26] <- \"A) <  26 (median)\"\r\nA$LYMLE_med[A$LYMLESI >= 26] <- \"B) >= 26 (median)\"\r\nA$LYMLE_med[is.na(A$LYMLESI)]  <- \"C) missing\"\r\n\r\nA$LYMSI <- as.numeric(A$LYMSI)\r\nmedian(A$LYMSI, na.rm=TRUE)\r\nA$LYM_med[A$LYMSI <  1.76] <- \"A) <  1.76 (median)\"\r\nA$LYM_med[A$LYMSI >= 1.76] <- \"B) >= 1.76 (median)\"\r\nA$LYM_med[is.na(A$LYMSI)]  <- \"C) missing\"\r\n\r\nA$MONOLSI <- as.numeric(A$MONOLSI)\r\nmedian(A$MONOLSI, na.rm=TRUE)\r\nA$MONOL_med[A$MONOLSI <  6] <- \"A) <  6 (median)\"\r\nA$MONOL_med[A$MONOLSI >= 6] <- \"B) >= 6 (median)\"\r\nA$MONOL_med[is.na(A$MONOLSI)]  <- \"C) missing\"\r\n\r\nA$TRIGFSI <- as.numeric(A$TRIGFSI)\r\nmedian(A$TRIGFSI, na.rm=TRUE)\r\nA$TRIGF_med[A$TRIGFSI <  1.41] <- \"A) <  1.41 (median)\"\r\nA$TRIGF_med[A$TRIGFSI >= 1.41] <- \"B) >= 1.41 (median)\"\r\nA$TRIGF_med[is.na(A$TRIGFSI)]  <- \"C) missing\"\r\n\r\nA$URATESI <- as.numeric(A$URATESI)\r\nmedian(A$URATESI, na.rm=TRUE)\r\nA$URATE_med[A$URATESI <  357] <- \"A) <  357 (median)\"\r\nA$URATE_med[A$URATESI >= 357] <- \"B) >= 357 (median)\"\r\nA$URATE_med[is.na(A$URATESI)]  <- \"C) missing\"\r\n\r\nA$WBCSI <- as.numeric(A$WBCSI)\r\nmedian(A$WBCSI, na.rm=TRUE)\r\nA$WBC_med[A$WBCSI <  7.1] <- \"A) <  7.1 (median)\"\r\nA$WBC_med[A$WBCSI >= 7.1] <- \"B) >= 7.1 (median)\"\r\nA$WBC_med[is.na(A$WBCSI)]  <- \"C) missing\"\r\n\r\nA$BASE <- as.numeric(A$BASE)\r\nmedian(A$BASE, na.rm=TRUE)\r\nA$Base_SBP[A$BASE <  132] <- \"A) < 132 mmHg\"\r\nA$Base_SBP[A$BASE >= 132] <- \"B) 132-145 mmHg\"\r\nA$Base_SBP[A$BASE >= 145] <- \"C) >= 145 mmHg\"\r\nA$Base_SBP[is.na(A$BASE)]  <- \"D) missing\"\r\n\r\n\r\n#names(A)[names(A) == \"AGEGR1\"]   <- \"\"\r\n\r\n\r\nfactors=c(\"STUDYID\", \"SEX\", \"RACE\", \"ETHNIC\", \"Height_gr\", \"Weight_gr\", \"BMI_gr\", \"Age_gr\", \r\n          \"Base_SBP\", \"CHD10R1\", \"ALB_med\", \"BASO_med\", \"BICAR_med\", \"BILI_med\", \"BUN_med\", \"CA_med\",\r\n          \"CHOL_HDL_med\", \"CHOL_med\", \"CREAT_med\", \"EOSLE_med\", \"EOS_med\", \"GGT_med\", \"GLUCP_med\", \"HCT_med\",\r\n          \"HDL_med\", \"HDT_med\", \"HGB_med\", \"K_med\", \"LDL_med\", \"LPA_med\", \"LYMLE_med\", \"LYM_med\",\r\n          \"MONOL_med\", \"TRIGF_med\", \"URATE_med\", \"WBC_med\")\r\n\r\n### analysis function \"auwe\" to be filled in with the statistical evaluation\r\nauwe<- function(D){\r\n  \r\n  Mean.Change.SBP.SoC <- round(mean(D$CHG[D$TRT01PN == 0], na.rm=TRUE),2)\r\n  Mean.Change.SBP.Int <- round(mean(D$CHG[D$TRT01PN == 1], na.rm=TRUE),2)\r\n  Diff.Change.SBP     <- Mean.Change.SBP.SoC - Mean.Change.SBP.Int\r\n  \r\n  Mean.PctChange.SBP.SoC <- round(mean(D$PCHG[D$TRT01PN == 0], na.rm=TRUE),2)\r\n  Mean.PctChange.SBP.Int <- round(mean(D$PCHG[D$TRT01PN == 1], na.rm=TRUE),2)\r\n  Diff.PctChange.SBP     <-  Mean.PctChange.SBP.Int - Mean.PctChange.SBP.SoC\r\n  \r\n  N.SoC  <- sum(D$TRT01PN==0)\r\n  N.Int  <- sum(D$TRT01PN==1)\r\n\r\n  Responder.120.SoC    <- sum(D$AVALCAT1N[D$TRT01PN == 0] == 1, na.rm=TRUE)\r\n  Responder.120.Int    <- sum(D$AVALCAT1N[D$TRT01PN == 1] == 1, na.rm=TRUE)\r\n\r\n  Prop.Responder.120.SoC <- round(Responder.120.SoC/sum(!is.na(D$AVALCAT1N[D$TRT01PN == 0]), na.rm=TRUE)*100,2)\r\n  Prop.Responder.120.Int <- round(Responder.120.Int/sum(!is.na(D$AVALCAT1N[D$TRT01PN == 1]), na.rm=TRUE)*100,2)\r\n\r\n  Diff.Responder.120     <- Prop.Responder.120.Int - Prop.Responder.120.SoC\r\n  OR.Responder.120       <- limit(round((Responder.120.Int * (N.SoC-Responder.120.SoC))/(Responder.120.SoC * (N.Int-Responder.120.Int)),3), high=100)\r\n  RelRisk.Responder.120  <- limit(round((Responder.120.Int * N.SoC)/(Responder.120.SoC * N.Int),3), high=100)\r\n  \r\n  Responder.132.SoC    <- sum(D$AVALCAT2N[D$TRT01PN == 0] == 0, na.rm=TRUE)\r\n  Responder.132.Int    <- sum(D$AVALCAT2N[D$TRT01PN == 1] == 0, na.rm=TRUE)\r\n  \r\n  Prop.Responder.132.SoC <- round(Responder.132.SoC/sum(!is.na(D$AVALCAT2N[D$TRT01PN == 0]), na.rm=TRUE)*100,2)\r\n  Prop.Responder.132.Int <- round(Responder.132.Int/sum(!is.na(D$AVALCAT2N[D$TRT01PN == 1]), na.rm=TRUE)*100,2)\r\n  \r\n  Diff.Responder.132     <- Prop.Responder.132.Int - Prop.Responder.132.SoC\r\n  OR.Responder.132       <- limit(round((Responder.132.Int * (N.SoC-Responder.132.SoC))/(Responder.132.SoC * (N.Int-Responder.132.Int)),3))\r\n  RelRisk.Responder.132  <- limit(round((Responder.132.Int * N.SoC)/(Responder.132.SoC * N.Int),3))\r\n  \r\n  \r\n  return(data.frame(Diff.Change.SBP, Mean.Change.SBP.SoC, Mean.Change.SBP.Int,\r\n                    Diff.PctChange.SBP, Mean.PctChange.SBP.SoC, Mean.PctChange.SBP.Int, \r\n                    Diff.Responder.120, OR.Responder.120, RelRisk.Responder.120, Prop.Responder.120.SoC, Prop.Responder.120.Int,\r\n                    Diff.Responder.132, OR.Responder.132, RelRisk.Responder.132, Prop.Responder.132.SoC, Prop.Responder.132.Int,\r\n                    N.SoC, N.Int\r\n                    ))\r\n\r\n}\r\n\r\n#limit function / truncation of large or small estimates\r\nlimit <- function(x, low=0.05, high=20){\r\n  if (!is.na(x)) y=min(high, max(low,x)) else y=NA\r\n  return (y)\r\n}\r\n\r\nresults <- subscreencalc(data=A,\r\n                    eval_function=auwe,\r\n                    endpoints=c(\"CHG\", \"PCHG\", \"AVALCAT1N\", \"AVALCAT2N\"),\r\n                    treat=\"TRT01PN\",\r\n                    subjectid=\"USUBJD\",\r\n                    factors=factors,\r\n                    min_comb=1,\r\n                    max_comb=2,\r\n                    nkernel=16,\r\n                    par_functions = \"limit\",\r\n                    factorial = TRUE,\r\n                    use_complement =FALSE, \r\n                    verbose=T)\r\n\r\n\r\n#setwd(\"O:/1_Global_Biostatistics/Biostatistics Innovation Center/BIC Project - Subgroup Analyses/Screening/16244\")\r\n#save(results, file = \"o:/1_Global_Biostatistics/Biostatistics Innovation Center/BIC Project - Subgroup Analyses/Screening/_archive/WW/sgs3.RData\")\r\n# rm(\"results\")\r\n# load(\"o:/1_Global_Biostatistics/Biostatistics Innovation Center/BIC Project - Subgroup Analyses/Screening/_archive/WW/sgs3.RData\")\r\n\r\nsubscreenshow(results, port=14444)\r\n\r\n\r\n\r\nBack to blog\r\n\r\nExample 3. Meta-analysis shiny app\r\nBack to blog\r\n\r\nExample 4. Comparison of blood pressure by study\r\n\r\n\r\nlibrary(readr)\r\nlibrary(tidyverse)\r\nlibrary(Hmisc)\r\nlibrary(hrbrthemes)\r\nlibrary(ggtext)\r\nlibrary(rlang)\r\n\r\n\r\n# Functions originally from Cedric Scherer  \r\n# https://cedricscherer.netlify.app/2019/08/05/a-ggplot2-tutorial-for-beautiful-plotting-in-r/\r\nelement_textbox_highlight <- function(..., hi.labels = NULL, hi.fill = NULL,\r\n                                      hi.col = NULL, hi.box.col = NULL, hi.family = NULL) {\r\n  structure(\r\n    c(element_textbox(...),\r\n      list(hi.labels = hi.labels, hi.fill = hi.fill, hi.col = hi.col, hi.box.col = hi.box.col, hi.family = hi.family)\r\n    ),\r\n    class = c(\"element_textbox_highlight\", \"element_textbox\", \"element_text\", \"element\")\r\n  )\r\n}\r\n\r\nelement_grob.element_textbox_highlight <- function(element, label = \"\", ...) {\r\n  if (label %in% element$hi.labels) {\r\n    element$fill <- element$hi.fill %||% element$fill\r\n    element$colour <- element$hi.col %||% element$colour\r\n    element$box.colour <- element$hi.box.col %||% element$box.colour\r\n    element$family <- element$hi.family %||% element$family\r\n  }\r\n  NextMethod()\r\n}\r\n\r\n\r\n## Read data and manipulate\r\ndata <- read_csv(\"BIG_DATA_PSI_WW_DEC2020.csv\") %>%\r\n  mutate(\r\n    TRT01PC = if_else(TRT01P == \"INT\", \"Intensive treatment\", \"Standard of care\"),\r\n    STUDYIDC = paste0(\"Study \", STUDYID)\r\n  )\r\n\r\n# Check color palettes \r\n# RColorBrewer::display.brewer.all()\r\n\r\n\r\n\r\n#-------------------------------------------------------\r\n# Small multiples of BASE by Study\r\n\r\n\r\n\r\nplot1a <-\r\n  ggplot(data, aes(x = BASE, y = TRT01PC, fill = TRT01PC)) +\r\n  geom_density_ridges(scale = 4,\r\n                      jittered_points = TRUE,\r\n                      position = position_points_jitter(width = 0.05, height = 0),\r\n                      point_shape = '|', point_size = 3, point_alpha = 1, alpha = 0.7) + \r\n  scale_y_discrete(expand = c(0, 0)) +   \r\n  scale_x_continuous(expand = c(0, 0)) + \r\n  scale_fill_brewer(palette = \"Dark2\") +\r\n  coord_cartesian(clip = \"off\") + \r\n  theme_ipsum_rc(base_size = 16) +\r\n  labs(x = \"DBP [mmHg] at 1-year\") +\r\n  facet_wrap(~STUDYIDC) +\r\n  labs(\r\n    x = \"Mean systolic blood pressure at baseline [mmHg]\",\r\n    fill = \"Treatment\",\r\n    title = \"Comparison of mean systolic blood pressure measured at 1-year by study\",\r\n    subtitle = \"There is some evidence of a bi-modal distribution in studys 1 and 3\",\r\n    caption = \"Data: BIG_DATA_PSI_WW_DEC2020.csv\"\r\n  ) +\r\n  theme(legend.position = \"bottom\")\r\n\r\n\r\nggsave(\"eda-plot1a.png\", plot1a, height = 8, width = 12, dpi = 250)\r\n\r\n\r\n\r\n\r\n#-------------------------------------------------------\r\n# Small multiples of AVAL by Study\r\n\r\n\r\n\r\nplot1b <-\r\n  ggplot(data, aes(x = AVAL, y = TRT01PC, fill = TRT01PC)) +\r\n  geom_density_ridges(scale = 4,\r\n                      jittered_points = TRUE,\r\n                      position = position_points_jitter(width = 0.05, height = 0),\r\n                      point_shape = '|', point_size = 3, point_alpha = 1, alpha = 0.7) + \r\n  scale_y_discrete(expand = c(0, 0)) +   \r\n  scale_x_continuous(expand = c(0, 0)) + \r\n  scale_fill_brewer(palette = \"Dark2\") +\r\n  coord_cartesian(clip = \"off\") + \r\n  theme_ipsum_rc(base_size = 16) +\r\n  labs(x = \"DBP [mmHg] at 1-year\") +\r\n  facet_wrap(~STUDYIDC) +\r\n  labs(\r\n    x = \"Mean systolic blood pressure at 1-year [mmHg]\",\r\n    fill = \"Treatment\",\r\n    title = \"Comparison of mean systolic blood pressure measured at 1-year by study\",\r\n    subtitle = \"There is some evidence of a bi-modal distribution in studys 1 and 3\",\r\n    caption = \"Data: BIG_DATA_PSI_WW_DEC2020.csv\"\r\n  ) +\r\n  theme(legend.position = \"bottom\")\r\n\r\n\r\nggsave(\"eda-plot1b.png\", plot1a, height = 8, width = 12, dpi = 250)\r\n\r\n\r\n\r\n\r\n#-------------------------------------------------------\r\n# Small multiples of AVAL vs BASE by Study\r\n\r\nplot2a <-\r\n  data %>% ggplot(aes(\r\n    x = BASE,\r\n    y = AVAL,\r\n    group = TRT01PC,\r\n    color = TRT01PC\r\n  )) +\r\n  geom_abline(\r\n    intercept = 0,\r\n    slope = 1,\r\n    color = \"grey\",\r\n    size = 1,\r\n    alpha = 0.5\r\n  ) +\r\n  geom_smooth(\r\n    method = \"lm\",\r\n    formula = y ~ splines::bs(x, 3),\r\n    se = TRUE,\r\n    alpha = 0.55\r\n  ) +\r\n  geom_point(alpha = 0.45, size = 0.6) +\r\n  facet_wrap( ~ STUDYIDC, ncol = 3) +\r\n  scale_color_brewer(palette = \"Dark2\") +\r\n  scale_x_continuous(breaks = scales::pretty_breaks(n = 5)) +\r\n  scale_y_continuous(breaks = scales::pretty_breaks(n = 5)) +\r\n  labs(\r\n    x = \"SBP [mmHg] at randomisation\",\r\n    y = \"SBP [mmHg] at 1-year\",\r\n    color = \"Treatment\",\r\n    title = \"Comparison of pre-post mean systolic blood pressure (SBP) measured at baseline and 1-year\",\r\n    subtitle = \"Study 1 and 3 may have data quality issues - further investigation required\",\r\n    caption = \"The by-treatment relationship also disaplyed using a cubic splines.\\ny = x reference line also displayed.\\nData: BIG_DATA_PSI_WW_DEC2020.csv\"\r\n  )  +\r\n  theme_ipsum_rc(base_size = 16) +\r\n  theme(\r\n    strip.text = element_textbox_highlight(\r\n      size = 12,\r\n      face = \"bold\",\r\n      fill = \"white\",\r\n      box.color = \"white\",\r\n      color = \"gray40\",\r\n      halign = .5,\r\n      linetype = 1,\r\n      r = unit(0, \"pt\"),\r\n      width = unit(1, \"npc\"),\r\n      padding = margin(2, 0, 1, 0),\r\n      margin = margin(0, 1, 3, 1),\r\n      hi.labels = c(\"Study 1\", \"Study 3\"),\r\n      hi.family = \"Bangers\",\r\n      hi.fill = \"firebrick\",\r\n      hi.box.col = \"firebrick\",\r\n      hi.col = \"white\"\r\n    ),\r\n    legend.position = \"bottom\"\r\n  )\r\n\r\n\r\nggsave(\"eda-plot2a.png\", plot2a, height = 8, width = 12, dpi = 250)\r\n\r\n\r\n\r\n\r\n#---------------------------------------\r\n# Plot study1 and 3 only \r\n\r\nplot2b <-\r\n  data %>%\r\n  filter(STUDYID == c(1, 3)) %>% \r\n  ggplot(aes(\r\n    x = BASE,\r\n    y = AVAL,\r\n    group = TRT01PC,\r\n    color = TRT01PC\r\n  )) +\r\n  geom_abline(\r\n    intercept = 0,\r\n    slope = 1,\r\n    color = \"grey\",\r\n    size = 1,\r\n    alpha = 0.5\r\n  ) +\r\n  geom_point(alpha = 0.7, size = 1) +\r\n  facet_grid(TRT01PC  ~ STUDYIDC) +\r\n  scale_color_brewer(palette = \"Dark2\") +\r\n  scale_x_continuous(breaks = scales::pretty_breaks(n = 5)) +\r\n  scale_y_continuous(breaks = scales::pretty_breaks(n = 5)) +\r\n  labs(\r\n    x = \"Mean systolic blood pressure [mmHg] at randomisation\",\r\n    y = \"Mean systolic blood pressure [mmHg] at 1-year\",\r\n    color = \"Treatment\",\r\n    title = \"The intensive treatment arm for study 1 and 3 displayed patterns of interest\",\r\n    subtitle = \"It is always important to plot data many ways\",\r\n    caption = \"http://robertgrantstats.co.uk/drawmydata.html \\nData: BIG_DATA_PSI_WW_DEC2020.csv\"\r\n  )  +\r\n  theme_ipsum_rc(base_size = 16) +\r\n  theme(\r\n    strip.text = element_textbox_highlight(\r\n      size = 12,\r\n      face = \"bold\",\r\n      fill = \"white\",\r\n      box.color = \"white\",\r\n      color = \"gray40\",\r\n      halign = .5,\r\n      linetype = 1,\r\n      r = unit(0, \"pt\"),\r\n      width = unit(1, \"npc\"),\r\n      padding = margin(2, 0, 1, 0),\r\n      margin = margin(0, 1, 3, 1),\r\n      hi.labels = c(\"Study 1\", \"Study 3\"),\r\n      hi.family = \"Bangers\",\r\n      hi.fill = \"firebrick\",\r\n      hi.box.col = \"firebrick\",\r\n      hi.col = \"white\"\r\n    ),\r\n    legend.position = \"bottom\"\r\n  )\r\n\r\n\r\nggsave(\"eda-plot2b.png\", plot2b, height = 8, width = 12, dpi = 250)\r\n\r\n\r\n\r\nBack to blog\r\n\r\nExample 5. Correlation plot\r\n\r\n\r\nlibrary(tidyverse)\r\nlibrary(ggridges)\r\nlibrary(readr)\r\nlibrary(ggtext)\r\nlibrary(rlang)\r\n\r\n## Read data and manipulate\r\ndata <- read_csv(\"BIG_DATA_PSI_WW_DEC2020.csv\") %>%\r\n  mutate(\r\n    TRT01PC = if_else(TRT01P == \"INT\", \"Intensive treatment\", \"Standard of care\"),\r\n    STUDYIDC = paste0(\"Study \", STUDYID)\r\n  )\r\n\r\n\r\nplot_data <-\r\n  data %>%\r\n  pivot_longer(\r\n    cols = c(\r\n      AGE,\r\n      ALBSI,\r\n      BASOSI,\r\n      BASE,\r\n      BICARSI,\r\n      BILISI,\r\n      BMI,\r\n      BUNSI,\r\n      CHOL_HDL,\r\n      CHOLSI,\r\n      CREATSI,\r\n      EOSSI,\r\n      GGTSI,\r\n      GLUCPSI,\r\n      HCT,\r\n      HDLSI,\r\n      HDT,\r\n      HGBSI,\r\n      KSI,\r\n      LDLSI,\r\n      LPASI,\r\n      LYMLESI,\r\n      LYMSI,\r\n      TRIGFSI,\r\n      URATESI,\r\n      WBCSI\r\n    ),\r\n    names_to = \"var\",\r\n    values_to = \"val\"\r\n  )\r\n\r\n\r\nridge_plot <- \r\n  plot_data %>%\r\n  ggplot(aes(\r\n    x = val,\r\n    y = factor(STUDYID),\r\n    fill = paste(STUDYIDC, TRT01PC)\r\n  )) +\r\n  geom_density_ridges(alpha = .4,\r\n                      rel_min_height = .01,\r\n                      color = \"white\") +\r\n  scale_fill_cyclical(\r\n    values = c(\"tomato\", \"dodgerblue\"),\r\n    name = \"\",\r\n    labels = c(`Study 1 Intensive treatment` = \"Intensive treatment\",\r\n               `Study 1 Standard of care` = \"Standard of care\"),\r\n    guide = \"legend\"\r\n  ) +\r\n  theme_ridges(grid = FALSE) +\r\n  facet_wrap( ~ var, scales = \"free\", ncol = 5) +\r\n  labs(\r\n    x = \"\",\r\n    y = \"Study\",\r\n    fill = \"Treatment\",\r\n    title = \"Visualising baseline characteristics and demographics by study\",\r\n    subtitle = \"Presented are a selection of continously measured variables\",\r\n    caption = \"Data: BIG_DATA_PSI_WW_DEC2020.csv\"\r\n  ) +\r\n  theme(legend.position = \"bottom\")\r\n\r\nggsave(\r\n  \"ridge_plot.png\",\r\n  ridge_plot,\r\n  height = 12,\r\n  width = 16,\r\n  dpi = 330\r\n)\r\n\r\n\r\n\r\nBack to blog\r\n\r\n\r\n\r\n",
    "preview": "posts/2020-12-03-wonderful-wednesdays-december-2020/./images/forest_plot_with_bands - Waseem Medhat.png",
    "last_modified": "2025-08-22T14:49:25+02:00",
    "input_file": {},
    "preview_width": 872,
    "preview_height": 545
  },
  {
    "path": "posts/2020-11-10-wonderful-wednesdays-november-2020/",
    "title": "Wonderful Wednesdays November 2020",
    "description": "Zachary Skrivanek guides through a number of data visualisations explaining a mediated treatment effect on patient reported quality of life. In addition the problem of missing data should be handled within the graphical representation. A Lollipop plot and a bar chart were presented as well as multiplot solutions using correlation plots or a combination of scatter plots, modelling plots and distribution plots. A point of discussion was the usability of a parallel coordinates plot. Another proposal used a Bayesian model displaying the results in an impressive grable – a combination of graphic and table. The last approach used an innovative way of storytelling with data called scrollytelling.",
    "author": [
      {
        "name": "Zachary Skrivanek",
        "url": "https://www.psiweb.org/sigs-special-interest-groups/visualisation"
      }
    ],
    "date": "2020-11-11",
    "categories": [
      "Mediation analysis",
      "Wonderful Wednesdays"
    ],
    "contents": "\r\nMediator effect example data set\r\nThe purpose of this exercise is to develop data visualization techniques to illustrate that one variable is a mediator for a treatment effect and that this mediator effect is stronger than in other variables. A more detailed description and link to the data can be found here.\r\n\r\nExample 1. Mediation on treatment effect\r\nhigh-resolution image\r\nThis graphic addresses the question of which variable is mediating the treatment effect the most by plotting the reduction in treatment effect after accounting for the variable. One shortcoming of lollipop charts is that they do not allow for a visulization of uncertainty. link to code\r\n\r\nExample 2. Bayesian model\r\n\r\nThe html file can be found here.\r\nThis is a well done “grapple” - a graphic embeded in a table. This table summarizes all essential information in the data to address the mediaton effect of all three variables being considered. The posterior distrubtions are relevant and to the point. It is well annotated, uses color and bold face judiciously to highlight key findings and is organized to let the reader draw the correct conclusion without having to spell it out in the title. This graphic is ready for a journal. The question is: What type of journal? If it is a medical journal then the author might want to exclude the sensitivity analysis results (LOCF or completers) and just pick the appropriate method for handling missing data since this is not of interest to a medical audience. On the other hand if this is for a statistics journal this is quite appropriate. The author is not only showing the key results but the robustness of the results. (And part of the exercise was to account for missingness, so we cannot really blame the author for including this.)\r\nlink to code\r\n\r\nExample 3. Barplot\r\n\r\nhigh-resolution image\r\nThis graphic is similar to the first one except it uses a barchart instead of a lollipop chart and it includes a completers analysis. The title explains the results and the reference line for the marginal treatment effect provides a good reference for the reader.\r\nlink to code\r\n\r\nExample 4. Parallel coords\r\nhigh-resolution image\r\nThe parallel coordinate plot is a classic way to analyze multi-variate data. The correlation between itch and DLQI is apparent by the fact that there are so many horizontal parallel lines connecting the two axes. This is a plot where two key parameters have to be fine tuned to bring out any patterns: the order of the axes and the scaling. By separating Rx and placebo into two different panels and scaling them separately we lose the treatment effect on DLQI. They look quite similar in fact, but that is because they were scaled independently. The author chose to color by LOCF, but this revealed no clear pattern. It would be interesting to combine the two treatment groups and color by treatment to see if that creates a distinct grouping for Rx vs placebo.\r\nThe advantage of this graphic over the barchart and lollipop chart is that we can see the individual variation. But this can be a downside because it can lead to overplotting. Making this interactive where the user could select a set of lines and move the axes could make this plot very powerful.\r\nlink to code\r\n\r\nExample 5. Correlation plot\r\nhigh-resolution image\r\nThis is a succinct summary of the correlations between all of the variables, whether they are based on all data including LOCF imputed or just completers. The use of color in addition to shave of the ellipses is a nice application of redundancy. You do not need to read a legend to realize that blue encodes a positive correlation and red encodes a negative correlation and the level of transparency encodes the magnitude of the correlation.\r\nlink to code\r\n\r\nExample 6. Scatter matrices\r\n\r\n\r\nhigh-resolution image high-resolution image high-resolution image\r\nThese 3 graphics provide an exhaustive amount of information. The 3 graphics address the different ways of treating the missing data. Each graph is a matrix where the upper triangle models the data by treatment and covariate, the lower triangle shows the individual data and the diagonal shows the marginal distributions. The title clearly leads the reader to the conclusion the DLQI is highly correlated with itch and when the reader looks at the panel with two splines, one for each treatment, of DLQI against itch the reader can see that the treatment effect on DLQI is neglible once itch is included in the model.\r\nlink to code\r\nCode\r\n\r\nExample 1. Mediation on treatment effect\r\n\r\n\r\nlibrary(tidyverse)\r\nlibrary(dplyr)\r\nlibrary(tidyr)\r\nlibrary(mediation)\r\nlibrary(grid)\r\nlibrary(gridExtra)\r\nlibrary(haven)\r\nlibrary(ggplot2)\r\nlibrary(cowplot)\r\n\r\ndata <- read_csv(\"/shared/175/arenv/arwork/gsk1278863/mid209676/present_2020_01/code/mediation/TRT.csv\")\r\n\r\n# Summarise data\r\nsum <- data %>%\r\n  group_by(TRT) %>%\r\n  summarise(avg=mean(DLQI))\r\nsort <- c(1,2)\r\nsum <- cbind(sum, sort)\r\n\r\n# Plot Mean DLQI\r\nplot01 <- ggplot(data=sum) +\r\n  geom_text(aes(x=-5, y=sort, label=TRT, color=TRT), size=10) +\r\n  geom_segment(aes(x=0, xend=avg, y=sort, yend=sort, color=TRT)) +\r\n  geom_vline(aes(xintercept=0)) + \r\n  geom_point(aes(x=avg, y=sort, color=TRT), alpha=0.7, size=10) +\r\n  scale_x_continuous(\"Mean DLQI at Week 24\",\r\n                     labels=c(\" \", \"0\", \"10\", \"20\", \"30\"),\r\n                     breaks=c(-10, 0, 10, 20, 30),\r\n                     limits=c(-10, 30)) +\r\n  scale_y_continuous(\" \",\r\n                     labels=c(\" \", \" \", \" \"),\r\n                     breaks=c(1,2,3),\r\n                     limits=c(0, 3)) +\r\n  labs(title=\"Rx reduces DLQI by approx. 5 units. The treatment effect is \\n\r\n              reduced by approx. 4 units when Itch is added to the model. \\n\r\n              Therefore the treatment effect of Rx is mediated primarily by itch.\\n\") +\r\n  theme_minimal() +\r\n  theme(legend.position=\"none\",\r\n        text = element_text(size = 20),\r\n        axis.ticks.x = element_blank(),\r\n\r\n        axis.text.y =  element_blank(),        \r\n        axis.ticks.y = element_blank(),\r\n        axis.title.x = element_text(size = 20),\r\n        plot.title = element_text(hjust = 0.5, size = 25),\r\n        panel.border = element_rect(colour = \"black\", fill=NA, size=0.25),\r\n        panel.grid = element_blank())\r\n\r\n# Mediation analysis (itch)\r\nmodel.I <- lm(itch ~ TRT, data)\r\nmodel.Yi <- lm(DLQI ~ TRT + itch, data)\r\nmed.itch <- mediate(model.I, model.Yi, treat='TRT', mediator='itch',\r\n                   boot=TRUE, sims=500)\r\nitch <- (med.itch$d0)*(-1)\r\n\r\n# Mediation analysis (BSA)\r\nmodel.B <- lm(BSA ~ TRT, data)\r\nmodel.Yb <- lm(DLQI ~ TRT + BSA, data)\r\nmed.BSA <- mediate(model.B, model.Yb, treat='TRT', mediator='BSA',\r\n                    boot=TRUE, sims=500)\r\nBSA <- (med.BSA$d0)\r\n\r\n# Mediation analysis (redness)\r\nmodel.R <- lm(redness ~ TRT, data)\r\nmodel.Yr <- lm(DLQI ~ TRT + redness, data)\r\nmed.redness <- mediate(model.R, model.Yr, treat='TRT', mediator='redness',\r\n                   boot=TRUE, sims=500)\r\nredness <- (med.redness$d0)\r\n\r\n# Combine ACME values\r\nsort <- c(1, 2, 3)\r\nV1 <- \" \"\r\nA <- data.frame(cbind(itch, BSA, redness))\r\nA2 <- gather(A, var, val)\r\nA3 <- cbind(A2, sort, V1)\r\n\r\n# Overall treatment effect\r\nvar = \"Effect\"\r\nsort = 1\r\ncoeff <- data.frame(cbind(summary(model.0 <- lm(DLQI ~ TRT, data))$coefficients[2,1]*(-1), var)) %>%\r\n  mutate(val=as.numeric(V1)) \r\ncoeff2 <- cbind (coeff, sort)\r\n\r\n# Plot treatment effect\r\nplot02 <- ggplot() +\r\n  geom_vline(aes(xintercept=0)) +  \r\n  geom_text(data=coeff2, aes(x=-0.75, y=sort), label=\"Rx Effect\", color=\"blue\", size=10) +\r\n  geom_segment(data=coeff2, aes(x=0, xend=val, y=sort, yend=sort), color=\"blue\") +\r\n  geom_point(data=coeff2, aes(x=val, y=sort), color=\"Blue\", alpha=0.7, size=10) +\r\n  scale_x_continuous(\"Treatment Effect (placebo - Rx)\",\r\n                     labels=c(\" \", \"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\"),\r\n                     breaks=c(-1, 0, 1, 2, 3, 4, 5, 6),\r\n                     limits=c(-1, 6)) +\r\n  scale_y_continuous(\" \",\r\n                     labels=c(\" \"),\r\n                     breaks=c(1),\r\n                     limits=c(1)) +\r\n  theme_minimal() +\r\n  theme(text = element_text(size = 20),\r\n        axis.ticks.x = element_blank(),\r\n        axis.text.y =  element_blank(),        \r\n        axis.ticks.y = element_blank(),\r\n        axis.title.x = element_text(size = 20),\r\n        plot.title = element_text(hjust = 0.5, size = 25),\r\n        panel.border = element_rect(colour = \"black\", fill=NA, size=0.25),\r\n        panel.grid = element_blank(),\r\n        plot.caption=element_text(hjust = 0)) \r\n\r\n# Plot mediation effect\r\nplot03 <- ggplot() +\r\n  geom_text(data=A3, aes(x=-0.75, y=sort, label=var), color=\"black\", size=10) +\r\n  geom_segment(data=A3, aes(x=0, xend=val, y=sort, yend=sort)) +\r\n  geom_point(data=A3, aes(x=val, y=sort), color=\"black\", alpha=0.7, size=10, shape=1) +\r\n  scale_x_continuous(\"Reduction in Treatment Effect (Mediation Effect)\",\r\n                     labels=c(\" \", \"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\"),\r\n                     breaks=c(-1, 0, 1, 2, 3, 4, 5, 6),\r\n                     limits=c(-1, 6)) +\r\n  scale_y_continuous(\" \",\r\n                     labels=c(\" \", \" \", \" \"),\r\n                     breaks=c(1, 2, 3),\r\n                     limits=c(0, 4)) +\r\n  theme_minimal() +\r\n  theme(text = element_text(size = 20),\r\n        axis.ticks.x = element_blank(),\r\n        axis.text.y =  element_blank(),        \r\n        axis.ticks.y = element_blank(),\r\n        axis.title.x = element_text(size = 20),\r\n        plot.title = element_text(hjust = 0.5, size = 25),\r\n        panel.border = element_rect(colour = \"black\", fill=NA, size=0.25),\r\n        panel.grid = element_blank(),\r\n        plot.caption=element_text(hjust = 0)) +\r\n  ggtitle(label = \" \") \r\n\r\np <- plot_grid(plot01, plot02, plot03, align = \"v\", nrow = 3, rel_heights = c(1.5, 0.6, 1.2))\r\n\r\nggsave(\"/shared/175/arenv/arwork/gsk1278863/mid209676/present_2020_01/code/mediation/DLQI_mediation_mallett.png\", p, width=12, height=12, dpi=300)\r\n\r\nBack to blog\r\n\r\nExample 2. Bayesian model\r\nThe code can be found here.\r\nNote that this is an R markdown file and you might need a proper editor to open it.\r\nA txt file with the code can be found here.\r\nBack to blog\r\n\r\nExample 3. Barplot\r\n\r\n\r\n# Baplots to show the reduction in treatment effect on DLQI.\r\n# ==========================================================\r\n\r\n# Read in the data set:\r\ndat <- read.csv(\"mediation_data.csv\")\r\n\r\n\r\nfit <- lm(DLQI ~ TRT, data = dat)\r\nt.val.pure <- coef(summary(fit))[2, 3]\r\n\r\nt.val.vec <- numeric(3)\r\nj <- 1\r\nfor (i in c(2, 4, 6)) {\r\n  fit <- lm(dat$DLQI ~ dat[, i] + dat$TRT)\r\n  t.val.vec[j] <- coef(summary(fit))[3, 3]\r\n  j <- j + 1\r\n}\r\n\r\n# Redo without imputed data:\r\nt.val.vec.re <- numeric(3)\r\nj <- 1\r\nfor (i in c(2, 4, 6)) {\r\n  dat.re <- dat[which(dat[, i+1] == F), ]\r\n  fit <- lm(dat.re$DLQI ~ dat.re[, i] + dat.re$TRT)\r\n  t.val.vec.re[j] <- coef(summary(fit))[3, 3]\r\n  j <- j + 1\r\n}\r\n\r\n# Combine both vectors:\r\nt.vals <- c(t.val.vec.re[3], t.val.vec[3],\r\n            t.val.vec.re[2], t.val.vec[2],\r\n            t.val.vec.re[1], t.val.vec[1])\r\n\r\n# Calculate difference:\r\nt.vals - t.val.pure\r\n\r\n# Calculate the difference:\r\nt.val.diff <- t.vals - t.val.pure\r\nt.val.mat <- matrix(t.val.diff, ncol = 3)\r\nfit <- lm(DLQI ~ TRT, dat)\r\nt.val.mat.pr <- t.val.mat/abs(coef(summary(fit))[2, 3]) * 100\r\n\r\npng(\"barplot.png\", width = 7, height = 5, res = 300, units = \"in\")\r\npar(xpd = T, cex.main = 0.9)\r\nbarplot(t.val.diff, horiz = T, col = c(\"darkcyan\", \"blue\"), xlim = c(0, 5),\r\n        space = rep(c(0.25, 0), 3),\r\n        main = \"Adjusting for itch leads to the greatest reduction\r\n        in the absolute standardized treatment effect on DLQI (unadjusted effect: 4.7).\r\n        Removing the LOCF imputed data diminishes the differences.\",\r\n        xlab = \"Reduction in the absolute standardized treatment effect\")\r\ny.coord <- c(1.25, 3.5, 5.75)\r\ntext(-0.25, y.coord[3], \"itch\")\r\ntext(-0.25, y.coord[2], \"BSA\")\r\ntext(-0.35, y.coord[1], \"redness\")\r\nfor (i in 1:nrow(t.val.mat)) {\r\n  for (j in 1:ncol(t.val.mat)) {\r\n    t.val <- paste0(format(round(t.val.mat[i, j], 1), nsmall = 1), \" (\",\r\n                    format(round(t.val.mat.pr[i, j], 1), nsmall = 1), \"%)\")\r\n    text(t.val.mat[i, j] + .45, y.coord[j] + i - 1.5, t.val,\r\n         col = c(\"darkcyan\", \"blue\")[i])\r\n  }\r\n}\r\nlegend(\"topright\", legend = c(\"LOCF\", \"Observed\"), fill = c(\"blue\", \"darkcyan\"), bty = \"n\")\r\ndev.off()\r\n\r\nBack to blog\r\n\r\nExample 4. Parallel coords\r\n\r\n\r\n## function to scale data\r\nscale_this <- function(x) {\r\n  (x - mean(x, na.rm = TRUE)) / sd(x, na.rm = TRUE)\r\n}\r\n\r\n\r\nlibrary(tidyverse)\r\n\r\n## read in data\r\nfinal_in <- read_csv(\"mediation_data.csv\")\r\n\r\n## check data \r\nfinal_in %>% glimpse()\r\n\r\n## scale data and put in long format\r\ndata <- \r\n  final_in %>% \r\n  select(!c(\"itch_LOCF\", \"BSA_LOCF\", \"redness_LOCF\", \"DLQI_LOCF\")) %>%\r\n  mutate(id = row_number(),\r\n         itch = scale_this(itch),\r\n         BSA = scale_this(BSA),\r\n         redness = scale_this(redness),\r\n         DLQI = scale_this(DLQI)) %>%\r\n  pivot_longer(!c(TRT, id), names_to = \"var\", values_to = \"val\") \r\n\r\n### add an indicator for LOCF variables \r\nmissing <- \r\n  final_in %>% \r\n  select(c(\"TRT\", \"itch_LOCF\", \"BSA_LOCF\", \"redness_LOCF\", \"DLQI_LOCF\")) %>%\r\n  mutate(id = row_number()) %>%\r\n  pivot_longer(!c(TRT, id), names_to = \"var\", values_to = \"LOCF\") %>%\r\n  mutate(var = str_remove(var, \"_LOCF\"))\r\n\r\n## join to main data set\r\ndata <- \r\n  data %>%\r\n  left_join(missing)\r\n\r\n## check data set\r\ndata %>% glimpse()\r\n\r\n## check LOCF vals\r\ntable(data$LOCF)\r\n\r\n\r\n## plot data \r\ndata %>%\r\n  mutate(\r\n    name = fct_relevel(var,\r\n                       \"DLQI\", \"itch\", \"redness\",\r\n                       \"BSA\"),\r\n    TRT = fct_relevel(TRT, \"Rx\", \"placebo\")\r\n  ) %>%\r\n  ggplot(aes(\r\n    x = name,\r\n    y = val,\r\n    group = id,\r\n    colour = LOCF\r\n  )) +\r\n  geom_hline(yintercept = 0, colour = \"black\", alpha = 0.4, size = 1.1) +\r\n  geom_point(alpha = 0.7, size = 0.5) +\r\n  geom_line(alpha = 0.25, size = 0.5) +\r\n  labs(title = \"Relationship between outcome, treatment and LOCF imputation\",\r\n       subtitle = \"Measurements are scaled (lower is a better) by outcome\",\r\n       caption = \"\\n The solid black line at zero represents the mean outcome (irrespective of treatment).\\nA larger number of patients reported a better BSA and redness profile in the Rx arm.\\nThe missing data pattern differs across groups, requiring further investigation.\") +\r\n  xlab(\"\") +\r\n  ylab(\"\") +\r\n  facet_wrap( ~ TRT, ncol = 1) +\r\n  theme_minimal() +\r\n  theme(legend.position = \"bottom\")\r\n\r\n\r\n## Save plot\r\npage_width <- 200\r\npage_height <- 150\r\nd_dpi <- 300\r\nggsave(file = paste0(\"parallel_coords.png\"), \r\n       width = page_width, height = page_height, \r\n       units = \"mm\", dpi = d_dpi)\r\n\r\nBack to blog\r\n\r\nExample 5. Correlation plot\r\n\r\n\r\n#########################################\r\n##  Warning this code requires a re-factor\r\n## and put repeated steps in to a function\r\n#########################################\r\n\r\nlibrary(corrplot)\r\nlibrary(tidyverse)\r\n\r\n## read in data\r\nfinal_in <- read_csv(\"mediation_data.csv\")\r\n\r\n#plot on one page\r\npar(mfrow = c(2, 3))\r\npar(cex = 0.75)\r\n\r\n##-----------------------------------------------------\r\n## Overall correlations\r\ntitle <- \"How do all outcomes relate overall?\"\r\n\r\ncorrs <- final_in %>%\r\n  dplyr::select(\"itch\", \"BSA\", \"redness\", \"DLQI\") %>%\r\n  filter(complete.cases(.)) %>%\r\n  dplyr::mutate_all(as.numeric)\r\n\r\nM <- cor(corrs)\r\ncol <-\r\n  colorRampPalette(c(\"#BB4444\", \"#EE9988\", \"#FFFFFF\", \"#77AADD\", \"#4477AA\"))\r\ncorrplot(\r\n  M,\r\n  method = \"ellipse\",\r\n  col = col(200), tl.cex = 1/par(\"cex\"),\r\n  type = \"upper\",\r\n  order = \"hclust\",\r\n  number.cex = .7,\r\n  title = title,\r\n  addCoef.col = \"black\",\r\n  # Add coefficient of correlation\r\n  tl.col = \"black\",\r\n  tl.srt = 90,\r\n  # Text label color and rotation\r\n  # hide correlation coefficient on the principal diagonal\r\n  diag = FALSE,\r\n  mar = c(0, 0, 3, 0)\r\n)\r\n\r\n\r\n\r\n##-----------------------------------------------------\r\n### - By Rx arm\r\ntitle <- \"How do all outcomes relate within Rx?\"\r\n\r\ncorrs <- final_in %>%\r\n  filter(TRT == \"Rx\") %>%\r\n  dplyr::select(\"itch\", \"BSA\", \"redness\", \"DLQI\") %>%\r\n  dplyr::mutate_all(as.numeric)\r\nM <- cor(corrs)\r\ncol <-\r\n  colorRampPalette(c(\"#BB4444\", \"#EE9988\", \"#FFFFFF\", \"#77AADD\", \"#4477AA\"))\r\n\r\ncorrplot(\r\n  M,\r\n  method = \"ellipse\",\r\n  col = col(200), tl.cex = 1/par(\"cex\"),\r\n  type = \"upper\",\r\n  order = \"hclust\",\r\n  number.cex = .7,\r\n  title = title,\r\n  addCoef.col = \"black\",\r\n  # Add coefficient of correlation\r\n  tl.col = \"black\",\r\n  tl.srt = 90,\r\n  diag = FALSE,\r\n  mar = c(0, 0, 3, 0)\r\n)\r\n\r\n\r\n##-----------------------------------------------------\r\n## By Placebo\r\ncorrs <- final_in %>%\r\n  filter(TRT == \"placebo\") %>%\r\n  dplyr::select(\"itch\", \"BSA\", \"redness\", \"DLQI\") %>%\r\n  dplyr::mutate_all(as.numeric)\r\nM <- cor(corrs)\r\ncol <-\r\n  colorRampPalette(c(\"#BB4444\", \"#EE9988\", \"#FFFFFF\", \"#77AADD\", \"#4477AA\"))\r\n\r\ntitle <- \"How do all outcomes relate within Placebo?\"\r\ncorrplot(\r\n  M,\r\n  method = \"ellipse\",\r\n  col = col(200), tl.cex = 1/par(\"cex\"),\r\n  type = \"upper\",\r\n  order = \"hclust\",\r\n  number.cex = .7,\r\n  title = title,\r\n  addCoef.col = \"black\",\r\n  # Add coefficient of correlation\r\n  tl.col = \"black\",\r\n  tl.srt = 90,\r\n  # Text label color and rotation\r\n  # hide correlation coefficient on the principal diagonal\r\n  diag = FALSE,\r\n  mar = c(0, 0, 3, 0)\r\n)\r\n\r\n\r\n##-----------------------------------------------------\r\n## Overall and complete cases\r\n\r\ncorrs <- final_in %>%\r\n  filter(itch_LOCF == FALSE &\r\n           BSA_LOCF == FALSE & redness_LOCF == FALSE & DLQI_LOCF == FALSE) %>%\r\n  filter(complete.cases(.)) %>%\r\n  dplyr::select(\"itch\", \"BSA\", \"redness\", \"DLQI\") %>%\r\n  dplyr::mutate_all(as.numeric)\r\n\r\nM <- cor(corrs)\r\n\r\ncol <-\r\n  colorRampPalette(c(\"#BB4444\", \"#EE9988\", \"#FFFFFF\", \"#77AADD\", \"#4477AA\"))\r\n\r\n\r\n\r\ntitle <-\r\n  \"How do all outcomes relate overall\\n(excluding patients with imputed data)?\"\r\ncorrplot(\r\n  M,\r\n  method = \"ellipse\",\r\n  col = col(200), tl.cex = 1/par(\"cex\"),\r\n  type = \"upper\",\r\n  order = \"hclust\",\r\n  number.cex = .7,\r\n  title = title,\r\n  addCoef.col = \"black\",\r\n  # Add coefficient of correlation\r\n  tl.col = \"black\",\r\n  tl.srt = 90,\r\n  # Text label color and rotation\r\n  # hide correlation coefficient on the principal diagonal\r\n  diag = FALSE,\r\n  mar = c(0, 0, 3, 0)\r\n)\r\n\r\n\r\n##-----------------------------------------------------\r\n### By Rx and complete cases\r\ncorrs <- final_in %>%\r\n  filter(TRT == \"Rx\") %>%\r\n  filter(itch_LOCF == FALSE &\r\n           BSA_LOCF == FALSE & redness_LOCF == FALSE & DLQI_LOCF == FALSE) %>%\r\n  filter(complete.cases(.)) %>%\r\n  dplyr::select(\"itch\", \"BSA\", \"redness\", \"DLQI\") %>%\r\n  dplyr::mutate_all(as.numeric)\r\nM <- cor(corrs)\r\ncol <-\r\n  colorRampPalette(c(\"#BB4444\", \"#EE9988\", \"#FFFFFF\", \"#77AADD\", \"#4477AA\"))\r\n\r\ntitle <- \"How do all outcomes relate within Rx?\\n(Complete cases)\"\r\ncorrplot(\r\n  M,\r\n  method = \"ellipse\",\r\n  col = col(200), tl.cex = 1/par(\"cex\"),\r\n  type = \"upper\",\r\n  order = \"hclust\",\r\n  number.cex = .7,\r\n  title = title,\r\n  addCoef.col = \"black\",\r\n  # Add coefficient of correlation\r\n  tl.col = \"black\",\r\n  tl.srt = 90,\r\n  # Text label color and rotation\r\n  # hide correlation coefficient on the principal diagonal\r\n  diag = FALSE,\r\n  mar = c(0, 0, 3, 0)\r\n)\r\n\r\n\r\n##-----------------------------------------------------\r\n### Placebo and complete cases\r\n\r\ncorrs <- final_in %>%\r\n  filter(TRT == \"placebo\") %>%\r\n  filter(itch_LOCF == FALSE &\r\n           BSA_LOCF == FALSE & redness_LOCF == FALSE & DLQI_LOCF == FALSE) %>%\r\n  filter(complete.cases(.)) %>%\r\n  dplyr::select(\"itch\", \"BSA\", \"redness\", \"DLQI\") %>%\r\n  dplyr::mutate_all(as.numeric)\r\nM <- cor(corrs)\r\ncol <-\r\n  colorRampPalette(c(\"#BB4444\", \"#EE9988\", \"#FFFFFF\", \"#77AADD\", \"#4477AA\"))\r\n\r\ntitle <-\r\n  \"How do all outcomes relate within placebo?\\n(Complete cases)\"\r\ncorrplot(\r\n  M,\r\n  method = \"ellipse\",\r\n  col = col(200), tl.cex = 1/par(\"cex\"),\r\n  type = \"upper\",\r\n  order = \"hclust\",\r\n  number.cex = .7,\r\n  title = title,\r\n  addCoef.col = \"black\",\r\n  # Add coefficient of correlation\r\n  tl.col = \"black\",\r\n  tl.srt = 90,\r\n  # Text label color and rotation\r\n  # hide correlation coefficient on the principal diagonal\r\n  diag = FALSE,\r\n  mar = c(0, 0, 3, 0)\r\n)\r\n\r\nBack to blog\r\n\r\nExample 6. Correlation matrices\r\na) Overview\r\n\r\n\r\nlibrary(tidyverse)\r\nlibrary(ggforce)\r\n\r\n## Save plot\r\npage_width <- 350\r\npage_height <- 250\r\nd_dpi <- 400\r\n\r\n## read in data\r\nfinal_in <- read_csv(\"mediation_data.csv\")\r\n\r\n\r\n## Plot overall\r\nggplot(final_in, aes(x = .panel_x, y = .panel_y, colour = TRT, fill = TRT)) +\r\n  geom_autopoint(alpha = 0.6) +\r\n  geom_autodensity(alpha = 0.2) +\r\n  geom_smooth(method = lm, formula = y ~ splines::bs(x, 3)) +\r\n  facet_matrix(vars(DLQI, itch, redness, BSA), layer.diag = 2, layer.upper = 3, \r\n               grid.y.diag = FALSE) +\r\n  labs(title = \"Itch has a strong positive association with DLQI.\",\r\n       subtitle = \"There is evidence that the DLQI treatment effect is mediated through itch.\",\r\n       caption = \"\\n Cubic splines are presented in the top-right layer regressing y on x.\\nScatter-plots of the same relationship are displayed in the bottom-left later.\\nThe marginal distribution by treatment are displayed on the diagonal.\") +  \r\n  theme_light(base_size = 14) +\r\n  theme(legend.position = \"bottom\")\r\n\r\n## save plot\r\nggsave(file = paste0(\"scatter-matrix-final.png\"), \r\n       width = page_width, height = page_height, \r\n       units = \"mm\", dpi = d_dpi)\r\n\r\nb) LOCF and CC:\r\n\r\n\r\nlibrary(tidyverse)\r\nlibrary(ggforce)\r\n\r\n## Save plot\r\npage_width <- 350\r\npage_height <- 250\r\nd_dpi <- 400\r\n\r\n## read in data\r\nfinal_in <- read_csv(\"mediation_data.csv\")\r\n\r\n\r\n## Plot overall\r\nggplot(final_in, aes(x = .panel_x, y = .panel_y, colour = TRT, fill = TRT)) +\r\n  geom_autopoint(alpha = 0.6) +\r\n  geom_autodensity(alpha = 0.2) +\r\n  geom_smooth(method = lm, formula = y ~ splines::bs(x, 3)) +\r\n  facet_matrix(vars(DLQI, itch, redness, BSA), layer.diag = 2, layer.upper = 3, \r\n               grid.y.diag = FALSE) +\r\n  labs(title = \"Investigating the assocation between outcomes and treatment\",\r\n       subtitle = \"With LOCF imputation\",\r\n       caption = \"\\n Cubic splines are presented in the top-right layer regressing y on x.\\nScatter-plots of the same relationship are displayed in the bottom-left later.\\nThe marginal distribution by treatment are displayed on the diagonal.\") +  \r\n  theme_light(base_size = 14) +\r\n  theme(legend.position = \"bottom\")\r\n\r\n## save plot\r\nggsave(file = paste0(\"scatter-matrix-locf.png\"), \r\n       width = page_width, height = page_height, \r\n       units = \"mm\", dpi = d_dpi)\r\n\r\n\r\n## Plot complete cases\r\nfinal_in %>%\r\n  filter(itch_LOCF == FALSE & BSA_LOCF == FALSE & redness_LOCF == FALSE & DLQI_LOCF == FALSE) %>%\r\n  ggplot(aes(x = .panel_x, y = .panel_y, colour = TRT, fill = TRT)) +\r\n  geom_autopoint(alpha = 0.6) +\r\n  geom_autodensity(alpha = 0.2) +\r\n  geom_smooth(method = lm, formula = y ~ splines::bs(x, 3)) +\r\n  facet_matrix(vars(DLQI, itch, redness, BSA), layer.diag = 2, layer.upper = 3, \r\n               grid.y.diag = FALSE) +\r\n  labs(title = \"Investigating the assocation between outcomes and treatment\",\r\n       subtitle = \"Complete cases analysis\",\r\n       caption = \"\\n Cubic splines are presented in the top-right layer regressing y on x.\\nScatter-plots of the same relationship are displayed in the bottom-left later.\\nThe marginal distribution by treatment are displayed on the diagonal.\") +  \r\n  theme_light(base_size = 14) +\r\n  theme(legend.position = \"bottom\")\r\n\r\n## save plot\r\nggsave(file = paste0(\"scatter-matrix-cc.png\"), \r\n       width = page_width, height = page_height, \r\n       units = \"mm\", dpi = d_dpi)\r\n\r\nBack to blog\r\n\r\n\r\n",
    "preview": "posts/2020-11-10-wonderful-wednesdays-november-2020/./images/DLQI_mediation_mallett2 - Steve Mallett.png",
    "last_modified": "2025-08-22T14:49:25+02:00",
    "input_file": {},
    "preview_width": 3600,
    "preview_height": 3600
  },
  {
    "path": "posts/2020-10-21-wonderful-wednesdays-october-2020/",
    "title": "Wonderful Wednesdays October 2020",
    "description": "Abi Williams presented data visualisations on co-occurrence of adverse events. How to display events that occur at the same time in the same patient and highlight differences of treatment or gender? A variety of very different approaches was discussed. The first visualisation was a heatmap for the frequency of co-occurrences. A Lollipop plot combined the frequency with the overlap time. Then a Shiny App made interactive exploration of up to 4 co-occurring events possible. The presentation of an UpSet plot brought up a discussion on the advantages over the vinn diagram. The shiny app AdEPro was referred to as an useful exploration tool for adverse event in general. Another tool for exploring the co-occurrence in particular was the force directed network graph. The final approach was embedded in a PowerBI Dashboard.",
    "author": [
      {
        "name": "Steve Mallett",
        "url": "https://www.psiweb.org/sigs-special-interest-groups/visualisation"
      }
    ],
    "date": "2020-10-14",
    "categories": [
      "Adverse events",
      "Co-occurence",
      "Wonderful Wednesdays"
    ],
    "contents": "\r\nAdverse Event Co-Occurrence Challenge\r\nThis month’s challenge was based on a clinical trial for the treatment of Type II diabetes in adults that cannot manage their blood glucose control with a single oral therapy. The primary outcome in the trial was mean HbA1c at 6 months, and adverse events (AEs) were monitored and collected for the entire course of the study.\r\nThe data visualisation objectives were focussed on AEs, and were defined as follows:\r\nTo quickly identify groupings of AEs that occur in the same patients at the same time in Treatment A.\r\nDo these groupings occur in Treatment B?\r\nIs there a difference based on sex?\r\nAre adverse events in these groupings severe?\r\nThe dataset is available here.\r\n\r\nExample 1. Heat Map\r\n\r\nIncluded here is one of two heat map charts that were submitted. The graph shows pairs of AE terms represented as a grid, with one of each pair included on either the horizontal or vertical axis, and with the frequency of co-occurrences of each pair of terms being colour-coded. The plot shows quite clearly that Nausea and Vomiting are terms that co-occur at the highest frequency.\r\nThe judging panel suggested a few possible enhancements. There is quite a lot of white space in this plot, and it was felt this plot might be more useful for exploring a larger dataset containing many co-occurring terms. It would then be useful to be able to limit the data displayed to only include pairs of terms with a frequency above a cut-off value, to focus on the more prevalent co-occurrences. A more meaningful method of sorting the AE terms might also be helpful. A comment was made that the eye tends to be drawn towards the dark blue areas of the plot, whereas these only represent a relatively small number of patients. The real “story” in this plot, i.e. co-occurrence of Nausea/Vomiting, would perhaps come through more strongly if darker tones were used for increasing frequency. Also, adding some additional contextual information to the plot would help the user to better understand what is being shown (for example that the frequency relates to co-occurrences of the pairs of AE terms.)\r\nA general comment on heatmaps is that representing a variable on a continuous colour scale can make it difficult for the user to accurately translate the frequencies into a quantitative value. Therefore a further enhancement might be to create ordered categories for frequency of occurrence, comprising perhaps 5-7 bins.\r\nlink to code\r\n\r\nExample 2. Lollipop Chart\r\n\r\nThis plot also shows the frequencies of co-occurring pairs of AE terms, but includes the additional dimension of showing the median time of co-occurrence as a lollipop chart. When representing a quantitative measure as the distance along an axis, common choices of chart type are often either bar charts or dot plots. The latter is sometimes preferred because of the lower “data to ink ratio” (as proposed by Edward Tufte) which may produce a plot with a clearer message. The lollipop chart is a compromise between these two options, where the length of the “stick” represents, in this case, the median overlap time. This leads to the possibility of using the stick to encode an additional variable, e.g. adding colour or line thickness, although care would be needed not to overcomplicate the graph.\r\nThe panel appreciated the fact that the title includes the key message that the chart is communicating. An enhancement might be to remove the “n=” labels above each “lollipop”, as this information is already encoded in the size of the bubble, and would produce a cleaner looking plot. Also, the switching to a vertical format would make the labels easier to read, and meaningful sorting (e.g. by bubble size or median overlap) would enhance the chart. Also, perhaps applying a cut-off value (e.g. to remove the pairs of terms that only co-occur in a single patient) would be helpful. The above features are seen in some of the other submitted graphs (for example the Shiny App described in the next section). The graph is not providing a comparison of the two treatment groups, so this would be a further enhancement (e.g. splitting the graph into two panels in a vertical format).\r\nlink to code\r\n\r\nExample 3. RShiny App\r\n\r\nThis Shiny App can be accessed by clicking here. The previous plots have focussed on pairs of co-occurring AE terms, but this app provides the ability to choose the number of co-occurring terms, i.e. 2-4 terms. The initial screen displays diverging bar charts, showing mean duration of co-occurring terms on the left side and number of patients with overlapping occurrences on the right side, split by treatment group. The AE terms can be sorted by mean duration or frequency of co-occurrences, and the data can also be split by treatment and gender. The app can also display individual patient-level profiles with various display and filtering options.\r\nThe app was well received as a very useful and flexible tool for exploring the data. One of the design features that were appreciated included the inclusion of the statistic at the end of the bars. For the diverging bar charts, a legend is shown representing treatment group categories, but this colour-coding only seems to apply to the right-hand side of the diverging bar chart, i.e. showing the frequency of co-occurrences. However it wasn’t clear whether bar chart on left-hand side, showing the mean duration, were also split by treatment, and if so, what colour-coding scheme would apply to this part of the chart. (This is not clear because no combinations of AE terms occurred in more than one treatment group)\r\nA further enhancement might be for the user to be able to choose cut-off values for the number of co-occurring terms (e.g. >=2 terms, >=3 terms) rather than having to choose the exact number of terms. A further comment on the design is that the numbers at the top of the screen, showing the total number of patients and total number of AEs occurring at the same time, are disproportionately large and reminiscent of an “infographic” style (which is not popular with some members of the panel). These numbers could be moved elsewhere (e.g. panel on the left containing a lot of blank space) to draw more attention to the main plot.\r\n\r\nExample 4. Upset Plot\r\n\r\nThis is a useful plot for displaying frequency counts where there is interest in the intersections of different categories, having a similar function to a Venn diagram but being much more practical where there are more than three categories. (It will always be possible to produce an Upset plot, regardless of the number of categories, whereas a Venn diagram quickly becomes impossible to produce or interpret beyond 4 or 5 categories.) The vertical bar chart shows the size of the various intersections (which is highlighting that Nausea and Vomiting is the most frequently-occurring pair of terms), and the horizontal bar chart shows the frequency of each individual category (showing that overall, Nasopharyngitis, Nausea and Vomiting are the most frequent, with a dramatic drop-off in the frequencies of other terms).\r\nThe plot requires a fair amount of explanation, and would work well with stakeholders who are already familiar with the format. It wouldn’t work so well at a conference, for example, where there isn’t the opportunity to explain the graph. Improved labelling (e.g. interpretation of “Intersection Size”) would make the graph easier to understand.\r\nWhere there is a large number of categories (as in this example), displaying all of the combinations of categories is limited by the display area of the plot. In this case a “cut-off” has been applied to limit to an intersection size of 20. Ideally the graph would include interactivity, to allow the user to define which categories are displayed. In addition, the aspect ratio is challenging to display in a landscape screen, so flexibility in the layout of the various charts would be useful.\r\nlink to code\r\n\r\nExample 5. ADEPRO\r\n\r\nThis app provides interactive exploration of AE data at the individual patient level. Each patient is represented as a grey circle, with coloured wedges within each circle mapped to different adverse event terms. Clicking the play button starts an animation running, with the elapsed time since the start of the study shown as a blue bar at the top of the screen. As time progresses, filled coloured wedges appear within the grey circles at the appropriate time of onset of each respective AE. Coloured outline wedges represents AEs have occurred at a previous time during the study but have resolved.\r\nApplying this app to the current challenge, co-occurring AE terms can be viewed by running the animation and observing circles with more than one coloured wedge at the same time. The outlined wedges, representing resolved AEs, did not necessarily co-occur, so the app relies on the user manually identifying the co-occurring AEs in real time as the animation progresses. The app doesn’t provide an overall summary, so requires some input from the user to produce any required statistics, e.g. frequency counts, after viewing the animation.\r\nlink to code\r\n\r\nExample 6. Network\r\n\r\nThe network diagram shown is a screenshot from an interactive app, which produces a network diagram displaying AE terms as nodes. The size of each node represents the incidence rate, and nodes are connected according to whether they co-occur in the same subject. The thickness of the lines represents the strength of the association in terms of frequency of co-occurrences. The nodes are colour-coded to represent the severity of the AEs. When each node in the network is clicked on, this displays all other AE terms that co-occurred with the selected term. The app also includes options for filtering the data, selecting the minimum and maximum frequency, and also defining the time window used for co-occurrences (e.g. AEs at exactly the same , within a +/- 2 day window etc.). Further filter options include severity and gender. The app also includes useful display options, e.g. font size.\r\nAlthough the plot is visually complex in terms of the large number of AE terms with overlapping terms and many connecting lines, in this case the message is quite clear because only four AE terms are dominant in the graph.\r\n\r\nExample 7. Apriori Algorithm\r\n\r\nThis is an example of a Power BI dashboard, with a set of interactive filters on the left part of the screen, and right panel displaying the output from an algorithm called Apriori. The right panel displays a series of coloured nodes of varying size and colour saturation, and with arrows entering and leaving the circles at various points. The dynamic updating of the plot, by clicking on the filters, was a useful feature that was appreciated by the panel, as were several aspect of the design that are visually appealing and quite effective.\r\nHowever the algorithm behind the plot was not familiar to the panel, who therefore struggled to interpret the message behind the graph. It was concerning that some of the associations that were strongly identified in some of the other plots (e.g. strong co-occurrence of Nausea and Vomiting) was not clearly shown in this plot.\r\nCode\r\n\r\nExamples 1 and 2. Heat Map and Lollipop Plot\r\n\r\n\r\nlibrary(tidyverse)\r\n#Colour scheme\r\nOrange <- \"#EF7F04\"\r\nGreen <- \"#68B937\"\r\nBlue <- \"#00A6CB\"\r\nGrey <- \"#4E5053\"\r\nDarkblue <- \"#003569\"\r\nYellow <- \"#FFBB2D\" \r\nGreyedOut <- \"#D3D3D3\"\r\n\r\nsetwd(\"C:/Users/Q1062810/Documents/Wonderful Wednesday/AE2\")\r\n\r\n# Read in the data and make a unique subject ID based on the subjid and treatment\r\nAE <- read.csv(\"AE.csv\") %>%\r\n  mutate(USUBJID = paste(Treatment, Subject, sep = '_')) %>%\r\n  mutate(Adverse = as.character(Adverse))\r\n\r\n#Make a dataset where subjects have more than one event (because we are looking for co-occurring events)\r\nAE_events <- AE %>%\r\n  group_by(USUBJID) %>%\r\n  filter(n() > 1) %>%\r\n  ungroup() %>%\r\n  select(c(2,4,5,7,8,9)) %>% # Select the columns we care about\r\n  rename(Adverse2=Adverse) %>% # Rename all the relevant variables  with a \"2\" as we will merge these back on to the initial dataset \r\n  rename(Start2 = Start) %>%\r\n  rename(End2=End) %>%\r\n  rename(System2=System) %>%\r\n  rename(Severity2=Severity)\r\n  \r\n# Match merge the filtered data set onto the original data set by subject ID. \r\n# This gives us a data set which has every combination of AEs for all subjects which have more than 1 AE\r\nAE_combined <- left_join(AE,AE_events) %>%\r\n  rownames_to_column(\"combination_ID\") %>%\r\n  mutate(overlap = if_else(condition = Start >= Start2 & Start <= End2,true = 1, # Makes a flag to capture the events with overlap\r\n                           false = if_else(condition=End >= Start2 & End <= End2, true = 1, \r\n                                           false = if_else(condition=Start2 >= Start & Start2 <= End, true = 1,\r\n                                                           if_else(condition=End2 >= Start & End2 <= End, true = 1,false = 0))))) %>%\r\n  mutate(different = if_else(condition= Adverse==Adverse2,true = 0,false = 1)) %>% # Makes a flag for all events where the AEs are duplicated as part of the merge process. this helps us remove these events\r\n  mutate(Co_start = pmax(Start,Start2)) %>% \r\n  mutate(Co_end = pmin(End,End2)) %>%\r\n  mutate(Time =Co_end - Co_start) %>% # Create a variable representing total overlap time\r\n  filter(overlap==1 & different==1) %>% # filter just overlapping AEs  \r\n  select(c(\"USUBJID\",\"Adverse\",\"Adverse2\", \"Time\",\"Treatment\")) %>% # Select relevant columns\r\n  arrange(Adverse,Adverse2)\r\n\r\n\r\n\r\nlibrary(plyr)\r\nAE_crosstab <- count(AE_combined, c('Adverse','Adverse2'))\r\n\r\n\r\n\r\nplot <- ggplot(data = AE_crosstab, mapping = aes(x = Adverse,\r\n                                       y = Adverse2,\r\n                                       fill = freq)) +\r\n  geom_tile() +\r\n  xlab(label = \"Adverse Event Name\") +\r\n  ylab(label = \"Adverse Event Name\") +\r\n  theme(axis.text.x = element_text(angle =90, vjust =0.5, hjust=1))\r\n\r\n\r\nplot \r\nggsave(\"Co-occurance heat map v1.png\",width = 35, height = 20, units = \"cm\")\r\n\r\n#create function to sort within rows and make new var\r\nf = function(x,y) {paste(sort(c(x, y)), collapse = \" - \")}\r\nf = Vectorize(f)\r\n\r\n\r\nAE_crosstab <- AE_crosstab %>% mutate(dedup = f(Adverse, Adverse2))  %>%\r\n  distinct(dedup, .keep_all=TRUE) %>%\r\n  select(-dedup)\r\n\r\nplot2 <- ggplot(data = AE_crosstab, mapping = aes(x = Adverse,\r\n                                                 y = Adverse2,\r\n                                                 fill = freq)) +\r\n  geom_tile() +\r\n  xlab(label = \"Adverse Event Name\") +\r\n  ylab(label = \"Adverse Event Name\") +\r\n  theme_classic() +\r\n  theme(axis.text.x = element_text(angle =90,size=12, vjust =0.5, hjust=1, face=\"bold\"), axis.text.y = element_text(size=14, face=\"bold\"))+\r\n  theme(plot.title = element_text(size=22)) +\r\n  theme(plot.subtitle = element_text(size=15)) +\r\n  theme(axis.title=element_text(size=14,face=\"bold\"))\r\n\r\nplot2\r\n\r\nggsave(\"Co-occurance heat map v2.png\",width = 35, height = 20, units = \"cm\")\r\n\r\n######TRY GGCORRPLOT #############\r\n\r\nAE_combined2 <- AE_combined %>% mutate(dedup = f(Adverse, Adverse2)) %>%\r\n  arrange(dedup,Time) %>% \r\n  group_by(USUBJID) %>%\r\n  distinct(dedup, .keep_all=TRUE)%>%\r\n  ungroup() %>%\r\n  group_by(dedup) %>%\r\n  mutate(position=rank(Time,ties.method = \"first\")) %>%\r\n  ungroup() %>%\r\n  rownames_to_column(\"Row\")%>%\r\n  mutate(Row=as.integer(Row))\r\n\r\nAE_combined3 <- AE_combined %>% mutate(dedup = f(Adverse, Adverse2)) %>%\r\n  arrange(dedup,Time) %>% \r\n  group_by(USUBJID) %>%\r\n  distinct(dedup, .keep_all=TRUE)%>%\r\n  ungroup() %>%\r\n  group_by(dedup) %>%\r\n  dplyr::summarise(Median_time = median(Time), patients = n()) %>%\r\n  ungroup() \r\n # %>%\r\n # filter(dedup!=\"Nausea - Vomiting\")\r\n\r\n\r\ndata_label <- paste(\"n=\",AE_combined3$patients,sep=\"\")\r\n\r\nplot5 <- ggplot(data = AE_combined3, mapping = aes(x = dedup,\r\n                                                  y = Median_time)) +\r\n  geom_segment(aes(x=dedup, xend=dedup, y=0, yend=Median_time)) +\r\n  geom_point(aes(size=patients), color=Darkblue, fill=ggplot2::alpha(Green, 0.3), alpha=0.7, shape=21, stroke=2) +\r\n  scale_size_area(max_size = 15) +\r\n  geom_text(aes(label=data_label),size=4, vjust=-2.5, fontface=\"bold\") +\r\n  ylim(0, 22)+\r\n  labs(y= \"Median Overlap of Adverse Events (days)\", x = \"Adverse Event Pairs\", title=\"The median length of time that adverse events co-occur together\", subtitle = \"Of all AE pairs, Nausea and Vomitting consistently co-occured with one another, but had a low median co-occurance (< 5 days)\") +\r\n  theme_classic() +\r\n  theme(legend.position = \"none\", axis.text.x = element_text(angle =90,size=12, vjust =0.5, hjust=1, face=\"bold\"), axis.text.y = element_text(size=14, face=\"bold\"))+\r\n  theme(plot.title = element_text(size=22)) +\r\n  theme(plot.subtitle = element_text(size=15)) +\r\n  theme(axis.title=element_text(size=14,face=\"bold\"))\r\n\r\n\r\nplot5 \r\n\r\nggsave(\"Co-occurance v2.png\",width = 35, height = 20, units = \"cm\")\r\n\r\nAE_combined4 <- AE_combined3 %>%\r\n  group_by(patients) %>%\r\n  arrange(Median_time) %>%\r\n  rownames_to_column()\r\n\r\nplot6 <- ggplot(data = AE_combined4, mapping = aes(x = dedup,\r\n                                                   y = Median_time)) +\r\n  geom_segment(aes(x=reorder(dedup, rowname), xend=dedup, y=0, yend=Median_time)) +\r\n  geom_point(aes(x=reorder(dedup, rowname), size=patients), color=Darkblue, fill=ggplot2::alpha(Green, 0.3), alpha=0.7, shape=21, stroke=2) +\r\n  scale_size_area(max_size = 15) +\r\n  geom_text(aes(x=reorder(dedup, rowname),label=data_label),size=4, vjust=-2.5, fontface=\"bold\") +\r\n  ylim(0, 22)+\r\n  labs(y= \"Median Overlap of Adverse Events (days)\", x = \"Adverse Event Pairs\", title=\"The median length of time that adverse events co-occur together\", subtitle = \"Of all AE pairs, Nausea and Vomitting consistently co-occured with one another, but had a low median co-occurance (< 5 days)\") +\r\n  theme_classic() +\r\n  theme(legend.position = \"none\", axis.text.x = element_text(angle =90,size=12, vjust =0.5, hjust=1, face=\"bold\"), axis.text.y = element_text(size=14, face=\"bold\"))+\r\n  theme(plot.title = element_text(size=22)) +\r\n  theme(plot.subtitle = element_text(size=15)) +\r\n  theme(axis.title=element_text(size=14,face=\"bold\"))\r\n\r\nBack to blog\r\n\r\nExample 4. Upset Plot\r\n\r\n\r\n# packages\r\npacman::p_load(tidyverse, rio)\r\npacman::p_load(labelled)\r\n# devtools::install_github(\"krassowski/complex-upset\")\r\nlibrary(ComplexUpset)\r\n\r\n# import & recode ID & sort\r\nae <- import(\"https://raw.githubusercontent.com/VIS-SIG/Wonderful-Wednesdays/master/data/2020/2020-09-09/2020-09-09-fake-data_aes.csv\") %>% \r\n   mutate(id = str_remove(Subject,\"FAKE-DATA-\") %>% \r\n             as.numeric(), \r\n          .after = Subject) %>% \r\n   arrange(id)\r\n\r\n# 1 Duplicate\r\nae   %>% filter(id == 10084) %>% filter(`Adverse Event` == \"Diarrhea\")\r\n\r\n# Remove Duplicate\r\nae <- ae %>% \r\n   distinct()\r\n\r\n# export fixed file\r\nae %>% \r\n   export(\"C:/R/Wonderful-Wednesdays/2020-09-09/2020-09-09-fake-data_aes.csv.rds\")\r\n\r\n# extend to all days between adverse events\r\nae_l <- ae %>% \r\n   select(-Subject) %>% \r\n   pivot_longer(cols = 2:3,\r\n                values_to = \"day\") %>% \r\n   group_by(id, `Adverse Event`, `Treatment`, System, Severity, Sex ) %>% \r\n   complete(day = seq(min(day), max(day), by = 1)) %>% \r\n   select(-name) %>% \r\n   ungroup() %>% \r\n   arrange(id, day)\r\n\r\n# Add variables to wide data\r\nae_w2 <- ae_l %>% \r\n   select(id, day, Sex, Treatment, Severity, `Adverse Event`) %>%\r\n   mutate(value = 1) %>%\r\n   pivot_wider(id_cols = c(\"id\",\"day\",\"Treatment\",\"Sex\"),\r\n               names_from = \"Adverse Event\",\r\n               values_from = \"value\",\r\n               values_fill  = 0) %>% \r\n   mutate(Treatment = factor(Treatment, labels = c(\"A\",\"B\")))\r\n# You cannot do the analysis using severity because at each day there can be diverse severerities for\r\n# different AE's overalapping\r\n\r\n# Figure 2.1\r\nupset(\r\n   data = ae_w2,\r\n   intersect = names(ae_w2)[-c(1:4)],\r\n   min_size = 20,\r\n   width_ratio = 0.25,\r\n   height_ratio = 1,\r\n   name  = NULL,\r\n   queries=list(\r\n      upset_query(\r\n         intersect=c(\"Nausea\",\"Vomiting\"),\r\n         color=  \"#E41A1C\",\r\n         fill  =  \"#E41A1C\",\r\n         \r\n         only_components=c('intersections_matrix', 'Intersection size')\r\n      )\r\n   ),\r\n   annotations = list(\r\n      'Intersection Size\\n(Treatment %)' = list(\r\n         aes = aes(x=intersection, fill=Treatment ),\r\n         geom = list(\r\n            geom_bar(stat='count', position='fill'),\r\n            geom_hline(yintercept = 0.5, col='gray90'),\r\n            scale_y_continuous(labels=scales::percent_format()),\r\n            scale_fill_brewer(palette = \"Dark2\")\r\n         )\r\n      ),\r\n      'Intersection Size\\n(Sex %)' = list(\r\n         aes = aes(x=intersection, fill=Sex),\r\n         geom = list(\r\n            geom_bar(stat='count', position='fill'),\r\n            geom_hline(yintercept = 0.5, col='gray90'),\r\n            scale_y_continuous(labels=scales::percent_format()),\r\n            scale_fill_manual(values = c(\"#E78AC3\",\"#8DA0CB\"))\r\n         )\r\n      )\r\n   ),\r\n   themes=upset_modify_themes(\r\n      list('overall_sizes'= theme(axis.ticks.x = element_line()))\r\n   )\r\n) +\r\n   labs(title = 'Co-Occurence of Daily AE Symptoms',\r\n        caption = 'Symptoms with more than 20 days by Frequency: Total pool is 148 individuals for 2575 Daily AE Symptoms \\n Lex, Alexander, et al. \"UpSet: visualization of intersecting sets.\" IEEE transactions on visualization and computer graphics 20.12 (2014): 1983-1992.') +\r\n   ggsave(\"C:/R/Wonderful-Wednesdays/2020-09-09/UpSet_plot.png\",\r\n          width = 11, height =10, units = \"in\")\r\n\r\nBack to blog\r\n\r\nExample 5. ADEPRO\r\n\r\n\r\n##########################################################################################\r\n## AdEPro for Wonderful Wednesday Webinar                                               ##\r\n## Main purpose of this program: Restructure the example dataset to read it into AdEPro ##\r\n##########################################################################################\r\n\r\n# setwd(\"\") # insert link to working directory\r\n\r\n# read dataset and attribute column names\r\ndat <- read.csv(\"2020-09-09-fake-data_aes.csv\", sep=\";\", header=TRUE)\r\ncolnames(dat) <- c(\"SUBJID\", \"AESTDY\", \"AEENDY\", \"AEDECOD\", \"TRT01A\", \"SOC\", \"AESEV\", \"SEX\")\r\n\r\nn <- nrow(dat) # number of rows in dataset\r\n\r\n## AE intensity must be numeric/integer and missing intensities are imputed with Moderate (2)\r\nAESEVN <- as.integer(dat$AESEV); AESEVN[is.na(AESEVN)] <- 2\r\n\r\n# Subject ID is not unique per treatment group, therefore the Subject ID receives a leading one for treatment A,\r\n# and a leading 2 for treatment B, and only the numeric part of the original name is kept\r\nTRT <- as.numeric(dat$TRT01A)\r\nSJ <- substr(dat$SUBJID, 11, 15)\r\nSUBJIDN <- as.integer(sapply(1:n, function(x) as.numeric(paste(TRT[x],SJ[x],sep=\"\"))))\r\n\r\n# other required variables for AdEPro are added: safety analysis set flag (assumed as Yes), death date (always missing),\r\n# last visit date (date of overall last AE end date for all patients), treatment start date (set to 1 for all patients),\r\n# treatment-emergent, serious and study drug related flag (always assumed as Yes)\r\ndat.rest <- data.frame(SAFFN=as.integer(rep(1,n)), DTHDT=as.factor(rep(\".\",n)), LVDT=rep(max(dat$AEENDY),n), \r\n                       TRTSDT=as.integer(rep(1,n)),\r\n                       SUBJIDN=SUBJIDN, AETRTEMN=as.integer(rep(1,n)), AESEVN=AESEVN, \r\n                       AESERN=as.integer(rep(1,n)), AERELN=as.integer(rep(1,n)))\r\n\r\n# merge all together and write out AE dataset\r\ndat_all <- cbind(dat, dat.rest)[,c(13,4,2,3,15,14,5,12,11,10,8,9,1,16,17)]\r\nwrite.csv(dat_all, file=\"2020-09-09-fake-data_aes_modified.csv\", row.names=FALSE, na=\".\")\r\n# the generated dataset should be used under \"Upload Adverse Event data\" after starting the adepro app\r\n\r\n\r\n# create additional subject level dataset to get all combinations of subject ID and treatment group \r\n\r\nsubjects <- sort(unique(SJ)); N <- length(subjects) # all unique subjects\r\nsubjects_trt <- c(paste(1,subjects,sep=\"\"),paste(2,subjects,sep=\"\")) # all combinations subjects - treatment\r\nsubjects2 <- rep(paste(\"FAKE-DATA-\",subjects,sep=\"\"),2)\r\n\r\n# get all AE data to merge with subject-treatment combinations\r\ndat_all_sub <- unique(dat_all[,c(8:13)])\r\ndat_sj0 <- data.frame(SUBJIDN=subjects_trt, SUBJID=subjects2,\r\n                      TRT01A=rep(c(\"Treatment A\", \"Treatment B\"), each=N))\r\ndat_sj <- merge(dat_sj0, dat_all_sub, by = \"SUBJID\")\r\n\r\nwrite.csv(dat_sj, file=\"2020-09-09-fake-data_subjects.csv\", row.names=FALSE, na=\".\")\r\n# the generated dataset should be used under \"Upload Subject Level data\" after starting the adepro app\r\n\r\n\r\n# Load AdEPro\r\nlibrary(adepro)\r\nlaunch_adepro() # launches the adepro app\r\n# after the page is loaded, one can upload the adverse event and subject level dataset in the \"Upload data\" panel\r\n\r\nBack to blog\r\n\r\n\r\n",
    "preview": "posts/2020-10-21-wonderful-wednesdays-october-2020/./images/plot01.png",
    "last_modified": "2025-08-22T14:49:25+02:00",
    "input_file": {},
    "preview_width": 4133,
    "preview_height": 2362
  },
  {
    "path": "posts/2020-10-17-wonderful-wednesdays-september-2020/",
    "title": "Wonderful Wednesdays September 2020",
    "description": "How to display safety data? This month's challenge has shown there are very different ways to visualize adverse event data. Although the example data set was from a two-arm study and relatively simple, the display of type of AE, frequency, timing, severity and seriousness is not easily combined in one plot.",
    "author": [
      {
        "name": "Lorenz Uhlmann",
        "url": "https://www.psiweb.org/sigs-special-interest-groups/visualisation"
      }
    ],
    "date": "2020-09-10",
    "categories": [
      "Adverse events",
      "Wonderful Wednesdays"
    ],
    "contents": "\r\nAdverse event example data set\r\nThe adverse events (AEs) example data set is based on a clinical trial for treatment of Type II diabetes in adults that cannot manage their blood glucose control with a single oral therapy. The primary outcome was mean HbA1c at 6 months. AEs were monitored and collected for the entire course of the study. A more detailed description and link to the data can be found here.\r\n\r\nExample 1. Triangles, pie chart, boxplots\r\n\r\nThis visualisation has been submitted as an html file and can be found here. It is a compilation of three different plots. The first one shows a triangle for each AE where the height of the triangle represents the duration of the AE. The x axis, represents a time axis. Furthermore, we the AEs are split into three categories based on the severity: mild, moderate, and severe. Each categories is plotted in a separate line of the plot. The treatment group (placebo vs. intervention) is color-coded. One additional feature is the hover over effect which provides some useful additional information.\r\nThis is a very innovative plot and not common for representing AEs. The title covers the message of the plot and, hence, it is very helpful. Additionally, there is a subtitle which provides some additional useful information even though the second part (saying that severe AEs were resolved the quickest) cannot be seen clearly from the plot.\r\nUsing the height of the triangles to represent the duration is a bit challenging because we already have the x axis representing the time. Having that said, we see that the x axis (date of the AE) is not ordered chronologically. This is a bit surprising and it is not clear what the dates are ordered by. The alpha scaling that has been used in a sensible way to make all triangles visible.\r\nThe second visualisation is similar to a pie chart in its appearance. There is a lot of information included in this plot. We see all AEs represented in categories. it also provides a hover over functionality which gives you some more information.\r\nThe advantage of this plot is that it shows a lot of information in a very compact design. However, since it is a round design, it is a little bit hard to compare the height of the bars. So, it comes with some challenges, but it is definitely eye-catching.\r\nThe third visualisation is a pair of boxplots comparing the two treatment groups in terms of the duration of AEs. It is a rather “simple” or standard plot. It is often a good idea to keep it simple, so there is definitely nothing wrong with it. In addition, there are dots included which are be color-coded and seem to represent the frequency of the events. One comment would be that the type of AEs is not being considered in this plot. So, it might be a good idea to stratify this plot by system organ class.\r\nlink to code\r\n\r\nExample 2. Triangles - updated version\r\nhigh-resolution image\r\nThis visualisation is ment to be an update of the first visualisation of Example 1. The main update is that the x axis is used as a time axis in chronological order. Now, the width of the triangles is being used to represent the duration of the AEs. The height represents the severity. Furthermore, the treatment group is represented by color and also by the direction the triangle point to. This is not a fully developed plot but rather a quick draft to show what it could look like updated some design features of the original plot.\r\nlink to code\r\n\r\nExample 3. Tendril plot\r\n\r\nhigh-resolution image\r\nThis is a very innovative visualisation. It is presented in a publication from 2018. You can see branches which represent one AE each. The branch itself represents the time path. Changes to the direction of the path depend on the treatment arm the AE occured in. Thus, it is kind of a car driving experience and it depends on the occurence of AE in each treatment arm where you end up.\r\nIn this plot, the paths are color coded and each branch represents a body system (and not only one single type of AE). Looking at the pink path (representing blood and lymphatic), we see that in the beginning, most of the AEs occur in the placebo, later on we see a lot more AEs occuring in the treatment group and, thus, the path ends up far to the right.\r\nOne comment is some AEs might become very influential if they happen at a rather late point in time. Furthermore, a hover over function (or some other type of interactivity) might make the plot very powerful. Also, the color coding could be used differently, for example, to represent the odds ratio.\r\nlink to code\r\n\r\nExample 4. AdEPro app\r\n\r\nThis is definitely more than just a visualisation - it’s a tool. You can upload your data and all AEs are represented in the middle pane. Each patient is represented by a circle / pie chart. You can kick it off by pushing the go button and the app will show you the development of AEs over time. Each AE is represented by a “slice of the pie” and the color as well as the location of it will tell you which AE is showing. If an AE disappears, it will still be shown as an “empty slice”. The size of the slice represents the severity. You have several different options you can work with, like changing which AEs will be shown (color coded), stop at a specific point in time, etc. You can even switch to a barplot representation instead of pie charts.\r\nThis is a fully developed app and thus, it is very useful and innovative. Its interactivity brings additional benefits to the user. Furthermore, this is available as an R package called “AdEPro”.\r\nlink to code\r\n\r\nExample 5. Adverse event explorer\r\n\r\nThis is again an interactive app. It can be found here. It shows a list of categories of AEs. You can see the results in the different treatment groups in different colors. Furthermore, the freqzency and the treatment difference is represented by dots and an treatment effect with a confidence interval, respectively. You can click on the plus sign next to the categories to further assess the AEs in more detail. You can find more details about the AE explorer here.\r\nIt is a very clear representation of AEs. The coloring is very straightforward and helpful. It is a tool to explore the data and thus, it does not come with a message by itself. However, this is not the aim of this tool. It is made to “play” with the data and assess your AEs in a very efficient way. Something that might be a useful extension would be addition of reference lines to make it easier to see which results correspond to which category or AE.\r\nlink to code\r\n\r\nExample 6. Volcano plots\r\n\r\n\r\nhigh-resolution imagehigh-resolution image\r\nIt is an innovative idea to use this plot to visualise AE data. On the x axis we see the risk difference and on the y axis, the p-values are represented. The colors represent the treatment group and the saturation of the color corresponds to the p-value as well. The size of the dots is proportional to the number of events (in both arms). It is a very comprehensive and nice overview over the results.\r\nOne comment is that the colors might be switched, because the red one are might be seen as the more critical ones. However, those correspond to increased risk in the placebo group.\r\nlink to code\r\nCode\r\n\r\nExample 1. Triangles, pie chart, boxplots (html)\r\n\r\n\r\n<!doctype html>\r\n<html lang=\"en\">\r\n  <head>\r\n    <!-- Required meta tags -->\r\n    <meta charset=\"utf-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\r\n    <title>Visualizing eczema trial data<\/title>\r\n\r\n    <!-- Bootstrap CSS/JS/then Popper.js -->\r\n    <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\" integrity=\"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\" crossorigin=\"anonymous\">\r\n    <script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js\" integrity=\"sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM\" crossorigin=\"anonymous\"><\/script>\r\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js\" integrity=\"sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1\" crossorigin=\"anonymous\"><\/script>\r\n\r\n    <!-- Load D3 -->\r\n    <script src=\"https://d3js.org/d3.v4.min.js\"><\/script>\r\n\r\n    <!-- load fonts -->\r\n    <link href=\"https://fonts.googleapis.com/css2?family=PT+Sans:ital,wght@0,400;0,700;1,400;1,700&family=PT+Serif:ital,wght@0,400;0,700;1,400&display=swap\" rel=\"stylesheet\">\r\n\r\n    <!-- Embed Flourish graphics -->\r\n    <script src=\"https://public.flourish.studio/resources/embed.js\"><\/script>\r\n\r\n    <!-- css -->\r\n    <style>\r\n            .path.domain {\r\n              display: none;\r\n            }\r\n            .label {\r\n              font-size: 10px;\r\n              font-family: sans-serif;\r\n              text-anchor: middle;\r\n            }\r\n\r\n          #tooltip  {\r\n           position: absolute;\r\n            height: auto;\r\n            padding: 10px;\r\n            background-color: rgba(255,255,255,0.7);\r\n              border-radius: 3px;\r\n            pointer-events: none;\r\n          }\r\n\r\n          #tooltip.hidden {\r\n            display: none;\r\n          }\r\n\r\n          #tooltip p  {\r\n            margin: 0;\r\n            font-size: 14px;\r\n            line-height: 18px;\r\n          }\r\n\r\n          #container  {\r\n            position: inherit;\r\n          }\r\n\r\n          .graph-hed{\r\n            font-family: 'PT Serif', serif;\r\n            font-size: 0.90rem;\r\n            font-weight: 700;\r\n          }\r\n\r\n          .graph-subhed{\r\n            font-family: 'PT Serif', sans-serif;\r\n            font-size: 0.80rem;\r\n            font-weight: 400;\r\n          }\r\n\r\n          .hed  {\r\n            font-family: 'PT Serif', serif;\r\n            font-size: 2.25rem;\r\n            font-weight: 700;\r\n            text-align: center;\r\n            width: 70%;\r\n          }\r\n\r\n          .byline {\r\n            font-family: 'PT Sans', sans-serif;\r\n            font-size: 1rem;\r\n            font-style: italic;\r\n          }\r\n\r\n          .insight  {\r\n            font-family: 'PT Sans', sans-serif;\r\n            font-size: 1.2rem;\r\n            font-style: italic;\r\n            text-transform: uppercase;\r\n          }\r\n\r\n          .copy {\r\n            font-family: 'PT Sans', serif;\r\n            font-size: 1rem;\r\n            font-weight: 400;\r\n          }\r\n\r\n          .copy-link  {\r\n            border-bottom: 2px solid black;\r\n            color: black;\r\n          }\r\n\r\n          .copy-link:hover  {\r\n            border-bottom: 2px solid #cc0000;\r\n            color: #cc0000;\r\n            text-decoration: none;\r\n          }\r\n    <\/style>\r\n\r\n    <\/head>\r\n\r\n    <body>\r\n      <div class=\"container\" style=\"padding-top: 5%;\"><\/div>\r\n\r\n      <div class=\"container-fluid\">\r\n        <div class=\"row d-flex justify-content-center\" style=\"margin-bottom: 0px;\">\r\n          <p class=\"hed\">Analysis finds intervention treatment arm takes longer, on average, to resolve adverse events<\/p>\r\n        <\/div>\r\n\r\n        <div class=\"row d-flex justify-content-center\">\r\n        <div id=\"container\"><\/div>\r\n\r\n          <!-- place for tooltip -->\r\n          <div id=\"tooltip\" class=\"hidden\"><\/div>\r\n\r\n          <script>\r\n                var margin = {top: 100, right: 40, bottom: 250, left: 150},\r\n                    width = 1440 - margin.left - margin.right,\r\n                    height = 650 - margin.top - margin.bottom;\r\n\r\n                var overlap = 15;\r\n\r\n                var x = d3.scaleBand()\r\n                          .range([0, width])\r\n                          .padding(0.1);\r\n                var y = d3.scaleLinear()\r\n                          .range([height, 2*height/3]);\r\n\r\n                var svg = d3.select(\"#container\")\r\n                    .append(\"svg\")\r\n                    .attr(\"width\", width + margin.left + margin.right)\r\n                    .attr(\"height\", height + margin.top + margin.bottom)\r\n                    .append(\"g\")\r\n                    .attr(\"transform\",\r\n                          \"translate(\" + margin.left + \",\" + margin.top + \")\");\r\n\r\n                //create labels for each of the horizontal axes, i.e. Mild, Moderate, Severe\r\n                svg.append(\"text\")\r\n                   .text(\"Mild\")\r\n                   .attr(\"transform\",\r\n                        \"translate(\" + (-65) + \",\" + \"60)\");\r\n\r\n                svg.append(\"text\")\r\n                   .text(\"Moderate\")\r\n                   .attr(\"transform\",\r\n                        \"translate(\" + (-95) + \",\" + \"170)\");\r\n\r\n                svg.append(\"text\")\r\n                   .text(\"Severe\")\r\n                   .attr(\"transform\",\r\n                        \"translate(\" + (-70) + \",\" + \"275)\");\r\n\r\n                //graph-hed\r\n                svg.append(\"text\")\r\n                   .text(\"=> Most adverse events were mild in severity, while severe adverse events were resolved the quickest.\")\r\n                   .attr(\"x\", \"0\")\r\n                   .attr(\"y\", 0-2*height/7+25)\r\n                   .classed(\"graph-hed\", true);\r\n\r\n               //graph-hed\r\n               svg.append(\"text\")\r\n                  .text(\"Height of triangle represents duration of adverse event.\")\r\n                  .attr(\"x\", \"20\")\r\n                  .attr(\"y\", 0-2*height/7+45)\r\n                  .classed(\"graph-subhed\", true);\r\n\r\n                //create Placebo label\r\n                svg.append(\"text\")\r\n                   .text(\"Placebo\")\r\n                   .attr(\"x\", width-225)\r\n                   .attr(\"y\", 0-2*height/7+43);\r\n\r\n                //create placebo box (red)\r\n                svg.append(\"rect\")\r\n                   .attr(\"x\", width-250)\r\n                   .attr(\"y\", 0-2*height/7+30)\r\n                   .attr(\"fill\", \"rgba(255,0,0,0.2)\")\r\n                   .attr(\"height\", \"15px\")\r\n                   .attr(\"width\", \"15px\");\r\n\r\n              //create Intervention label\r\n               svg.append(\"text\")\r\n                  .text(\"Intervention\")\r\n                  .attr(\"x\", width-125)\r\n                  .attr(\"y\", 0-2*height/7+43);\r\n\r\n                //create box for Intervention (black/gray)\r\n                 svg.append(\"rect\")\r\n                    .attr(\"x\", width-145)\r\n                    .attr(\"y\", 0-2*height/7+30)\r\n                    .attr(\"fill\", \"rgba(0,0,0,0.2)\")\r\n                    .attr(\"height\", \"15px\")\r\n                    .attr(\"width\", \"15px\");\r\n\r\n                    //load data from GitHub\r\n                d3.csv(\"https://raw.githubusercontent.com/vivrao9/Wonderful-Wednesdays/master/data/2020/2020-08-12/cleaned_df.csv\", function(error, data) {\r\n                      if (error) throw error;\r\n\r\n                      //format data accordingly\r\n                      data.forEach(function(d) {\r\n                        d.severity = +d.severity;\r\n                        d.aestdat = d3.timeParse(\"%d/%m/%Y\")(d.aestdat);\r\n                        d.aestdat = d3.timeFormat(\"%m/%d/%Y\")(d.aestdat);\r\n                        d.dur = +d.dur;\r\n                        d.armn = +d.armn;\r\n                      });\r\n\r\n                      x.domain(data.map(function(d) { return d.aestdat; }));\r\n                      y.domain([0, d3.max(data, function(d) { return d.severity; })/3.5]); //divide by 3.5 to add more scale to triangle heights\r\n\r\n                      svg.selectAll(\".bar\")\r\n                          .data(data)\r\n                          .enter()\r\n                          .append(\"polygon\")\r\n                          .attr(\"points\",function(d) {\r\n\r\n                            //create different coordinates for each polygon based on which axis they lie on\r\n                              if (d.aesevn == 1)  { //if Mild, we'd want to add bar to the first axis\r\n                                var left = x(d.aestdat) - overlap;\r\n                                var top = y(d.dur + height/11.25);\r\n                                var bottom = height/3; //350 = 500 - 100 - 50\r\n                              } else if (d.aesevn == 2) { //if Moderate, add bar to second axis\r\n                                var left = x(d.aestdat) - overlap;\r\n                                var top = y(d.dur + height/22);\r\n                                var bottom = 2*height/3; //350 = 500 - 100 - 50\r\n                              } else  { //if Severe, we'd want to add bar to the third axis\r\n                                var left = x(d.aestdat) - overlap;\r\n                                var top = y(d.dur);\r\n                                var bottom = height; //350 = 500 - 100 - 50\r\n                              }\r\n\r\n                              return left + ',' + bottom + ' '\r\n                                 + (left + x.bandwidth()/2 + overlap) + ',' + top + ' '\r\n                                 + (left + x.bandwidth() + (2 * overlap)) + ',' + bottom;\r\n                          })\r\n                          .attr(\"fill\", function(d) {\r\n                        if (d.armn == 0)  {\r\n                          //if event is placebo, then color red\r\n                          return \"#CC0000\";\r\n                        }\r\n                      })\r\n                          .style(\"opacity\", \"0.2\")\r\n                          //show tooltip on hover\r\n                          .on(\"mouseover\", function(d)  {\r\n                        var xPos = d3.event.pageX;\r\n                        var yPos = d3.event.pageY;\r\n\r\n                        //Update the tooltip position and value\r\n                                    d3.select(\"#tooltip\")\r\n                                        .style(\"left\", xPos + \"px\")\r\n                                        .style(\"top\", yPos + \"px\")\r\n                            .html(\"<p><b>Randomization date: <\/b>\" + d.rando_date + \"<br /><p><b>High level event: <\/b>\" + d.aebodsys + \"<\/p><p><b>Low level event: <\/b>\" + d.aept + \"<\/p><p><b>Duration: <\/b>\" + d.dur + \" days<\/p><p>This subject has reported <b>\" + (d.repeatnum-1) + \"<\/b> adverse events before this.<\/p>\");\r\n\r\n                        //add highlight to active polygon\r\n                          d3.select(this)\r\n                            .attr(\"stroke\", \"rgba(0,0,0,1)\")\r\n                            .attr(\"stroke-width\", \"2px\")\r\n                            .attr(\"opacity\", \"0.8\");\r\n\r\n                                    //Show the tooltip\r\n                                    d3.select(\"#tooltip\").classed(\"hidden\", false);\r\n                      })\r\n\r\n                      .on(\"mouseout\", function() {\r\n                                    //Hide the tooltip\r\n                                    d3.select(\"#tooltip\").classed(\"hidden\", true);\r\n\r\n                          //remove highlight from active polygon\r\n                          d3.select(this)\r\n                            .attr(\"stroke\", \"none\")\r\n                            .attr(\"stroke-width\", \"0px\");\r\n                               });\r\n\r\n                  //first axis\r\n                      svg.append(\"g\")\r\n                          .attr(\"transform\", \"translate(-7.5,\" + 2*height/3 + \")\")\r\n                          .call(d3.axisBottom(x)\r\n                          .tickValues([]));\r\n\r\n                  //second axis\r\n                      svg.append(\"g\")\r\n                          .attr(\"transform\", \"translate(-7.5,\" + height/3 + \")\")\r\n                          .call(d3.axisBottom(x)\r\n                          .tickValues([]));\r\n\r\n                  //lowest axis\r\n                        svg.append(\"g\")\r\n                          .attr(\"transform\", \"translate(-7.5,\" + height + \")\")\r\n                          .call(d3.axisBottom(x)\r\n                          .tickValues(x.domain().filter(function(d,i){ return !(i%10)})));\r\n\r\n                      svg.append(\"line\")\r\n                          .attr(\"x1\", 0  - overlap)\r\n                          .attr(\"y1\", height)\r\n                          .attr(\"x2\", width  + overlap)\r\n                          .attr(\"y2\", height)\r\n                          .attr(\"stroke-width\", \"2\");\r\n                    });\r\n\r\n              <\/script>\r\n            <\/div>\r\n\r\n            <div class=\"row d-flex justify-content-center\" style=\"margin-top: -180px;\">\r\n              <div class=\"col-md-6\">\r\n                <p class=\"byline\">By Vivek Rao<\/p>\r\n\r\n                <p class=\"copy\">The above visualization is based on <a href=\"https://github.com/VIS-SIG/Wonderful-Wednesdays/tree/master/data/2020/2020-08-12\" target=\"_blank\" class=\"copy-link\">clinical trial data<\/a> for an active treatment for eczema compared to placebo in adolescents that are unresponsive to standard care.<\/p>\r\n\r\n                <p class=\"copy\">An analysis revealed that more adverse events were recorded for subjects that were assigned to an intervention treatment arm, compared to those assigned to a placebo.<\/p>\r\n\r\n                <p class=\"copy\">See some of the insights below:<\/p>\r\n\r\n                <div class=\"flourish-embed flourish-hierarchy\" data-src=\"visualisation/3538282\"><\/div>\r\n                <p class=\"copy\">Of the 61 patients closely followed in the 12-month period, 49 developed adverse effects relating to anemia.<\/p>\r\n\r\n                <div class=\"flourish-embed flourish-scatter\" data-src=\"visualisation/3538182\"><\/div>\r\n                <p class=\"copy\">Subjects assigned to placebo treatment arm that reported an adverse event had their event treated in a duration of 6 days, on average. Participants assigned to interevention treatment, on average, saw the end of their adverse event in 8 days.<\/p>\r\n\r\n              <\/div>\r\n            <\/div>\r\n\r\n    <\/body>\r\n<\/html>\r\n\r\nBack to blog\r\n\r\nExample 2. Triangles - updated version\r\n\r\n\r\n\r\nBack to blog\r\n\r\nExample 3. Tendril plot\r\n\r\n\r\n# packages\r\npacman::p_load(tidyverse, rio)\r\npacman::p_load(lubridate)\r\npacman::p_load(labelled)\r\npacman::p_load(Tendril)\r\npacman::p_load(ggtext)\r\npacman::p_load(colorspace)\r\n\r\n# import\r\nae <- import(\"https://raw.githubusercontent.com/VIS-SIG/Wonderful-Wednesdays/master/data/2020/2020-08-12/2020-08-12_ae_example_dataset.csv\") %>% \r\n  mutate(rando_date = ymd(rando_date),\r\n         aestdat = ymd(aestdat),\r\n         aeeddat = ymd(aeeddat)) %>% \r\n  mutate(day = as.numeric(aestdat - rando_date)) %>% \r\n  as.data.frame()\r\n\r\n# Fixed mistake in subject 2011\r\nae[ae$usubjid == \"2011\", \"arm\"] <- \"Intervention\"\r\n\r\n# add labels\r\nvar_label(ae) <- list(\r\n  usubjid = \"unique subject identifier\",\r\n  arm = \"treatment assignment name\",\r\n  armn = \"treatment assignment numeric (0: placebo; 1:intervention)\",\r\n  rando_date = \"date of randomisation (yyyymmdd)\",\r\n  repeatnum = \"unique event identifier within usubjid\",\r\n  aept = \"adverse event code at preferred term/lower level\",\r\n  aebodsys = \"adverse event code at body system/higher level\",\r\n  aesev = \"adverse event severity grade (mild, moderate, severe)\",\r\n  aesevn = \"adverse event severity grade number (1: mild, 2: moderate, 3: severe)\",\r\n  aeser = \"serious adverse event (no, yes)\",\r\n  aesern = \"serious adverse event (0: no, 1: yes)\",\r\n  aestdat = \"adverse event start date (yyyymmdd)\",\r\n  aeeddat = \"adverse event end date (yyyymmdd)\",\r\n  dur = \"adverse event duration (days)\")\r\n\r\n# export\r\nsetwd(\"C:/R/Wonderful-Wednesdays/2020-08-12\")\r\nexport(ae, \"2020-08-12_ae_example_dataset.rds\")\r\n\r\n# Tendril\r\nsubj <- ae %>%\r\n  count(usubjid, arm) %>% \r\n  #add_row(usubjid = 3000, arm = \"Intervention\", n = 0) %>% \r\n  #add_row(usubjid = 3001, arm = \"Placebo\",      n = 0) %>%\r\n  select(-n) %>% \r\n  as.data.frame()\r\n\r\npt <- Tendril(mydata = ae,\r\n              rotations = rep(3, nrow(ae)),\r\n              AEfreqThreshold = 5,\r\n              Tag = \"Comment\",\r\n              Treatments = c(\"Intervention\", \"Placebo\"),\r\n              Unique.Subject.Identifier = \"usubjid\",\r\n              Terms = \"aebodsys\",\r\n              #Terms = \"aept\",\r\n              Treat = \"arm\",\r\n              StartDay = \"day\",\r\n              # SubjList = subj,\r\n              # SubjList.subject = \"usubjid\",\r\n              # SubjList.treatment = \"arm\",\r\n              # filter_double_events = TRUE\r\n)\r\n\r\n# working with terms \r\nTerms <- pt$data %>% \r\n  group_by(Terms) %>% \r\n  summarise(n = n(),\r\n            x = x[n]) %>% \r\n  ungroup() %>% \r\n  arrange(x) %>% \r\n  mutate(text = str_glue(\"{Terms} (n={n})\")) \r\n\r\n# Reorder guides\r\npt$data$Terms <- fct_relevel(pt$data$Terms,\r\n                             Terms %>% \r\n                               pull(Terms) %>% \r\n                               as.vector()\r\n)\r\n\r\nlevels(pt$data$Terms) <- Terms %>% pull(text) %>% as.vector()\r\n\r\n# plot Results\r\nplot(pt) +\r\n  geom_point(alpha = 0.25) +\r\n  geom_path(alpha = 0.25) +\r\n  geom_vline(xintercept = 0, color = 'gray50', linetype = \"dashed\") +\r\n  geom_hline(yintercept = 0, color = 'gray50', linetype = \"dashed\") +\r\n  #scale_color_brewer(type = \"qual\", palette = \"Set1\") +\r\n  scale_color_discrete_qualitative(palette = \"Dark3\")+\r\n  scale_x_continuous(limits = c(-100, 200)) +\r\n  labs(title = \"**Tendril Plot** of System Organ Class Adverse Events (AE) having at least 5 incidences\",\r\n       # caption =\"The Tendril Plot: a novel visual summary of the incidence, significance and temporal aspects of AE in clinical trials (JAMIA 2018; 25(8): 1069-1073)\"\r\n       caption = \r\n       \"Each MedDRA adverse event code at body system/higher level is\r\n       represented by a line (tendril) and each point is an event. Since time runs\r\n       along each tendril, it is the shape that carries the important information,\r\n       rather than the x and y coordinates. An event on the Intervention treatment\r\n       arm will tilt tendril direction to the *right*, and an event on the placebo arm will\r\n       tilt tendril direction to the *left*.\r\n       <br>\r\n       *The Tendril Plot: a novel visual summary of the incidence, significance and temporal aspects of AE in clinical trials (JAMIA 2018; 25(8): 1069-1073)*\"\r\n       ) +\r\n  guides(color = guide_legend(title = \"AE at Body System\")) +\r\n  theme(aspect.ratio = 0.70,\r\n        plot.title = element_markdown(),\r\n        plot.caption = element_textbox_simple(\r\n          size = 8,\r\n          lineheight = 1,\r\n          hjust = 0, vjust = 1,\r\n          padding = margin(1, 1, 1, 1),\r\n          margin = margin(1, 1, 1, 1)\r\n        ),\r\n        plot.caption.position = \"plot\",\r\n        legend.position       = c(0.99,0.92),\r\n        legend.justification  = c(1,1),\r\n        legend.background     = element_rect(fill  = 'gray90'),\r\n        legend.key            = element_rect(fill  = 'gray90'))\r\n\r\nggsave(\"C:/R/Wonderful-Wednesdays/2020-08-12/tendril_plot.png\",\r\n       width = 7.5, height = 6, units = \"in\")\r\n\r\nBack to blog\r\n\r\nExample 4. AdEPro app\r\n\r\n\r\nlibrary(adepro)\r\nlibrary(tidyverse)\r\nlibrary(lubridate)\r\n\r\n#change to the working directory where the files were extracted\r\nsetwd(\"C:/Users/UHLMALO1/OneDrive - Novartis Pharma AG/My_Data/PSI_visualization/Wonderful_Wednesdays_Webinars/2020-09-09/Einreichungen/Final\")\r\n\r\n#Run this code to put the variables in the dataset provided into the correct format\r\nAE <- read.csv(\"2020-08-12_ae_example_dataset.csv\")%>%\r\n  mutate(TRTSDT=ymd(rando_date)) %>%\r\n  mutate(SUBJIDN = usubjid) %>%\r\n  mutate(AEDECOD = aept) %>%\r\n  mutate(TRT01A = arm) %>%\r\n  mutate(TRT01A = if_else(TRT01A==\"Intervention\",\"Experimental\",\"Control\")) %>%\r\n  mutate(LVDT = 365) %>%\r\n  mutate(DTHDT = \"NA\") %>%\r\n  mutate(SAFFN = 1) %>%\r\n  mutate(AETRTEMN = 1) %>%\r\n  mutate(AESERN = aesern) %>%\r\n  mutate(AERELN = 1) %>%\r\n  mutate(AE_Start = ymd(aestdat)) %>%\r\n  mutate(AESTDY = AE_Start - TRTSDT + 1)%>%\r\n  mutate(AEENDY = AESTDY + dur + 1) %>%\r\n  mutate(AESEVN = aesevn) %>%\r\n  mutate(TRTSDT=0) %>%\r\n  mutate(AGE=\"NA\") %>%\r\n  mutate(SEX=\"NA\") %>%\r\n  mutate(REGION=\"NA\") %>%\r\n  select(c(SUBJIDN,AEDECOD,AESTDY, AEENDY,AESEVN,AETRTEMN,AESERN,AERELN, TRT01A, TRTSDT, LVDT, DTHDT,AGE, SEX, REGION, SAFFN))\r\n\r\n#write this back to CSV\r\nwrite.csv(AE,\"AE.csv\",row.names=FALSE)\r\n\r\n#Run the following line to run the app.\r\n#CSV must be loaded into the app\r\nlaunch_adepro()\r\n\r\nBack to blog\r\n\r\nExample 5. Adverse event explorer\r\n\r\n\r\nlibrary(safetyexploreR)\r\nlibrary(tidyverse)\r\nlibrary(readr)\r\n\r\npsi_ae <- read_csv(\"psi-ae.csv\")\r\n\r\nADAE_PSI <- \r\n  psi_ae %>%\r\n  dplyr::mutate(\r\n    USUBJID = usubjid,\r\n    SITEID = 1,\r\n    RFSTDTC = rando_date,\r\n    AEDECOD = aept, \r\n    AESEQ = repeatnum,\r\n    ASTDT = aeeddat, \r\n    AEBODSYS = aebodsys, \r\n    ARM = arm, \r\n    AESEV = aesev,\r\n    AESER = aeser,\r\n    AEREL = 'Y',\r\n    AEOUT = dur,\r\n    SEX = 'NA',\r\n    RACE = 'NA'\r\n  )\r\n\r\naeExplorer(\r\n  data = ADAE_PSI,\r\n  filters_event_col = c(\"AESER\", \"AESEV\",\r\n                        \"AEREL\"),\r\n  filters_event_label = c(\"Serious?\", \"Severity\",\r\n                          \"Relationship\")\r\n)\r\n\r\nBack to blog\r\n\r\nExample 6. Volcano plots\r\n\r\n\r\n\r\nBack to blog\r\n\r\n\r\n",
    "preview": "posts/2020-10-17-wonderful-wednesdays-september-2020/./images/volcano BS Phillips.png",
    "last_modified": "2025-08-22T14:49:25+02:00",
    "input_file": {},
    "preview_width": 990,
    "preview_height": 720
  },
  {
    "path": "posts/2020-10-30-wonderful-wednesdays-august-2020/",
    "title": "Wonderful Wednesdays August 2020",
    "description": "In this month’s webinar, we discussed an exacerbation example data set. The data is based on the RISE study for patients with moderate COPD. The primary endpoint is the number of exacerbations during a six month treatment period. Event data – but patients can (and do) have multiple exacerbations. Statistical analysis used a Negative Binomial model. The dataset also included other variables which (may) effect the exacerbation rate: % Predicted Normal of Forced Expiratory Volume in 1 second (FEV1), Exacerbations in previous year, and Region / Gender. The challenge was to produce a data visualisation incorporating the information on the number of exacerbations observed. The discussed visualisations included a straightforward and clear presentation of the number of exacerbations, a Power BI app, longitudinal plots, and a display of patient-level outcomes.",
    "author": [
      {
        "name": "Lorenz Uhlmann",
        "url": "https://www.psiweb.org/sigs-special-interest-groups/visualisation"
      }
    ],
    "date": "2020-08-12",
    "categories": [
      "Event data",
      "Wonderful Wednesdays"
    ],
    "contents": "\r\nEvent data - COPD example data\r\nChronic Obstructive Pulmonary Disease (COPD) is a respiratory disease characterised by difficulty breathing and has increased mortality. An exacerbation can be life-threatening if not treated promptly. Data is based on the RISE study for patients with moderate COPD.\r\nThe primary endpoint is the number of exacerbations during a six month treatment period. Event data - but patients can (and do) have multiple exacerbations. Statistical analysis used a Negative Binomial model. here.\r\n\r\nExample 1. Dotplot\r\nhigh-resolution image\r\nThis is a very clean and clear presentation of the primary endpoint. It is actually a barchart but displayed horizontally. Each group is represented by a different color which makes it very easy to see the differences between the two groups in regards to the primary endpoint. The ICS/LABA group leads to higher values in the category of 0 counts, whereas the LABA group leads to higher percentages in all other categories. Thus, the message becomes very clear and it is easy to communicate the results using this visualization.\r\nOverall, this is a very good visualisation. The use of color is done in a very sensible way. The colors are already used which makes a lot of sense as well. Furthermore, it is a minimalistic design and, therefore, it focus on the relevant aspects while dropping any clutter (minimizing the ink-to-data ratio). There are more helpful details considered in the visualisation: The bars are labeled directly at each bar and the percentage of ICS/LABA are always above the bar while the percentage of LABA is always below.\r\nAn altarnative way would have been a waterfall plot. This would emphasize a little more the (change of) differences between the groups over the categories. Another option would have been to add lines between the “bars” in each category to emphasize the difference between the groups. These lines would be color coded to stress the “direction” of the difference.\r\nlink to code\r\n\r\nExample 2. Power BI app\r\n\r\nThe app can be found here.\r\nThis app provides you with a quick overview over several variables at the same time. It provides you with a lot of contextual information that helps you address the question you want to answer. It also has a nice feature: You can just click on a category of one variable and all other plots and numbers will get updated. This can be even done in combination among different variables. It also offers you a “Clear All filters” button which is often missing in other applications.\r\nSince it is interactive, it is really useful and a nice tool to explore the data. Furthermore, it is nicely organized and it includes several titles and explanations which makes it easy to see what is being displayed. On the top, you have all baseline variables, and on the bottome you see the outcomes. The latter ones are organized in boxed which appear to pop out which is a nice idea to put some emphasis on these variables. Also, the key numbers are being higlighted on the left hand side.\r\nSomething that could be improved on would be the use of coloring. It is not entirely clear what they represent and it also seems to change over different plots. The coloring in Figure 2.1 is actually great, because it makes you focus on the treatment of interest. However, this coloring scheme is not kept consisent over all visualisations, for example in Figure 2.2. At the same time, you could argue that it is more important there to be able to compare the categories between the two groups and, therefore, they have to be represented in the same color. A last idea for improvement would be add some random noise (horizontally) to the dots in the boxplots to make it easier to see each single observation. Furthemore, in Figure 2.1, the average number instead of the total number could have been displayed. Also, it is not entirely clear why there are numbers on the bottom left instead of additional visualisations.\r\nlink to code\r\n\r\nExample 3. Line plot\r\nhigh-resolution image\r\nHere, we are not only focusing on a single endpoint, but we also consider some covariate information. The title helps you to understand right away what this visualisation is showing you. It presents the rate ratio over different age and FEV1 values.\r\nOverall, this is a great visualisation. The design is minimalistic and chosen wisely. The coloring makes it clear that different aspects are being displayed. Also, the reference lines are really helpful. Another important point is the logarithmic scale on the x-axis which is keeps the confidence intervals / bands symmetric.\r\nAn aspect that gets not entirely clear is the defintion of the confidence bands. One could argue that we would expect the bands to get wider at both ends. Here the width seems to be absolutely constant. The reason for this is most likely the fact that we only look at overlapping subgroups which is explained in the footnote below the plot. Another point is the interpretation of the rate ratio in the title as a reduction which we could argue about. Furthermore, due to the logarithmic scale on the y axis, it might be a bit challenging to effectively make use of the horizontal grid lines which are not pointing at a specific value on the y axis.\r\nlink to code\r\n\r\nExample 4. Individual data\r\nhigh-resolution imagehigh-resolution image\r\nIn these two plots, the individual observations are being displayed which provides you with very detailed information. In addition, the overall effect is shown as median difference.\r\nAn advantage of this visualisation is that it shows you that despite of an existing treatment effect, we get reminded that there are indeed some patients who do not seem to benefit from the treatment.\r\nAt the same time, it might be a little bit challenging to get the message out of this visualisation right away. Withouth the lines showing the treatment effect, it might be really hard to see any effect at all. So, this plot might be specifically useful, if you have a big treatment effect - and then it has got huge potential in it. Also, the coloring is chosen wisely and the visualisation looks very clean overall.\r\nAn alternative way would have been to show the cumulative distribution functions for both groups and then emphasize the difference, for example, by coloring the space in between the two lines (representing the distribution functions). Another option could be Q-Q plots.\r\nlink to code\r\nCode\r\n\r\nExample 1. Dotplot (R)\r\n\r\n\r\n### Load packages\r\nlibrary(here)\r\nlibrary(tidyverse)\r\nlibrary(ggtext)\r\n\r\n### Load data\r\ndata <- data.frame(read_delim(here(\"2020-07-08-COPD-PSI-data.csv\"), delim=','))\r\ndata$ANTHONISEN <- fct_rev(factor(data$ANTHONISEN)) # reverse factor for plotting\r\n\r\n### Get percentage for number of exacerbations by treatment group\r\nfreq <- data %>% group_by(RAND_TRT, ANTHONISEN, .drop = F) %>% summarise(n = n()) %>% mutate(freq = 100 * n / sum(n))\r\nfreq$freq_label <- format(round(freq$freq, 1), nsmall = 1)\r\n\r\n### Add N's to treatment group labels\r\nN <- data %>% group_by(RAND_TRT) %>% summarize(N = n())\r\n\r\n### Create label variable including number of subjects\r\nfreq_n <- merge(freq, N, by = \"RAND_TRT\")\r\nfreq_n$RAND_TRT_L <- paste0(freq_n$RAND_TRT, \" (N=\", freq_n$N, \")\")\r\n\r\n### Colors\r\nfill <- c(\"#E7B800\", \"#2E9FDF\")\r\n\r\n### Plot\r\nggplot(freq_n, aes(x = ANTHONISEN, y = freq, color = RAND_TRT)) +\r\n  # Set minimal theme and flip x/y-axes\r\n  theme_minimal(base_size = 20) +\r\n  coord_flip() +\r\n  # Plot points\r\n  geom_point(position = position_dodge(width = 0), shape = 124, size = 10) +\r\n  # Plot annotations (different positions by treatment group)\r\n  geom_text(data = freq[freq$RAND_TRT == \"ICS/LABA\",], aes(label=freq_label, x=ANTHONISEN, y=freq), hjust=0.6, vjust=-1.5, size = 5) +\r\n  geom_text(data = freq[freq$RAND_TRT == \"LABA\",], aes(label=freq_label, x=ANTHONISEN, y=freq), hjust=0.6, vjust=2.5, size = 5) +\r\n  # Color treatment group labels in title\r\n  labs(title = paste(\"Larger proportion exacerbation-free with <span style='color:\", fill[1], \"'>\", unique(freq_n$RAND_TRT_L)[1], \r\n                     \"<\/span> compared to <span style='color:\", fill[2], \"'>\", unique(freq_n$RAND_TRT_L)[2], \"<\/span>\"),\r\n       subtitle = \"% of total within treatment groups by number of exacerbations\") +\r\n  theme(plot.title = element_markdown()) +\r\n  # Set colors and remove legend (in comments: code to color treatment group labels in legend)\r\n  #scale_color_manual(labels = paste(\"<span style='color:\", fill, \"'>\", unique(freq$RAND_TRT), \"<\/span>\"), \r\n  #                   values = fill, name = NULL) +   \r\n  #theme(legend.text = element_markdown(size = 12), legend.position = c(0.1, 0.89)) +\r\n  #guides(colour = guide_legend(override.aes=list(size=0))) +\r\n  scale_color_manual(values = fill) +\r\n  theme(legend.position = \"none\") +\r\n  # Remove clutter\r\n  scale_y_continuous(expand = c(0,1)) +\r\n  theme(axis.title.x = element_blank(), axis.text.x=element_blank(), \r\n        panel.grid.major.x = element_blank(), panel.grid.minor.x = element_blank()) +\r\n  scale_x_discrete(name = NULL) +\r\n  NULL\r\n\r\nggsave(file = here(\"dotplot.png\"), width = 35, height = 20, units = \"cm\")\r\n\r\nBack to blog\r\n\r\nExample 2. Power BI app\r\n\r\n\r\n\r\nBack to blog\r\n\r\nExample 3. Line plot\r\nR:\r\n\r\n\r\n####################################################################\r\n# Program name: COPD_exacs_STEPP.R\r\n# Purpose: To produce a STEPP plot for COPD exacerbations \r\n#          examining age and FEV1\r\n#         (for Wonderful Wednesdays Aug 2020)\r\n# Written by: Steve Mallett\r\n# Date: 31-Jul-2020\r\n####################################################################\r\n\r\nlibrary(haven)\r\nlibrary(ggplot2)\r\nlibrary(grid)\r\nlibrary(gridExtra)\r\n\r\ncopd_age <- read_sas(\"/.../plot_ww2020_08.sas7bdat\") %>%\r\n  filter(var == \"age_n\")\r\n  \r\nplot01 <- ggplot() +\r\n  geom_ribbon(data = copd_age, aes(x = median, ymin = LowerExp, ymax = UpperExp), fill = \"#b2e2e2\", alpha = .5) +\r\n  geom_line(data = copd_age, aes(x = median, y = ExpEstimate), color = \"#006d2c\", size = 0.5 ) +  \r\n  geom_segment(aes(x=53, xend=72, y=0.82, yend=0.82), linetype = 2, color = \"black\") +\r\n  scale_x_continuous(\"Age (years)\",\r\n                     # breaks=c(55, 60, 65, 70),\r\n                     # labels=c(55, 60, 65, 70),\r\n                     limits=c(53, 72)) +\r\n  scale_y_log10(\" \",\r\n                breaks=c(0.4, 0.6, 0.8, 1.0, 1.2, 1.4, 1.6),\r\n                limits=c(0.4, 1.6)) +\r\n  theme_minimal() +\r\n  theme(legend.position=\"none\",\r\n        text = element_text(size = 15),\r\n        axis.ticks.x = element_blank(),\r\n        axis.ticks.y = element_blank(),\r\n        axis.text.x =  element_text(size = 20),  \r\n        axis.text.y =  element_text(size = 20),        \r\n        axis.title.x = element_text(size = 20),\r\n        axis.title.y = element_text(size = 20),\r\n        plot.title = element_text(hjust = 0.5, size = 25),\r\n        panel.border = element_rect(colour = \"black\", fill=NA, size=0.25),\r\n        # panel.grid = element_blank(),\r\n        plot.margin=unit(c(0,0,0,0),\"cm\")) +\r\n  ggtitle(label = \" \")\r\n\r\ncopd_fev <- read_sas(\"/shared/175/arenv/arwork/gsk1278863/mid209676/present_2020_01/code/COPD/plot_ww2020_08.sas7bdat\") %>%\r\n  filter(var == \"fev1_rv\")\r\n\r\nplot02 <- ggplot() +\r\n  geom_ribbon(data = copd_fev, aes(x = median, ymin = LowerExp, ymax = UpperExp), fill = \"#bdd7e7\", alpha = .5) +\r\n  geom_line(data = copd_fev, aes(x = median, y = ExpEstimate), color = \"#08519c\", size = 0.5 ) +  \r\n  # geom_hline(yintercept = 0.82, linetype = 2, color = \"black\", size = 0.5) +\r\n  geom_segment(aes(x=34, xend=60, y=0.82, yend=0.82), linetype = 2, color = \"black\") +\r\n  scale_x_continuous(\"FEV1 (% predicted)\",\r\n                     breaks=c(34, 40, 45, 50, 55, 60),\r\n                     labels=c(35, 40, 45, 50, 55, 60),\r\n                     limits=c(34, 60)) +\r\n  scale_y_log10(\" \",\r\n                breaks=c(0.4, 0.6, 0.8, 1.0, 1.2, 1.4, 1.6),\r\n                limits=c(0.4, 1.6)) +\r\n  theme_minimal() +\r\n  theme(legend.position=\"none\",\r\n        text = element_text(size = 15),\r\n        axis.ticks.x = element_blank(),\r\n        axis.ticks.y = element_blank(),\r\n        axis.text.x =  element_text(size = 20),  \r\n        axis.text.y =  element_text(size = 20),        \r\n        axis.title.x = element_text(size = 20),\r\n        axis.title.y = element_text(size = 20),\r\n        plot.title = element_text(hjust = 0.5, size = 25),\r\n        panel.border = element_rect(colour = \"black\", fill=NA, size=0.25),\r\n        # panel.grid = element_blank(),\r\n        plot.margin=unit(c(0,0,0,0),\"cm\")) +\r\n  ggtitle(label = \" \")\r\n\r\ng <- grid.arrange(plot01, plot02, ncol =1, nrow = 2,\r\n                  left = textGrob(\"Rate Ratio (ICS+LABA / LABA)\", rot = 90, gp = gpar(fontsize=20)),\r\n                  top = textGrob(\"ICS+LABA Reduces COPD Exacerbation Rate by 18 Percent Compared\\n to LABA, Consistently Across Age and Lung Function Values\", gp = gpar(fontsize=25)),\r\n                  bottom = textGrob(\"\\nAnalysis performed using a negative binomial regression model adjusting for number of previous \\nexacerbations and region. Sliding window STEPP plots, using overlapping subgroups (N=350).\", gp = gpar(fontsize=18)))\r\n\r\nggsave(\"/.../plot_ww2020_08.png\", g, width=12, height=12, dpi=300)\r\n\r\nSAS:\r\n\r\n\r\nlibname outdata \"H:\\arwork\\gsk1278863\\mid209676\\present_2020_01\\code\\COPD\";\r\n\r\nPROC IMPORT OUT= WORK.copd \r\n            DATAFILE= \"C:\\Users\\sam31676\\OneDrive - GSK\\_Non Project\\Data Visualisation\\PSI data vis SIG\\Wonderful Wednesdays\\2020 08\\ww08.txt\" \r\n            DBMS=CSV REPLACE;\r\n     GETNAMES=YES;\r\n     DATAROW=2; \r\nRUN;\r\n\r\ndata copdx;\r\n  set copd;\r\n  fu_years=study_days_n/365.25;\r\n  logfu=log(fu_years);\r\nrun;\r\n\r\n* Fit overall model;\r\n\r\nproc genmod data=copdx;\r\n  class rand_trt prev_exac region;\r\n  model anthonisen = rand_trt prev_exac region fev1_rv /dist=negbin link=log offset=logfu type3; \r\n  lsmeans rand_trt / diff exp cl om;\r\nrun;\r\n\r\n* Main macro to create plot data;\r\n\r\n%macro create(id=, var=, class=, covars=);\r\nproc sort data=copdx;\r\n  by &var;\r\nrun;\r\n\r\noptions nosymbolgen mprint;\r\n%let r1=50;\r\n%let r2=350;\r\n%let n = 1221;\r\n\r\n%macro split;\r\n%global m;\r\n%let i = 0;\r\n%let low = 1;\r\n%let high = %eval(&r2);\r\n\r\n%do %until (&high > &n);\r\n  %let i = %eval(&i+1);\r\n\r\n  data copd&i;\r\n    set copdx;\r\n    if _n_ >= &low and _n_ <= &high;\r\n    group = &i;\r\n    run;\r\n\r\n  %let low = %eval(&low+&r1);\r\n  %let high = %eval(&low+&r2-1);\r\n  %let m = &i;\r\n  %end;\r\n\r\n%mend split;\r\n%split;\r\n\r\n%macro combine;\r\ndata copd_all;\r\n  set \r\n  %do i = 1 %to &m;\r\n    copd&i\r\n    %end;\r\n    ;\r\nrun;\r\n%mend combine;\r\n%combine;\r\n\r\nproc means data=copd_all noprint;\r\n  by group;\r\n  var &var;\r\n  output out=med(keep=group median) median(&var)=median;\r\nrun;\r\n\r\nods output diffs=diffs;\r\n\r\nproc genmod data=copd_all;\r\n  by group;\r\n  class &class;\r\n  model anthonisen = &covars/dist=negbin link=log offset=lnstudyday; \r\n  lsmeans rand_trt / diff exp cl om;\r\nrun;\r\nquit;\r\n\r\ndata plot&id;\r\n  merge diffs(keep=group ExpEstimate lowerexp upperexp) med;\r\n  by group;\r\n  var=\"&var\";\r\nrun;\r\n%mend create;\r\n%create(id=1, var=fev1_rv, class=%str(rand_trt prev_exac region), covars=%str(rand_trt prev_exac region));\r\n%create(id=2, var=age_n, class=%str(rand_trt prev_exac region), covars=%str(rand_trt prev_exac region));\r\n\r\ndata outdata.plot_ww2020_08;\r\n  set plot1 plot2;\r\nrun;\r\n\r\nBack to blog\r\n\r\nExample 4. Individual data\r\n\r\n\r\nlibrary(tidyverse)\r\nlibrary(RColorBrewer)\r\nlibrary(readxl)\r\n\r\n#Colour scheme\r\nOrange <- \"#EF7F04\"\r\nGreen <- \"#68B937\"\r\nBlue <- \"#00A6CB\"\r\nGrey <- \"#4E5053\"\r\nDarkblue <- \"#003569\"\r\nYellow <- \"#FFBB2D\" \r\nGreyedOut <- \"#D3D3D3\"\r\n\r\nsetwd(\"C:/Users/philip.griffiths/OneDrive - OneWorkplace/Documents/Wonderful Wednesday/Exacerbations\")\r\n\r\n#Read in a dataset and create a flag value for exacerbations >=1\r\nexacerbations <- read_csv(\"2020-07-08-COPD-PSI-data.csv\")  %>%\r\n  mutate(flag = as.numeric(ifelse(ANTHONISEN >= 1, \"1\", \"0\")))\r\n\r\n#linear regression to adjust number of exacerbations based on Baseline values\r\nModel <- lm(ANTHONISEN ~ FEV1_RV + PREV_EXAC + AGE_C + GENDER + SMOKER + AIRFLOW, data = exacerbations)\r\n\r\n#logistic regression to determine the probability of >=1 exacerbation adjusted for baseline\r\nLogisticModel <- glm(flag ~ FEV1_RV + PREV_EXAC + AGE_C + GENDER + SMOKER + AIRFLOW,data = exacerbations,family = binomial)\r\n\r\n#Check out the models. I actually removed region. it was highly sig, but I dont have a theoretical reason for that, and also just loads of US\r\nsummary(Model)\r\nsummary(LogisticModel)\r\n\r\n#Make an \"adjusted\" exacerbation rate and a probability exacerbation\r\nAdjusted <- predict(Model, data = exacerbations)\r\nProb <-predict(LogisticModel, type = \"response\")\r\n\r\n#add the ajusted and probability columns to the main dataset. make adjusted exacerbations per year\r\n#Sequence1 is a consecutively ordered variable for the waterfall plot later on\r\nexacerbations_pred <- add_column(exacerbations, adjust=Adjusted) %>%\r\n  add_column(prob=Prob) %>%\r\n  mutate(years=STUDY_DAYS_N/365) %>%\r\n  mutate(ratio=adjust / years) %>%\r\n  arrange(ratio) %>%\r\n  add_column(sequence1 = 1:nrow(exacerbations))\r\n\r\n#create two datasets (one for treat and one for control) and test the difference between them\r\ntreat <-exacerbations_pred %>%\r\n  filter(RAND_TRT==\"ICS/LABA\")\r\n\r\ncontrol <- exacerbations_pred %>%\r\n  filter(RAND_TRT==\"LABA\")\r\n  \r\nwilcox.test(treat$ratio, control$ratio,paired=FALSE)\r\n\r\nwhichmedian <- function(x) which.min(abs(x - median(x)))\r\n\r\n#Median patient on treatment for reference line\r\nTreatMed <- exacerbations_pred %>%\r\n  filter(RAND_TRT==\"ICS/LABA\") %>%\r\n  slice(whichmedian(ratio))\r\n\r\n#Median patient on control for refeence line\r\nControlMed <- exacerbations_pred %>%\r\n  filter(RAND_TRT==\"LABA\") %>%\r\n  slice(whichmedian(ratio))\r\n\r\n#create plot\r\np <- exacerbations_pred %>%\r\n  ggplot() +\r\n  geom_col(aes(x=sequence1, y=ratio, fill=RAND_TRT, color=RAND_TRT)) + #column - aes takes seq1 for the x as this is the reordered Ps. Need fill and colour so that the col outlines are the correct colour\r\n  ggtitle(\"Group level advantage for ICS/LABA patients was replicated at the\\npatient level using demographic adjusted yearly exacerbation rate\") + #titles etc\r\n  xlab(\"Patients, in order of adjusted exacerbation probability\") +\r\n  xlab(\"Patients, in order of adjusted exacerbations per year\") + \r\n  ylab(\"Adjusted exacerbations per year\") +\r\n  geom_vline(aes(xintercept = sequence1), linetype='dashed', col = Darkblue, TreatMed)  + #reference lines for median treatment response and median control response\r\n  geom_vline(aes(xintercept = sequence1), linetype='dashed', col = Green, ControlMed)  +\r\n  scale_fill_manual(values=c(Darkblue, Green), name = \"Condition\", labels = c(\"Treatment\\n(ICS/LABA)\", \"Control\\n(LABA)\")) + #make sure that the col and legend have the chosen colors. Update legend text\r\n  scale_colour_manual(values=c(Darkblue, Green)) + #make sure the outlines for the cols are also coloured in line with the above\r\n  guides(color = FALSE, size = FALSE) + # remove legend for the col outline\r\n  theme(axis.text.x=element_blank(), # remove the participant numbers \r\n        axis.ticks.x=element_blank()) + # remove x-axis ticks\r\n  theme (plot.title = element_text(family = \"sans\", color=Grey, face=\"bold\", size=22, hjust=0.5)) + #Edit font\r\n  theme (axis.title = element_text(family = \"sans\", color=Grey, face=\"bold\", size=22)) + #Edit font\r\n  theme(panel.background = element_blank()) # blank out the background\r\n\r\np + annotate(geom = \"text\", x = (ControlMed$sequence1 + 3), y = 3, label = \"Median difference\", hjust = \"left\", size = 6) + #add text higlighting the median\r\n  annotate(geom = \"segment\", y = 3, yend = 3, x = (TreatMed$sequence1 + 3), xend = (ControlMed$sequence1 - 3), \r\n           arrow = arrow(length = unit(3, \"mm\"))) + #this controls the arrow heads\r\n  annotate(geom = \"segment\", y = 3, yend = 3, x = (ControlMed$sequence1 - 3), xend = (TreatMed$sequence1 + 3), \r\n           arrow = arrow(length = unit(3, \"mm\")))\r\n\r\n#additional manipulation to reorder the dataset based on probability of exacerbation and creaion of a consecutive numbering (sequence2)\r\nexacerbations_pred <- exacerbations_pred %>%\r\n  arrange(prob) %>%\r\n  add_column(sequence2 = 1:nrow(exacerbations))\r\n\r\n#create two datasets (one for treat and one for control) and test the difference between them\r\ntreat <-exacerbations_pred %>%\r\n  filter(RAND_TRT==\"ICS/LABA\")\r\n\r\ncontrol <- exacerbations_pred %>%\r\n  filter(RAND_TRT==\"LABA\")\r\n\r\nwilcox.test(treat$prob, control$prob,paired=FALSE)\r\n\r\n#Median patient on treatment for ref line\r\nTreatMed <- exacerbations_pred %>%\r\n  filter(RAND_TRT==\"ICS/LABA\") %>%\r\n  slice(whichmedian(prob))\r\n\r\n#Median patient on control for ref line\r\nControlMed <- exacerbations_pred %>%\r\n  filter(RAND_TRT==\"LABA\") %>%\r\n  slice(whichmedian(prob))\r\n\r\n#see above plot for comments\r\nq <- exacerbations_pred %>%\r\n  ggplot() +\r\n  geom_col(aes(x=sequence2, y=prob, fill=RAND_TRT, color=RAND_TRT)) +\r\n  ggtitle(\"Group level advantage for ICS/LABA patients was replicated at the patient \\n level showing higher probability of Exacerbations for Control patients\") + \r\n  ylab(\"Adjusted probability of >=1 exacerbation\") +\r\n  xlab(\"Patients, in order of adjusted exacerbation probability\") + \r\n  geom_vline(aes(xintercept = sequence2), linetype='dashed', col = Darkblue, TreatMed)  +\r\n  geom_vline(aes(xintercept = sequence2), linetype='dashed', col = Green, ControlMed)  +\r\n  scale_fill_manual(values=c(Darkblue, Green), name = \"Condition\", labels = c(\"Treatment\\n(ICS/LABA)\", \"Control\\n(LABA)\"))+\r\n  scale_colour_manual(values=c(Darkblue, Green)) + \r\n  guides(color = FALSE, size = FALSE) +\r\n  theme(axis.text.x=element_blank(), \r\n        axis.ticks.x=element_blank()) + \r\n  theme (plot.title = element_text(family = \"sans\", color=Grey, face=\"bold\", size=22, hjust=0.5)) + \r\n  theme (axis.title = element_text(family = \"sans\", color=Grey, face=\"bold\", size=22)) + \r\n  theme(panel.background = element_blank()) \r\n\r\n \r\nq + annotate(geom = \"text\", x = (ControlMed$sequence2 + 3), y = 0.6, label = \"Median difference\", hjust = \"left\", size = 6) +\r\n  annotate(geom = \"segment\", y = 0.6, yend = 0.6, x = (TreatMed$sequence2 + 3), xend = (ControlMed$sequence2 - 3), \r\n           arrow = arrow(length = unit(3, \"mm\"))) +\r\n  annotate(geom = \"segment\", y = 0.6, yend = 0.6, x = (ControlMed$sequence2 - 3), xend = (TreatMed$sequence2 + 3), \r\n           arrow = arrow(length = unit(3, \"mm\")))\r\n\r\nBack to blog\r\n\r\n\r\n",
    "preview": "posts/2020-10-30-wonderful-wednesdays-august-2020/./images/dotplot - Markus Vogler.png",
    "last_modified": "2025-08-22T14:49:25+02:00",
    "input_file": {},
    "preview_width": 4133,
    "preview_height": 2362
  },
  {
    "path": "posts/2020-09-20-wonderful-wednesdays-july-2020/",
    "title": "Wonderful Wednesdays July 2020",
    "description": "This month's challenge was to summarise changes in haemoglobin (Hgb) concentration over time in patients with anaemia associated with Chronic Kidney Disease (CKD). An experimental medicine was compared with a control group, but in addition to demonstrating efficacy, there was a special interest in visualising intra-individual variability, as large changes in Hgb are a potential safety concern. The visualisations presented ranged from grouped line plots over time, Sankey-diagrams and line plots with quantile bands for summary views and a lasagna plot for the display of individual data. Some general hints were given on how to define suitable color palettes for graphs depending on the type of data. Presented by Steve Mallett.",
    "author": [
      {
        "name": "Steve Mallett",
        "url": "https://www.psiweb.org/sigs-special-interest-groups/visualisation"
      }
    ],
    "date": "2020-07-01",
    "categories": [
      "Longitudinal",
      "Continuous data",
      "Wonderful Wednesdays"
    ],
    "contents": "\r\nHaemoglobin in Anaemia\r\nThis month’s example dataset comprised haemoglobin (hgb) concentrations over time from a simulated randomised trial in anaemia patients, comparing an experimental treatment with an active control group. The main study objective was to demonstrate a mean hgb value within a target range at the end of the study (week 24). However anaemia treatments have a known safety issue in that large or rapid increases in hgb levels are associated with increased cardiovascular risk. Therefore a successful treatment should also demonstrate stability and control in hgb levels, with increases in hgb over a 4 week period being ideally limited to <1 g/dl, with increases >2 g/dl being considered a safety risk. The challenge was to produce data visualizations that provide insights into the variability of hgb in addition to the efficacy.\r\nA more detailed description and link to the data can be found here.\r\n\r\nExample 1. Trellis Plot\r\n\r\nlink to codehigh-resolution image\r\nThis is a good example of a Trellis plot; in this example the left and right panels represent subgroups of patients with high and low hgb variability, respectively. High and low hgb variability in this case has been defined in terms of whether each subject had a change in hbg level of >2 g/dl between any two consecutive visits. The legend includes the number of patients in each treatment group (n), and before even considering the plot itself, the values of ‘n’ tell a story in that more patients with high hgb variability can be found in the control group, and more patients with lower hgb variability were in the experimental treatment group. The title plot clearly tells us the ‘story’ behind the plot in that the mean hgb in the control group did not achieve the target range in the low variability panel. In the left (high variability) panel, control group patients did achieve the target range, but at the expense of increased hgb variability (and therefore cardiovascular safety risk).\r\nSome good graphics principles were used, i.e. consistent use of colour across different areas of the graph to represent treatment group (although having the treatment labels closer to the line graphs would be an improvement). The target range was clearly labeled, although a band of light colour or grey may have provided further emphasis. Removing some of the unnecssary elements may have improved the visual impact of the graph, i.e. removing the non-inferiority boundary line, and simplifying the X-axis labels.\r\nThere were some ideas for further enhancements: in representing variability in a data visualisation, it’s often more meaningful to show the distribution of the data (for example error bars representing standard deviation rather than standard error of the mean). The plot may also have worked better by stacking the display panel vertically rather than horizontally. (These latter two points are adequately addressed in Example 4.)\r\n\r\nExample 2. Sankey Plot\r\n\r\nlink to codehigh-resolution image\r\nUnlike the previous example, this graph is entirely focused on showing us the relative changes in hgb levels rather than absolute values. Each panel in the graph includes a series of stacked bars charts over time, with categories defined in terms of change in hgb since the previous visit. The title has a clear message, and the higher variability in the control group is readily observed, with the bars in left panel (control group) showing more patients in the higher variability (2-3 g/dl and >3 g/dl) categories, and fewer patients in the low variability (<1 g/dl and 1-2 g/dl) categories. The Sankey plot includes the additional feature of enabling the viewer to visualise the shifting of patients from one category to another (or remaining in the same category) across visits.\r\nA few issues with the plot were discussed. A Sankey plot might be easier to interpret if the categories represented absolute hgb levels, so that the graph is showing shifts between different hbg levels. The graph is much harder to interpret when the categories themselves are representing hgb changes. Another issue is that increased versus decreased hgb levels have a different clinical interpretation, i.e. large decreases in hgb represent lack of efficacy, while increases are associated with a safety concern. For this reason, it would have been better to separate out the increases and decreases in hgb, i.e. defining separate categories for decrease >3 g/dl and increase >3 g/dl etc.\r\nAnother drawback is that it’s not possible to follow individual patients across the study (e.g. how many patients with good hbg control at week 4 also maintained good control at week 12, 16 …?). An alternative approach might be to define categories in terms of patients who were “stable” (e.g. defined as change in hgb <1 g/dl) at each visit and all preceding visits (versus patients with hgb change in hgb >= 1 g/dl at that visit or any preceding visit). This would address the question of whether patients achieved and sustained hgb control.\r\n\r\nExample 3. Lasagna Plot\r\n\r\nlink to code high-resolution image\r\nA lasagna plot can be a useful means for visualising longitudinal data with a continuous endpoint. Like its pasta-related cousin the spaghetti plot, data for each individual patient are shown with time represented on the X-axis. The main difference is that the spaghetti plot represents the continuous outcome variable on the Y-axis, while the lasagna plot uses a fixed point on the Y-axis for each patient, with values at different time points being mapped to a colour scale. The lasagna plot overcomes a drawback of the spaghetti plot where overlapping of the different patient “trajectories” can lose information, and the plot can be difficult to interpret if there are more than a small number of patients.\r\nA traditional lasagna plot uses solid areas of colour to represent outcomes at different time points for each patient, but the variation shown here has added some interpolation or blending, which gives a more blurred effect. Assuming the audience has received some instruction on how to interpret the graph, the overall message is quite obvious as the lower panel (control group) is clearly showing more areas of blue (representing decreases in hbg) and red (increases in hgb) since the previous visit, compared to the experimental treatment. Unlike the previous Sankey plot, the colour scheme makes a distinction between decreases and increases in hgb. Although colour hue or intensity is not the most effective attribute for encoding numeric values (see this link), this graph works quite well in providing an overall, qualitative impression of trends in the data where there is a strong and clearly defined effect.\r\nA possible improvement to the graph would be to sort the patients in a meaningful way, for example ordering by time to first increase in hgb (and even superimposing a survivor function curve), or ordering the patients by the length of time hgb stability was achieved at the end of the study.\r\n\r\nExample 4. Plot of Hgb Distribution Over Time\r\n\r\nlink to codehigh-resolution image\r\nThis plot shows the efficacy of each treatment (i.e. hgb levels compared to the target range) and additionally includes information on the distribution of the data. The median value is plotted along with a series of bands representing different percentages around the median, i.e. +/- 5%, 10% etc. This is more relevant information, in terms of showing the variability of individual patient outcomes, compared to a standard plot showing means and 95% confidence intervals. The title is telling a clear story, which is supported by the data visualisation showing that more patients in the control group were outside the hgb target range for long periods during the study. The plot is showing within-group variability, in contrast to the lasagna plot which was displaying within-patient variability. There is a natural trade-off between these two measures, and it would be challenging to show them both in the same plot; the choice of graph would depend on the clinical question of interest.\r\nFinally, the vertical stacking of the last two graphs was viewed as a good design choice, as in both cases this enables a simplified and clearer design by removing redundant X-axis labels.\r\nCode\r\n\r\nExample 1. Trellis Plot (R)\r\n\r\n\r\n## PSI Wonderful Wednesday June \r\n## Mean plots by change > 2 v1_0\r\n## Abi Williams\r\n\r\n## Load packages\r\n\r\nlibrary(tidyverse)\r\nlibrary(plotly)\r\nlibrary(plotrix)\r\nlibrary(metR) \r\n\r\n## Add chosen colours\r\n\r\nOrange <- \"#EF7F04\"\r\nGreen <- \"#68B937\"\r\nBlue <- \"#00A6CB\"\r\nGrey <- \"#4E5053\"\r\nDarkblue <- \"#003569\"\r\nYellow <- \"#FFBB2D\"\r\n\r\n# Read in data ====\r\n\r\nrawdat <- read_csv(\"hgb_data.csv\")\r\nsankdat <- read_csv(\"Sankey.csv\")\r\n\r\n## add visit and treatment names to sankey data\r\n\r\nsankdat2 <- sankdat %>% \r\n  left_join(rawdat) %>% \r\n  replace_na(list(CHG = 0, CHG_FROM_BL = 0))\r\n\r\nsankdat2$TRT01P <- as.factor(sankdat2$TRT01P)\r\nsankdat2$AVISIT <- as.factor(sankdat2$AVISIT)\r\n\r\nsankdat2$AVISIT <- fct_relevel(sankdat2$AVISIT, \"Week 4\", \"Week 8\", after = 1)\r\n\r\n\r\n## Create flag for patients who have change >2 at any point =====\r\n\r\npatsub1 <- sankdat2 %>% \r\n  filter(CHG > 2) %>% \r\n  select(USUBJID) %>% \r\n  distinct() %>% \r\n  mutate(anychg2FLN = 1) %>% \r\n  mutate(anychg2FLC = \"Change > 2 between any two consecutive visits\")\r\n\r\n\r\nflagged_dat <- sankdat2 %>% \r\n  left_join(patsub1) %>% \r\n  replace_na(list(anychg2FLN = 0, anychg2FLC = \"No change > 2 between any two consecutive visits\"))\r\n\r\n\r\n\r\nsummary_flagged <- flagged_dat %>%\r\n  group_by(AVISIT, TRT01P, anychg2FLC) %>% \r\n  summarise(mean_chg_BL = mean(CHG_FROM_BL),\r\n            mean_chg_BL_ci   = std.error(CHG_FROM_BL),\r\n            mean_chg_vis = mean(CHG),\r\n            mean_chg_vis_ci = std.error(CHG),\r\n            mean_raw = mean(AVAL),\r\n            mean_raw_ci = std.error(AVAL),\r\n            n = n())\r\n\r\n\r\nref <- summary_flagged %>% \r\n  filter(TRT01P == \"Treatment C\") %>% \r\n  ungroup() %>% \r\n  mutate(mean_raw = mean_raw - 0.75) %>% \r\n  mutate(TRT01P = \"Non-inferiority boundary\") %>% \r\n  mutate(mean_raw_ci = 0)\r\n\r\n\r\ndata <- summary_flagged %>% \r\n  ungroup() %>% \r\n  add_row(ref)\r\n\r\ndata$TRT01P <- as.factor(data$TRT01P) \r\n\r\ndata$TRT01P <- fct_relevel(data$TRT01P, \"Non-inferiority boundary\", after = Inf)\r\n\r\n## Make base plot ====\r\n\r\nmeanplot <- ggplot(data = data, aes(x = AVISIT, y = mean_raw, group = TRT01P, color = TRT01P)) ## plot object\r\n\r\npd <- position_dodge(width = 0.1) ## position adjustment to use\r\n\r\nplota <- meanplot +\r\n  # Line plot and error bars\r\n  geom_line(aes(linetype = TRT01P), show.legend = FALSE, position = pd) +\r\n  geom_errorbar(aes(ymin = mean_raw - mean_raw_ci, ymax = mean_raw + mean_raw_ci),\r\n                width = .1, linetype = 1, position = pd) +\r\n  geom_point(position = pd) +\r\n  \r\n  facet_wrap(vars(anychg2FLC)) +\r\n  # Add chosen colours\r\n  scale_color_manual(name = \"Treatment\", values = c(Blue, Green, Grey)) +\r\n  scale_linetype_manual(name = \"Treatment 2\", values = c(1,1,2)) +\r\n  \r\n  \r\n  # Title and labels\r\n  ggtitle(\"Target Haemoglobin level is (on average) not reached on Treatment C without concerning (>2 Hgb g/dL) level of change between visits\") +\r\n  ylab(\"Mean (Standard Error) haemoglobin level [g/dL]\") +\r\n  xlab(\"Visit\") +\r\n  \r\n  # Add lines/text for target range\r\n  geom_hline(yintercept = c(10, 11.5), colour = Darkblue, linetype = 2, size = .5) +\r\n  annotate(geom = \"text\", x = c(1.5), y = c(10.75), colour = Darkblue, label = \"Target Range\", fontface = 2) +\r\n  \r\n  # Add interpretation arrows (https://stackoverflow.com/questions/17032393/how-to-draw-arrow-in-ggplot2-with-annotation)\r\n  annotate(geom = \"segment\", x = 1.2, y = c(10.6, 10.9), xend = 1.2, yend = c(10.2, 11.3), colour = Darkblue, size = 1.25,\r\n           arrow = arrow(length = unit(0.4, \"cm\"))) +\r\n  \r\n  # Specify theme\r\n  theme_bw()\r\n# theme(plot.margin = unit(c(1,3,7,5), \"lines\")) \r\n\r\n## Add some n labels =====\r\ndat_text <- data.frame(\r\n  label = c(\"\\n\\n  Treatment C (n = 91)\", \"\\n  Treatment E (n = 12)\", \"Non-inferiority boundary (Control - 0.75)\", \"\\n\\nTreatment C (n = 59)\", \"\\nTreatment E (n = 138)\"),\r\n  anychg2FLC   = c(rep(\"Change > 2 between any two consecutive visits\", times = 3), rep(\"No change > 2 between any two consecutive visits\", times=2)),\r\n  TRT01P = c(\"Treatment C\", \"Treatment E\", \"Non-inferiority boundary\", \"Treatment C\", \"Treatment E\"),\r\n  xx = rep(3.5, times =5),\r\n  yy = rep(8.5, times = 5)\r\n)\r\n\r\n## Combine plot with text ====\r\nplota + geom_text(\r\n  data    = dat_text,\r\n  mapping = aes(x = xx, y = yy, label = label, colour = TRT01P),\r\n  hjust   = -0.1,\r\n  vjust   = -1,\r\n  inherit.aes = FALSE,\r\n  show.legend = FALSE\r\n) +\r\n  guides(colour = \"none\")\r\n\r\nBack to blog\r\n\r\nExample 2. Sankey Plot (R)\r\n\r\n\r\nlibrary(ggalluvial)\r\nlibrary(ggplot2)\r\nlibrary(tidyverse)\r\nlibrary(RColorBrewer)\r\n\r\nOrange <- \"#EF7F04\"\r\nGreen <- \"#68B937\"\r\nBlue <- \"#00A6CB\"\r\nGrey <- \"#4E5053\"\r\nDarkblue <- \"#003569\"\r\nYellow <- \"#FFBB2D\"\r\n\r\n\r\nsankey <- read.csv('Sankey.csv')\r\nsankey$CHG_CAT <- as.factor(sankey$CHG_CAT)\r\nsankey$BROAD_CHG_CAT <- as.factor(sankey$BROAD_CHG_CAT)\r\nsankey$AVISITN <- as.factor(sankey$AVISITN)\r\nsankey$TRT01P <- as.factor(sankey$TRT01P)\r\nsankey$TARGET <- as.factor(sankey$TARGET)\r\n\r\np <- sankey %>%\r\n#  filter(TRT01PN==1) %>%\r\n ggplot(aes(x = AVISITN, stratum = CHG_CAT, alluvium=USUBJID, fill = CHG_CAT)) +\r\n  scale_fill_brewer(type = \"qual\", palette = \"Set2\") +\r\n  geom_flow(color = \"darkgray\", aes.flow = \"backward\") +\r\n  geom_stratum() +\r\n  theme(legend.position = \"bottom\") \r\n\r\n\r\n\r\np + scale_fill_manual(values = c(\"white\", \"#3FFDBE\", \"#39E3DA\", \"#4AD5FA\", \"#3991E3\"), limits=c(\"1. Baseline\", \"2. <1g/dl\", \"3. 1-2g/dl\", \"4. 2-3g/dl\",\"5. >3g/dl\"), name=\"Change in Hemoglobin \\n since previous visit\") + \r\n  scale_x_discrete(\"Visit\", labels = c(\"10\" = \"Baseline\",\r\n                                       \"20\" = \"Week 4\",\r\n                                       \"30\" = \"Week 8\",\r\n                                       \"40\" = \"Week 12\",\r\n                                       \"50\" = \"Week 16\",\r\n                                       \"60\" = \"Week 20\",\r\n                                       \"70\" = \"Week 24\"\r\n)) +\r\n  scale_y_continuous(\"Number of patients\") +\r\n  facet_grid(.~ TRT01P) +\r\n  ggtitle(label = \"Hemoglobin change across observation period was more variable in the control group\", subtitle = \"often fluctuating by more than 2g/dl\") +\r\n  theme(\r\n    plot.title = element_text(size = 28, face = \"bold\"),\r\n    plot.subtitle = element_text(size = 20, face = \"bold\"),\r\n    legend.title = element_text(size = 18),\r\n    legend.text = element_text(size = 18),\r\n    legend.key.size = unit(3, \"line\"))\r\n\r\nBack to blog\r\n\r\nExample 3. Lasagna Plot (R)\r\n\r\n\r\n####################################################################\r\n# Program name: hgb_lasagna_f.R\r\n# Purpose: To produce lasagna plot individual Hgb values at each\r\n#         visit (for Wonderful Wednesdays July 2020)\r\n# Written by: Steve Mallett\r\n# Date: 12-Jun-2020\r\n####################################################################\r\n\r\nlibrary(haven)\r\nlibrary(stringr)\r\nlibrary(dplyr)\r\nlibrary(tidyr)\r\nlibrary(ggplot2)\r\nlibrary(cowplot)\r\n\r\n# flag variables for Hgb changes since previous visit were added prior to import (using SAS)\r\n\r\nhgb1 <- read_sas(\"hgb_sim2.sas7bdat\") %>%\r\n  filter(TRT01PN == 1 & AVISITN != 10) %>%\r\n  mutate(id = as.numeric(str_extract(USUBJID, \"[^.]+$\")))\r\n\r\nplot01 <- ggplot() +\r\n  geom_raster(data = hgb1, aes(x=AVISITN, y=id, fill=factor(flag)),  interpolate = TRUE, hjust = 0, vjust = 0) +\r\n  scale_x_continuous(\" \",\r\n                     breaks=c(20, 30, 40, 50, 60, 70),\r\n                     labels=c(\"4\", \"8\", \"12\", \"16\", \"20\", \"24\"),\r\n                     limits=c(10, 70)) +\r\n  scale_y_continuous(\" \") +\r\n  scale_fill_manual(\r\n    values=c(\"#0066CC\", \"#99CCFF\", \"#E0E0E0\", \"#FF9999\", \"#CC0000\"), \r\n    name=\"Hgb \\nExcursion\\ng/dL\",\r\n    breaks=c(\"-2\", \"-1\", \"0\", \"1\", \"2\"),\r\n    labels=c(\"<-2\", \"<-1\", \"None\", \">1\", \">2\")\r\n    ) +\r\n  theme_minimal() +\r\n  theme(legend.position=\"none\",\r\n        text = element_text(size = 15),\r\n        axis.ticks.x = element_blank(),\r\n        axis.text.x =  element_text(size = 15),  \r\n        axis.text.y =  element_blank(),        \r\n        axis.ticks.y = element_blank(),\r\n        axis.title.x = element_text(size = 15),\r\n        plot.title = element_text(hjust = 0.5, size = 25),\r\n        panel.border = element_rect(colour = \"black\", fill=NA, size=0.25),\r\n        panel.grid = element_blank(),\r\n        plot.margin=unit(c(0,0,0,0),\"cm\")) +\r\n  ggtitle(label = \"Treatment: E\")\r\n\r\nhgb2 <- read_sas(\"hgb_sim2.sas7bdat\") %>%\r\n  filter(TRT01PN == 2 & AVISITN != 10) %>%\r\n  mutate(id = as.numeric(str_extract(USUBJID, \"[^.]+$\")))\r\n\r\nplot02 <- ggplot() +\r\n  geom_raster(data = hgb2, aes(x=AVISITN, y=id, fill=factor(flag)),  interpolate = TRUE, hjust = 0, vjust = 0) +\r\n  scale_x_continuous(\"Week\",\r\n                     breaks=c(20, 30, 40, 50, 60, 70),\r\n                     labels=c(\"4\", \"8\", \"12\", \"16\", \"20\", \"24\"),\r\n                     limits=c(10, 70)) +\r\n  scale_y_continuous(\" \") +\r\n  scale_fill_manual(\r\n    values=c(\"#0066CC\", \"#99CCFF\", \"#E0E0E0\", \"#FF9999\", \"#CC0000\"), \r\n    name=\"Hgb Change\\nSince Last Visit\\ng/dL\",\r\n    breaks=c(\"-2\", \"-1\", \"0\", \"1\", \"2\"),\r\n    labels=c(\"<-2\", \"<-1\", \"None\", \">1\", \">2\")\r\n  ) +\r\n  theme_minimal() +\r\n  theme(legend.position=\"bottom\",\r\n    text = element_text(size = 15),\r\n    axis.ticks.x = element_blank(),\r\n    axis.text.x =  element_text(size = 15),  \r\n    axis.text.y =  element_blank(),        \r\n    axis.ticks.y = element_blank(),\r\n    axis.text = element_text(size = 15),\r\n    axis.title = element_text(size = 20),\r\n    plot.title = element_text(hjust = 0.5, size = 25),\r\n    panel.border = element_rect(colour = \"black\", fill=NA, size=0.25),\r\n    panel.grid = element_blank(),\r\n    legend.title=element_text(size=15),\r\n    legend.text=element_text(size=15),\r\n    plot.margin=unit(c(0,0,0,0),\"cm\")) +\r\n  ggtitle(label = \"Treatment: C\")\r\n\r\np <- plot_grid(plot01, plot02, align = \"v\", nrow = 2, rel_heights = c(1, 1.19))\r\n\r\ntitle <- ggdraw() + draw_label(\"Lasagna Plot of Individual Haemoglobin\\n Changes Since Previous Visit\\n\", size = 25)\r\n\r\np2 <- plot_grid(title, p, ncol=1, rel_heights = c(1, 10))  \r\n\r\nggsave(\"hgb_lasagna_plot.png\", p2, width=12, height=12, dpi=300)\r\n\r\nBack to blog\r\n\r\nExample 4. Plot of Hgb Distribution Over Time (R)\r\n\r\n\r\n####################################################################\r\n# Program name: hgb_quantiles_f.R\r\n# Purpose: To produce plot summarising spread of Hgb values at each\r\n#         visit (for Wonderful Wednesdays July 2020)\r\n# Written by: Steve Mallett\r\n# Date: 12-Jun-2020\r\n####################################################################\r\n\r\nlibrary(haven)\r\nlibrary(dplyr)\r\nlibrary(tidyr)\r\nlibrary(ggplot2)\r\nlibrary(cowplot)\r\n\r\n# Get Hgb data (Group E)\r\n\r\nhgb1 <- read_sas(\"hgb_data.sas7bdat\") %>%\r\n  filter(TRT01PN == 1)\r\n\r\nquant1 <- hgb1 %>% group_by(AVISITN) %>%\r\n  do(quant = quantile(.$AVAL, probs = seq(0.2,0.8,.05)), probs = seq(0.2,0.8,.05)) %>%\r\n  unnest(cols=c(quant, probs)) %>%\r\n  mutate(delta = 2*round(abs(.5-probs)*100)) %>% \r\n  group_by(AVISITN, delta) %>%\r\n  summarize(quantmin = min(quant), quantmax= max(quant))\r\n\r\n# Derive median Hgb\r\n\r\nhgb_med1 <- hgb1 %>% \r\n  group_by(AVISITN) %>% \r\n  summarise(hgb.median = median(AVAL)) \r\n\r\n# Produce plot for group E\r\n\r\nplot01 <- ggplot() +\r\n  geom_ribbon(data = quant1, aes(x = AVISITN, ymin = quantmin, ymax = quantmax,\r\n                                    group = reorder(delta, -delta), fill = as.numeric(delta)),\r\n              alpha = .5) +\r\n  geom_line(data = hgb_med1, aes(x = AVISITN, y = hgb.median, color = \"dark blue\"), size = 2 ) +  \r\n  geom_segment(aes(x=10, xend=70, y=10, yend=10), linetype = 2, color = \"blue\") +\r\n  geom_segment(aes(x=10, xend=70, y=11.5, yend=11.5), linetype = 2, color = \"blue\") +\r\n  scale_x_continuous(\" \",\r\n                     breaks=c(10, 20, 30, 40, 50, 60, 70),\r\n                     limits=c(10, 70)) +\r\n  scale_y_continuous(\"Hgb (g/dL)\",\r\n                     breaks=c(8, 9, 10, 11, 12),\r\n                     limits=c(8, 12),\r\n                     ) +\r\n   scale_fill_gradient(low = \"#000080\",\r\n                       high = \"#87CEFA\",) +\r\n  scale_color_identity(name = \" \",\r\n                       guide=legend,\r\n                       labels = \" \") + \r\n  theme_minimal() +\r\n  theme(legend.position=\"none\",\r\n        axis.title.x=element_blank(),\r\n        axis.text.x=element_blank(),\r\n        axis.ticks.x=element_blank(),\r\n        axis.text.y.left =  element_text(color = 'blue'),        \r\n        plot.title = element_text(hjust = 0.5, size = 25),\r\n        text = element_text(size = 15),\r\n        axis.text = element_text(size = 20),\r\n        axis.title = element_text(size = 25),\r\n        panel.border = element_rect(colour = \"black\", fill=NA, size=1),\r\n        plot.margin=unit(c(1,0,0,0),\"cm\")) +\r\n  ggtitle(label = \"Treatment Group: E\")\r\n\r\n# Get Hgb data (control)\r\n\r\nhgb2 <- read_sas(\"hgb_data.sas7bdat\") %>%\r\n  filter(TRT01PN == 2)\r\n\r\nquant2 <- hgb2 %>% group_by(AVISITN) %>%\r\n  do(quant = quantile(.$AVAL, probs = seq(0.2,0.8,.05)), probs = seq(0.2,0.8,.05)) %>%\r\n  unnest(cols=c(quant, probs)) %>%\r\n  mutate(delta = 2*round(abs(.5-probs)*100)) %>% \r\n  group_by(AVISITN, delta) %>%\r\n  summarize(quantmin = min(quant), quantmax= max(quant))\r\n\r\n# Derive median Hgb\r\n\r\nhgb_med2 <- hgb2 %>% \r\n  group_by(AVISITN) %>% \r\n  summarise(hgb.median = median(AVAL)) \r\n\r\nplot02 <- ggplot() +\r\n  geom_ribbon(data = quant2, aes(x = AVISITN, ymin = quantmin, ymax = quantmax,\r\n                                    group = reorder(delta, -delta), fill = as.numeric(delta)),\r\n              alpha = .5) +\r\n  geom_line(data = hgb_med2, aes(x = AVISITN, y = hgb.median, color = \"dark blue\"), size = 2) + \r\n  geom_segment(aes(x=10, xend=70, y=10, yend=10), linetype = 2, color = \"blue\") +\r\n  geom_segment(aes(x=10, xend=70, y=11.5, yend=11.5), linetype = 2, color = \"blue\") +\r\n  scale_x_continuous(\"Week\",\r\n                     breaks=c(10, 20, 30, 40, 50, 60, 70),\r\n                     labels=c(\"0\", \"4\", \"8\", \"12\", \"16\", \"20\", \"24\"),\r\n                     limits=c(10, 70)) +\r\n  scale_y_continuous(\"Hgb (g/dL)\",\r\n                     breaks=c(8, 9, 10, 11, 12),\r\n                     limits=c(8, 12),\r\n                     ) +\r\n  scale_fill_gradient(\r\n                      low = \"#000080\",\r\n                      high = \"#87CEFA\") +\r\n  scale_color_identity(name = \"Median\",\r\n                       guide=legend,\r\n                       labels = \" \") + \r\n  labs(fill = \"Hgb (% patients in band)\") +\r\n  theme_minimal() +\r\n  theme(legend.position=\"bottom\",\r\n        plot.title = element_text(hjust = 0.5, size = 25),\r\n        text = element_text(size = 15),\r\n        axis.text = element_text(size = 20),\r\n        axis.title = element_text(size = 25),\r\n        axis.text.y.left =  element_text(color = 'blue'),\r\n        legend.text=element_text(size=14),\r\n        legend.title=element_text(size=20),\r\n        legend.key.size = unit(1.2, \"cm\"),        \r\n        panel.border = element_rect(colour = \"black\", fill=NA, size=1)) +\r\n  guides(colour = guide_legend(override.aes = list(size=3))) +\r\n  ggtitle(label = \"Treatment Group: C\")\r\n\r\np <- grid.arrange(arrangeGrob(plot01, ncol=1, nrow=1),\r\n                  arrangeGrob(plot02, ncol=1, nrow=1),\r\n                  heights = c(1,1.32))\r\n\r\ntitle <- ggdraw() + draw_label(\"Treatment E Stabilises Haemoglobin Within Target Range\\n With Reduced Variability\", size = 25)\r\n\r\np2 <- plot_grid(title, p, ncol=1, rel_heights = c(1, 10))  \r\n\r\nggsave(\"hgb_plot_quantiles.png\", p2, width=12, height=12, dpi=300)\r\n\r\nBack to blog\r\n\r\n\r\n",
    "preview": "posts/2020-09-20-wonderful-wednesdays-july-2020/./images/June_PSI_AW_v1_0.png",
    "last_modified": "2025-08-22T14:49:25+02:00",
    "input_file": {},
    "preview_width": 1268,
    "preview_height": 507
  },
  {
    "path": "posts/2020-09-11-wonderful-wednesdays-june-2020/",
    "title": "Wonderful Wednesdays June 2020",
    "description": "This month the discussion is about visualizations of the satisfaction data using cumulative distribution functions, a tree plot, staggered bar plots, a power BI dashboard and two interactive funnel plots using plotly and RShiny. These examples nicely demonstrate that different displays support different purposes. Some visualizations are telling a story about the data and others help to explore the data. Presented by Bodo Kirsch.",
    "author": [
      {
        "name": "Markus Vogler",
        "url": "https://www.psiweb.org/sigs-special-interest-groups/visualisation"
      }
    ],
    "date": "2020-06-10",
    "categories": [
      "Wonderful Wednesdays",
      "Subgroups",
      "Discrete endpoint"
    ],
    "contents": "\r\nThe example dataset for this month’s webinar was based on a survey of overall satisfaction performed in Germany in 2014 and published in 2016. The primary endpoint was overall satisfaction with life.\r\nThe question posed to the participants was: “How would you rate your satisfaction with your life overall on a scale from 0-10?”, where 10 means completely satisfied. There was only one observation per participant and no treatment groups, as no treatment was administered.\r\nThe objective of this survey was to explore the most relevant factors for satisfaction in life. Several factors, such as smoking status, working hours per week or number of doctor visits per year were collected. The dataset and its specification can be found here here. \r\nWe received a variety of submissions and we would like to thank everyone for their contributions. The visualizations that were presented during the June 2020 Wonderful Wednesday webinar are described below, with a few discussion points highlighted. To see the full discussion around each of the visualizations, check out the webinar recording in the PSI Video-on-Demand library. The subtitles contain the timestamps of the webinar recording, in case you would like to listen to the discussion around a specific visualization.\r\n\r\nExample 1. CDF plot (03:10 - 08:50)\r\nPlot 1link to codehigh-resolution image\r\nThe first submission discussed during this webinar was a cumulative distribution function (CDF) plot with the cumulative proportion of subjects on the vertical axis and the satisfaction with life on the horizontal axis. This horizontal axis has been reversed, ranging from highest satisfaction (10; on the left) to lowest satisfaction (0; on the right). This is also highlighted by the arrow labelled “Less satisified”, which is very helpful. The curves show the proportion of subjects reaching a certain level of satisfaction or higher. The difference between non-smokers and smokers can be clearly seen in this graph, with non-smokers being more satisfied with life than smokers. This message is also communicated in the title of the graph.\r\nThe graph is very well designed with little to no visual clutter, which helps to focus on the actual data. A suggestion for improvement would be to place the subgroup labels directly next to the lines and to use the same color for the subgroup labels that was used for the lines which would allow removing the legend symbols.\r\nTo further highlight the difference between the two groups, it could be helpful to fill the area between the two curves using the color of the more satisfied group (or vice versa). This could even be shown as an additional bar chart below this visualization. This would facilitate comparing subgroup differences at the various cut-offs.\r\nIn summary, this graph is very effective for communicating a simple and clear message and could be used in a presentation. It appears that the creator of this graph already went through the process of exploring the data to reach the conclusion that smoking status is a relevant factor for satisfaction of life. Examples for exploratory visualizations that could help with reaching such a conclusion were also submitted and are discussed further below.\r\n\r\nExample 2. Treeplot (08:50 - 12:10)\r\nPlot 2link to codehigh-resolution image\r\nThe second submission discussed during the webinar was a treeplot. The title contains the question that was posed to the participants and the subtitle describes that the tile sizes are proportional to the subgroup sizes. The mean satisfaction within subgroups is color-coded, as shown in the legend.\r\nThis plot gives a quick overview of the subgroups, allowing to see all the data visually in one place, which is great. The use of the font size could be improved. At first glance, it appears that it was coded with the data, but it seems it has more to do with the space constraints and the size of the tiles. For example, the font size for smoking status “N” and “Y” is the same but the size of the tiles indicates that the non-smoker group is much larger compared to the smoker group.\r\n\r\nExample 3. Bar plots (12:10 - 17:20)\r\nPlot 3link to codehigh-resolution image\r\nThe next visualization was specifically designed for a presentation. It starts of with a question (“How meaningful is a mean difference?”) and tries answering that question through a series of bar plots, looking at the data in different ways. This submission focuses on one single factor (smoking status), as already seen in the CDF plot above.\r\nThe first bar plot in the top left shows a statistically significant mean difference on an adapted scale from 6 to 8. In the top right we can see a very similar plot but this time on the complete scale from 0 to 10, which makes the magnitude of the difference appear much smaller. The stacked bar plot at the bottom shows a significant difference between the two response distributions instead of only comparing the means. Like the CDF plot, this visualization shows that non-smokers are performing better than smokers, regardless of the cut-off that is chosen.\r\nInterestingly, a divergent color scheme was used in the stacked bar chart. A suggestion to make the comparisons in the stacked bar chart even easier would be to add reference lines connecting the different areas/cut-offs.\r\nIn summary, this is a well thought through visualization example.\r\n\r\nExample 4. Power BI dashboard (17:20 - 26:45)\r\nPlot 4link to codehigh-resolution image\r\nThis submission is an interactive Power BI dashboard. The number of participants and overall mean is given in the top left. A stacked bar chart as well as a classic bar plot show the distribution of the satisfaction responses. The factors are shown in supplementary bar plots below. In these bar plots a subgroup can be selected and all the other plots will adapt automatically. Check out the recording of the webinar here (starting at 17:20) to see how the interactivity works in practice.\r\nThis can be a very useful and easy tool to explore the data, replacing many tables. The arrangement of the different tiles on the dashboard seems also well thought through, starting with the main results in the top left and finishing with the summary results in the bottom right.\r\nIt is not entirely clear why some of the bar plots are vertical while others are horizontal. A horizontal presentation can be useful when labels are long to increase readibility, however, a consistent approach could be chosen.\r\n\r\nExample 5. Funnel plot (26:45 - 37:20)\r\nPlot 5link to codehigh-resolution image\r\nThe next submission is an interactive visualization as well. In this funnel plot, each dot represents a subgroup estimate. This is the first visualization that does not only explore the factors in isolation, but also looks at all possible combination of subgroups. The overall mean with 95% prediction intervals is also shown. The vertical axis represents the average satisfaction ranging from 0 to 10 and the horizontal axis the subgroup size, i.e., larger subgroups are shown more to the right.\r\nThe name, the size and the mean of a specific subgroup becomes visible by hovering over a dot. This tool is specifically useful to explore extreme values. Check out the recording of the webinar here (starting at 26:45) to see how the interactivity works in practice.\r\nMost data points are squeezed towards the top left of the plot, given that the full scale is shown on both axes, causing a lot of white space. The visualization does include an interactive zooming option. A couple of other suggestions to allow zooming in are: 1) the subgroup size could be shown on a logarithmic scale; 2) apply a minimum threshold to the subgroup size because the very small subgroups are usually not of interest.\r\nAdditional interesting interactive tools could be: 1) highlight all subgroups related to a certain factor, e.g., all subgroups relevant for smoking status. This would allow quicker identification of relevant factors. 2) when hovering over one subgroup, the complement of this subgroup could be highlighted as well.\r\nIn summary, this is a great, innovative idea to explore subgroups.\r\n\r\nExample 6. Funnel plot (37:20 - 48:45)\r\nPlot 6link to codehigh-resolution image\r\nThis submission is similar to the funnel plot seen above but providing additional features, such as:\r\nSpecific subgroups can be highlighted. For example, by selecting the non-smokers, it becomes apparent that most subgroups including non-smokers lie above the mean reference line.\r\nThe shading of the dots is linked to the number of subgroup levels. The white dots represent single-level factors while the more transparent dots represent higher level subgroups. The number of subgroup levels displayed can also be controlled (e.g., only 1-factorial subgroups could be displayed).\r\nAll parent subgroups of a selected subgroup can be highlighted. This could be used to explore the driving factors among a combination of factors forming a subgroup.\r\nCheck out the recording of the webinar here (starting at 37:20) to see more details.\r\nCode\r\n\r\nExample 1. CDF plot (R)\r\n\r\n\r\n### Load packages\r\nlibrary(here)\r\nlibrary(tidyverse)\r\n\r\n### Load data\r\ndata <- data.frame(read_delim(here(\"Satisfaction_wW2005.csv\"), delim=';'))\r\ndata$smoker <- ifelse(data$smoker == \"Y\", \"Smoker\", ifelse(data$smoker == \"N\", \"Non-smoker\", NA))\r\n\r\n### Only keep non-missing data\r\ndata_nonmiss <- na.omit(data[, c(\"satisfaction\", \"smoker\")])\r\n\r\n### Derive number of subjects within subgroups\r\nn <- data_nonmiss %>% group_by(smoker) %>% summarize(n = n())\r\n  \r\n### Create label variable including number of subjects\r\ndata_n <- merge(data_nonmiss, n, by = \"smoker\")\r\ndata_n$group <- paste0(data_n$smoker, \" (n = \", data_n$n, \")\")\r\n  \r\n### Plot\r\nggplot(data = data_n, aes(x = satisfaction, colour = group)) +\r\n  stat_ecdf(size = 1, alpha = 0.5) +\r\n  theme_minimal(base_size = 15) +\r\n  scale_x_reverse(name = \"Satisfaction with life\", breaks = seq(0, 10, 1), minor_break = NULL) +\r\n  scale_y_continuous(name = \"Cumulative proportion of subjects\", breaks = seq(0, 1, 0.25), minor_break = NULL) +\r\n  scale_color_manual(name = NULL, values = c(\"#E7B800\", \"#2E9FDF\")) +\r\n  theme(legend.position = c(0.15, 0.85)) +\r\n  geom_segment(aes(x = 4.5, y = 0.5, xend = 2.5, yend = 0.5), colour = \"black\", size = 1, arrow = arrow(length = unit(0.5, \"cm\"))) +\r\n  annotate(\"text\", x = 3.5, y = 0.53, label = \"Less satisfied\", size = 5, colour = \"black\") +\r\n  ggtitle(\"Non-smokers more satisfied with life than smokers\") +\r\n  NULL\r\n\r\nggsave(file = here(\"cdf_smoker.png\"), width = 35, height = 20, units = \"cm\")\r\n\r\nBack to blog\r\n\r\nExample 2. Treeplot (R)\r\n\r\n\r\nlibrary(ggplot2)\r\nif (!require('treemapify')) install.packages('treemapify');\r\nif (!require('dplyr')) install.packages('dplyr');\r\nif (!require('RColorBrewer')) install.packages('RColorBrewer');\r\nlibrary(treemapify)\r\nlibrary(dplyr)\r\nlibrary(RColorBrewer)\r\n\r\n# read data\r\ndata <- read.csv(url('https://raw.githubusercontent.com/VIS-SIG/Wonderful-Wednesdays/master/data/2020/2020-05-13/Satisfaction_wW2005.csv'), na.strings = c(\".\", \"\"), header = TRUE)\r\n\r\nfoo_summarize<- function(dat = data, my_var = NULL, group_label = \"NA\"){\r\n    \r\n   suppressWarnings(\r\n     ans<- dat %>%\r\n        filter(!is.na(satisfaction)) %>%\r\n        group_by({{my_var}}) %>%\r\n        summarize(n = n(), \r\n                  mean_satisfaction = mean(satisfaction)) %>%\r\n        mutate(percent = n / sum(n)*100) %>%\r\n        mutate(group = group_label) %>%\r\n        rename(Variable = names(.)[1])\r\n   )\r\n  \r\n   return(ans)\r\n}\r\n\r\n#age\r\nd_age<- foo_summarize(dat=data, my_var=age, group_label = \"Age\")\r\nd_bmi<- foo_summarize(dat=data, my_var=bmi, group_label = \"BMI\")\r\nd_w_hours<- foo_summarize(dat=data, my_var=w_hours, group_label = \"Working hours\")\r\nd_todoctor<- foo_summarize(dat=data, my_var=todoctor, group_label = \"Doctor visits per year\")\r\nd_income<- foo_summarize(dat=data, my_var=income, group_label = \"Net income\")\r\nd_smoker<- foo_summarize(dat=data, my_var=smoker, group_label = \"Smoker\")\r\nd_gender<- foo_summarize(dat=data, my_var=gender, group_label = \"Gender\")\r\nd_employed<- foo_summarize(dat=data, my_var=employed, group_label = \"Employment status\")\r\nd_graduat<- foo_summarize(dat=data, my_var=graduat, group_label = \"Graduation\")\r\nd_graduat_f<- foo_summarize(dat=data, my_var=graduat_f, group_label = \"Graduation of father\")\r\nd_graduat_m<- foo_summarize(dat=data, my_var=graduat_m, group_label = \"Graduation of mother\")\r\nd_high_grad<- foo_summarize(dat=data, my_var=high_grad, group_label = \"Highest educational grade\")\r\nd_high_grad_f<- foo_summarize(dat=data, my_var=high_grad_f, group_label = \"Highest educational grade (father)\")\r\nd_high_grad_m<- foo_summarize(dat=data, my_var=high_grad_m, group_label = \"Highest educational grade (mother)\")\r\n\r\nd_all<- do.call(rbind, list(d_age, d_bmi, d_w_hours, d_todoctor, d_income, d_smoker, d_gender, d_employed, d_graduat,\r\n                            d_graduat_f, d_graduat_m, d_high_grad, d_high_grad_f, d_high_grad_m))\r\n\r\n# replace NA with a category: Missing. Only explanatory vars are affected. Response (satisfaction) has no missings\r\nd_all$Variable<- as.character(d_all$Variable)\r\nd_all$Variable[which(is.na(d_all$Variable))]<- \"Missing\"\r\n\r\n# create descrete response variable to display colors in the plot better\r\nd_all$satisfation_categories<- cut(d_all$mean_satisfaction, \r\n                                   breaks=seq(round(min(d_all$mean_satisfaction)), round(max(d_all$mean_satisfaction)), 0.5), \r\n                                   labels=c(\"(6,6.5]\", \"(6.5,7]\", \"(7,7.5]\", \"(7.5,8]\", \"(8,8-5]\", \"(8.5-9]\"), right = TRUE)\r\n\r\n# create response with label\r\nd_all$satisfaction_lab<- paste(d_all$Variable, \" (\", round(d_all$mean_satisfaction, 1), \")\", sep = \"\")\r\n\r\n# colors for plot\r\ncol_palette<- display.brewer.pal(n = 6, name = 'RdYlBu')\r\npalette<- brewer.pal(n = 6, name = 'RdYlBu')\r\n\r\n\r\n\r\n# plot\r\nggplot(d_all, aes(area=percent, label = Variable, fill = satisfation_categories, subgroup = group)) + \r\n            geom_treemap() + \r\n            geom_treemap_subgroup_border(size = 1.5, color = \"black\") +\r\n            geom_treemap_text(grow = T, reflow = T, place = \"topleft\", layout = \"scol\", min.size = 1,\r\n                              color = \"Darkblue\", size = 10) +\r\n            scale_fill_manual(values = palette) + \r\n            facet_wrap( ~ group) + \r\n            theme(legend.position = \"bottom\", \r\n                  legend.text = element_text(color=\"black\", size = 18), \r\n                  legend.title = element_text(size = 18),\r\n                  plot.title = element_text(size = 24),\r\n                  plot.subtitle = element_text(size = 20), \r\n                  plot.caption = element_text(size = 14),\r\n                  strip.text = element_text(size = 14, face = \"bold\", color = \"Darkblue\")) +\r\n            labs(title = 'How would you rate your satisfaction with your life overall on a scale from 0-10? (10=completely satisfied)',\r\n                 subtitle = 'Descriptive analysis by subgroup: tiles are proportional to rel. frequencies of the choices within a subgroup',\r\n                 caption =\"Created with ggplot2-treemapify\",\r\n                 fill = \"Mean Satisfaction\")\r\n\r\n\r\nggsave(\"treeplot_may2020.png\", width = 24, height = 12, units=\"in\", dpi = 300)\r\n\r\nBack to blog\r\n\r\nExample 3. Bar plots (R)\r\n\r\n\r\nlibrary(tidyverse)\r\nlibrary(Stack)\r\nlibrary(viridis)\r\nlibrary(IOHanalyzer)\r\nlibrary(car)\r\nlibrary(RColorBrewer)\r\ndisplay.brewer.all(colorblindFriendly = TRUE)\r\nlibrary(cowplot)\r\nlibrary(dgof)\r\n\r\n#Colour Scheme\r\nOrange <- \"#EF7F04\"\r\nGreen <- \"#68B937\"\r\nBlue <- \"#00A6CB\"\r\nGrey <- \"#4E5053\"\r\nDarkblue <- \"#003569\"\r\nYellow <- \"#FFBB2D\"\r\n\r\n#Load in data and make satisfaction and all other variables a factor. Also make a numeric version of satisfation for use late\r\nCohort <- read_csv('Cohort.csv') %>%\r\n  mutate(satisfaction = factor(satisfaction, level=c(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10))) %>%\r\n  mutate_all(factor) %>%\r\n  mutate(NumSat = as.numeric(satisfaction)) %>%\r\n  mutate(NumSat = NumSat-1) #To put it back on a 0-10 scale\r\n\r\n#Calculate means for the groups\r\nmeans <- Cohort %>%\r\n  group_by(smoker) %>% \r\n  summarise(\r\n    NumSat = mean(NumSat, na.rm = TRUE) \r\n  ) %>%\r\n  filter(!is.na(smoker)) #filter out the means for patients without a value for smoking (some implicit NA's)\r\n\r\n#Significance test of mean differences\r\nmodel <- lm(NumSat ~ smoker, data = Cohort)\r\nsummary(model)\r\n\r\n#test of distributions\r\nSmokerSat <- Cohort %>%\r\n  select(smoker, NumSat) %>%\r\n  filter(smoker==\"Y\")\r\n\r\nNonSmokerSat <- Cohort %>%\r\n  select(smoker, NumSat) %>%\r\n  filter(smoker==\"N\")\r\n\r\nKS <- ks.test(SmokerSat$NumSat, NonSmokerSat$NumSat)\r\n\r\n\r\n#Make plot of means, \r\np <- ggplot(means, aes(x=smoker, y=NumSat)) +\r\n  geom_bar(stat=\"identity\", fill=Darkblue, color=\"black\", xpd = FALSE) +\r\n  scale_y_continuous(name = \"Satisfaction (0-10)\") +\r\n  scale_x_discrete(name = \"Smoking History\", \r\n                   labels=c(\"Non-Smoker\",\"Current Smoker\"))\r\n\r\n\r\n#Fake plot for  aesthetic purporposes (remove the bar going below \"6\" on the chart with the reduced y axis)\r\n   #Start with fake dataset\r\nsmoker <- c(\"N\", \"Y\")\r\nNumSat <-c(6,6)\r\nfake.data <- data.frame(smoker,NumSat)\r\n\r\n\r\n# make plot 1 where the scale is changed to emphasize difference\r\nplot1 <- p+coord_cartesian(ylim=c(6,8.1))+\r\n  theme_classic() +\r\n  theme(line = element_blank()) +\r\n  geom_bar(data=fake.data,stat=\"identity\", fill=\"white\", color=\"white\") +  #Add a white rectangle below the \"6.0\" line using fake data\r\n  ggtitle(\"A statistically significant difference in Satisfaction between Non-smokers and Smokers \\n highlighted by using misleading axis... \\n\") +\r\n  theme (plot.title = element_text(family = \"sans\", color=Grey, face=\"bold\", size=14, hjust=0.5)) + #Edit font\r\n  annotate(\"segment\", x = \"N\", xend = \"Y\", y = 8.0, yend = 8.0,\r\n           colour = \"black\") +\r\n  annotate(\"segment\", x = \"N\", xend = \"N\", y = 8.0, yend = 7.9,\r\n           colour = \"black\") +\r\n  annotate(\"segment\", x = \"Y\", xend = \"Y\", y = 8.0, yend = 7.9,\r\n           colour = \"black\") + \r\n  annotate(\"segment\", x = 1.5, xend = 1.58, y = 8.0, yend = 8.1,\r\n           colour = \"black\") +\r\n  annotate(geom = \"text\", x = 1.6, y = 8.05, label = \"Significant!\", hjust = \"left\", vjust = \"bottom\", size = 6) +\r\n  annotate(geom = \"text\", x = 2.0, y = 8.05, label = \"(p<0.001)\", hjust = \"left\", vjust = \"bottom\", size = 2) \r\n  \r\n\r\n# make plot 2 which uses oringinal 0-10 scale\r\nplot2 <- p+coord_cartesian(ylim=c(0,10)) +\r\n  theme_classic() +\r\n  theme(line = element_blank()) + \r\n  ggtitle(\".. But when plotted using the 0-10 scale, the true (small) magnitude of \\n this difference is apparent \\n \") +\r\n  theme (plot.title = element_text(family = \"sans\", color=Grey, face=\"bold\", size=14, hjust=0.5)) + #Edit font\r\n  annotate(\"segment\", x = \"N\", xend = \"Y\", y = 9.6, yend = 9.6,\r\n           colour = \"black\") +\r\n  annotate(\"segment\", x = \"N\", xend = \"N\", y = 9.6, yend = 9.1,\r\n           colour = \"black\") +\r\n  annotate(\"segment\", x = \"Y\", xend = \"Y\", y = 9.6, yend = 9.1,\r\n           colour = \"black\") + \r\n  annotate(\"segment\", x = 1.5, xend = 1.33, y = 9.6, yend = 10,\r\n           colour = \"black\") +\r\n  annotate(geom = \"text\", x = 1.3, y = 9.8, label = \"Meaningful?\", hjust = \"right\", vjust = \"bottom\", size = 6) \r\n\r\n\r\n\r\n# make plot 3 - a staked bar chart to show distributional changes\r\nCohort$smoker %>% mutate(fct_reorder(smoker, NumSat, .fun=\"mean\"))\r\n\r\n\r\nplot3 <- ggplot(data=subset(Cohort, !is.na(smoker)), aes(y = reorder(smoker, NumSat))) +\r\n  geom_bar(aes(fill = satisfaction), position = position_fill(reverse = TRUE)) +\r\n  scale_fill_brewer(palette=\"BrBG\") +\r\n  guides(fill = guide_legend(nrow = 1)) +\r\n  ggtitle(\"Significant difference between the two response distributions \\n (D=0.14, p<.001)\") +\r\n  theme_classic() +\r\n  theme(line = element_blank()) +\r\n  theme(legend.position = \"bottom\", legend.box = \"horizontal\")+\r\n  xlab(\"Proportion of participants selecting each 'Satisfaction' value\") + \r\n  scale_y_discrete(name = \"Smoking History\", \r\n                   labels=c(\"Current Smoker\",\"Non-Smoker\")) +\r\n  scale_x_continuous(breaks = c(0, .25, .50, .75, 1.00))\r\n  ggtitle(\"The response distribution shows that smokers reported lower satisfaction scores (0-5) more often than non-smokers \\n and higher satisfaction scores (9-10) less often than non-smokers\") +\r\n  theme (plot.title = element_text(family = \"sans\", color=Grey, face=\"bold\", size=18, hjust=0.5))  #Edit font\r\n  \r\n#plot3 <- plot3 +  annotate(geom = \"curve\", x = 0.50, y = 2.60, xend = 0.65, yend = 2.45, \r\n#           curvature = -.25, arrow = arrow(length = unit(3, \"mm\"))\r\n#  ) +\r\n#  annotate(geom = \"text\", x = 0.5, y = 2.55, label = \"Significant difference in distributions \\n (D=0.14, p<.001)\", hjust = \"center\", size = 3)\r\n\r\n#design layout\r\n  # Make a title\r\ntitle <- ggdraw() + \r\n  draw_label(\r\n    \"How Meaningful is a Mean Difference?\",\r\n    fontface = 'bold',\r\n    x = 0,\r\n    hjust = 0,\r\n    size = 22\r\n  ) +\r\n  theme(\r\n    # add margin on the left of the drawing canvas,\r\n    # so title is aligned with left edge of first plot\r\n    plot.margin = margin(0, 0, 0, 7)\r\n  )\r\n\r\ntop_row <- plot_grid(plot1, plot2, labels = c(\"A\", \"B\"), align = \"h\")\r\nFaceted_graphs <- plot_grid(top_row, plot3, labels = c(' ', 'C'), label_size = 12, ncol = 1)\r\n\r\nplot_grid(title, Faceted_graphs,  \r\n          ncol = 1,\r\n          # rel_heights values control vertical title margins\r\n          rel_heights = c(0.1, 1)\r\n  )\r\n\r\nBack to blog\r\n\r\nExample 4. Power BI dashboard\r\n\r\n\r\nPSI survey\r\n\r\nhttps://app.powerbi.com/view?r=eyJrIjoiOTZkOTVkYTEtMzE3OC00YTAzLWIyZGYtODZhZWYwYzM5MzQ1IiwidCI6ImY1NTgwM2MzLTRmYTktNDIzMy1hOGFiLTIxM2I3ZWI3MjEzNCJ9\r\n\r\nBack to blog\r\n\r\nExample 5. Funnel plot (R)\r\n\r\n\r\n##### code for funnel plot for submittion\r\nlibrary(doParallel)\r\nlibrary(data.table)\r\nlibrary(plotly)\r\nlibrary(tidyverse)\r\n\r\ndata_transform <- function(x, \r\n                           labels = c(\"low\", \"high\"), \r\n                           except = NULL, \r\n                           threshold = 0.1, \r\n                           explicit_conv = NULL, \r\n                           explicit_conv_override = FALSE, \r\n                           binary_categories = FALSE, \r\n                           n_binary_categories=1, \r\n                           verbose = FALSE) {\r\n  \r\n  x_new <- x\r\n  cutoff <- floor(threshold * nrow(x_new)) # if number of unique values is less than 10% of overall dataset size, treat corresponding covariate as categorical\r\n  if(!is.null(explicit_conv) && explicit_conv_override){\r\n    cutoff <- Inf\r\n  }\r\n  for (column in colnames(x_new)[!colnames(x_new) %in% except]) {\r\n    fac <- as.factor(x[, column])\r\n    if ((nlevels(fac) > cutoff) || column %in% explicit_conv) {\r\n      if (!binary_categories) {\r\n        n_quant <- length(labels) # number of quantiles\r\n        quant <- quantile(x_new[, column], probs = 0:n_quant / n_quant, na.rm = TRUE)\r\n        if (verbose) {message(sprintf(\"Transforming %s to categorical using following quantiles\", column))}\r\n        if (verbose) {message(paste0(capture.output(quant), collapse = \"\\n\"))}\r\n        x_new[, column] <- cut(x_new[, column], quant, include.lowest = TRUE, labels = labels)\r\n      } else {\r\n        n_quant <- n_binary_categories+1 # number of quantiles\r\n        quant <- quantile(x_new[, column], probs = 0:n_quant / n_quant, na.rm = TRUE)\r\n        if (verbose) {message(sprintf(\"Transforming %s to binary categorical columns using following quantiles\", column))}\r\n        if (verbose) {message(paste0(capture.output(quant), collapse = \"\\n\"))}\r\n        for (j in 2:(length(quant) - 1)) {\r\n          x_new[, sprintf(\"%s_q%s\", column, substr(names(quant)[j], 1, 2))] <-\r\n            as.factor(cut(x_new[, column], c(quant[1], quant[j], quant[length(quant)]), include.lowest = TRUE, labels = FALSE))\r\n          levels(x_new[, sprintf(\"%s_q%s\", column, substr(names(quant)[j], 1, 2))]) <- c(0, 1)\r\n        }\r\n        # remove orignal column\r\n        x_new[, column] <- NULL\r\n      }\r\n    }\r\n    else if (typeof(x[, column]) != \"integer\") {\r\n      if (verbose) {message(sprintf(\"Convert %s to factors\", column))}\r\n      x_new[, column] <- as.factor(x[, column])\r\n    }\r\n  }\r\n  \r\n  return(x_new)\r\n}\r\n\r\n\r\n\r\n\r\nreturn_subgroups <- function(x, \r\n                             eval_fun, \r\n                             covs, \r\n                             packages=NULL, \r\n                             comb = 3, \r\n                             comb_lowerbound = 1, \r\n                             n_cores = 1, \r\n                             first_N = Inf, \r\n                             verbose = !(first_N==Inf)) {\r\n  \r\n  \r\n  \r\n  data_cov_comb <- function(vec, k, n = length(vec),verbose = FALSE) {\r\n    # returns all n over k combinations of elements in vec\r\n    # n should be size of vec and k<=n\r\n    if(verbose){message(sprintf(\"Computing %s combinations out of\",k))}\r\n    if(verbose){message(paste0(capture.output(vec), collapse = \"\\n\"))}\r\n    return(gtools::combinations(n, k, vec))\r\n  }\r\n  \r\n  \r\n  data_level_comb <- function(x, covs) {\r\n    # takes a dataframe x where every column is of type integer/factor and computes all combinations between all the levels of covariates specified in covs\r\n    return(tidyr::expand(x, x[covs]))\r\n  }\r\n  \r\n  compute_eval <- function(x, covs, eval_fun, first_N_active = FALSE) {\r\n    # computes the evaluation function on all subgroup combination of given covariates in covs (vector of strings)\r\n    # returns a list with number of entrys equal to the number of possible covariate level combinations.\r\n    # Each entry consits of two elements:\r\n    # first entry contains the filtered dataset containing only subgroup datapoints\r\n    # second entry contains single line dataframe output of eval_func augmented by subgroup labels\r\n    comb <- data_level_comb(x, covs)\r\n    \r\n    if (first_N_active) {\r\n      if (first_N_count <= nrow(comb)) {\r\n        comb <- comb[1:first_N_count, ]\r\n        first_N_count <<- 0\r\n      } else {\r\n        first_N_count <<- first_N_count - nrow(comb)\r\n      }\r\n    }\r\n    \r\n    subframes <- foreach(i = 1:nrow(comb)) %do% {\r\n      x_filtered <- x\r\n      for (j in 1:length(covs)) {\r\n        x_filtered <- dplyr::filter(x_filtered, x_filtered[covs[j]] == as.character(unlist(comb[i, j])))\r\n      }\r\n      result <- eval_fun(x_filtered)\r\n      result[covs] <- comb[i, ]\r\n      \r\n      return(result)\r\n    }\r\n    return(subframes)\r\n  }\r\n  \r\n  #check if provided covs are contained in x\r\n  for (name in covs) {\r\n    if (!(name %in% colnames(x))) {\r\n      stop(sprintf(\"Variable %s was not found in %s\", name, toString(substitute(x))))\r\n    }\r\n  }\r\n  \r\n  #turn on verbose if first_N != Inf \r\n  if (first_N!=Inf){verbose <- TRUE} \r\n  \r\n  cl <- makeCluster(n_cores)\r\n  registerDoParallel(cl)\r\n  \r\n  if(verbose){message(sprintf(\"Number of cores: %s\", getDoParWorkers()))}\r\n  \r\n  # computes the evaluation function on all subgroup combination of given covariates in covs (vector of strings) for 1,2 and 3 combinations(general: comb_lowerbound:comb)\r\n  if (first_N == Inf) {\r\n    results <- foreach(i = comb_lowerbound:comb, .combine = c) %do% {\r\n      covs_comb <- data_cov_comb(covs, i,verbose=verbose)\r\n      track_time <- system.time({\r\n        result <- foreach(j = lapply(as.list(1:dim(covs_comb)[1]), function(x) covs_comb[x[1],]), .combine = c, .packages = c(\"foreach\", packages)) %dopar% {\r\n          compute_eval(x, j, eval_fun)\r\n        }\r\n      })\r\n      if(verbose){message(paste0(capture.output(track_time), collapse = \"\\n\"))}\r\n      return(result)\r\n    }\r\n  } else {\r\n    if(verbose){message(sprintf(\"Computing first %d subgroups using single core\", first_N))}\r\n    first_N_count <<- first_N\r\n    results <- foreach(i = comb_lowerbound:comb, .combine = c) %do% {\r\n      covs_comb <- data_cov_comb(covs, i,verbose=verbose)\r\n      track_time <- system.time({\r\n        result <- foreach(j = 1:min(nrow(covs_comb), first_N), .combine = c, .packages=c(packages)) %do% {\r\n          if (first_N_count == 0) {\r\n            return()\r\n          }\r\n          res <- compute_eval(x, covs_comb[j, ], eval_fun, first_N_active = TRUE)\r\n        }\r\n      })\r\n      if(verbose){message(paste0(capture.output(track_time), collapse = \"\\n\"))}\r\n      return(result)\r\n    }\r\n  }\r\n  \r\n  stopCluster(cl)\r\n  \r\n  return(dplyr::bind_rows(results))\r\n}\r\n\r\n############################################################################################\r\n############# read data\r\ndat <- read.csv(\"./Satisfaction_wW2005.csv\") %>%\r\n  as.data.frame() %>% dplyr::select(-X, -ID) \r\n\r\n### global mean and se\r\ndat_mean <- mean(dat$satisfaction)\r\ndat_se <- sd(dat$satisfaction)/sqrt(nrow(dat))\r\ndat_sd <- sd(dat$satisfaction)\r\n\r\nfit <- function(x) {\r\n  cf1 <- tryCatch({\r\n    cf <- mean(x$satisfaction)\r\n    se <- sd(x$satisfaction)/sqrt(nrow(x))\r\n    c(cf, se,nrow(x))\r\n  },\r\n  warning = function(w) { #warning handling\r\n    NA\r\n  }, error = function(w) { #error handling\r\n    c(dat_mean,dat_se,0)\r\n  }\r\n  )\r\n  return(data.frame(av = cf1[1], se = cf1[2], N = cf1[3]))\r\n}\r\n\r\nsubgroups <- return_subgroups(dat, \r\n                              fit,\r\n                              comb = 3, \r\n                              comb_lowerbound = 1,\r\n                              covs = colnames(dat)[1:14],\r\n                              # first_N = 100, \r\n                              n_cores = 4,\r\n                              verbose = TRUE)\r\n# head(subgroups)\r\n\r\nnams <- names(subgroups)[-c(1:3)]\r\nsubgroups$text <- NULL\r\nsubgroups$text <- apply(subgroups, 1, function(x){\r\n  covs <- x[-c(1:3)]\r\n  ind <- which(!is.na(covs))\r\n  p1 <- NULL\r\n  for(i in 1:length(ind)){\r\n    p1 <- c(p1, sprintf(\"%s=%s\", nams[ind[i]], covs[ind[i]]))\r\n  }\r\n  p1 <- paste(p1, collapse=\",\")\r\n  p2 <- sprintf(\"|satisfaction=%.1f, N=%d\", as.numeric(x[1]),as.numeric(x[3]))\r\n  paste0(p1, p2)\r\n})\r\n\r\n\r\n## calculate dfs (assuming balance)\r\nn_start <- 2\r\nN <- n_start:nrow(dat)\r\nq95 <- qt(0.975, df= N - 1)\r\nci <- data.frame(N = N,\r\n                 lb = dat_mean - q95*dat_sd/sqrt(N),\r\n                 ub = dat_mean + q95*dat_sd/sqrt(N))\r\n\r\nfig <- subgroups %>% filter(N >= n_start) %>% \r\n  plot_ly(x = ~ N, y = ~av) %>%\r\n  add_markers(name = 'Subgroup Estimates',text = ~text, hoverinfo = \"text\",\r\n              color = I(\"blue\"), alpha=0.2)%>%\r\n  add_markers(x = nrow(dat), y = dat_mean,\r\n              name = 'Overall Estimates',text = I(paste0(\"satisfaction = \",round(dat_mean,2))), \r\n              hoverinfo = \"text\",color = I(\"red\"),alpha=0.2)%>%\r\n  add_lines(x = ~ ci$N, y = ~ ci$lb, name = 'Lower 95% PI', hoverinfo = 'skip', \r\n            color = I(\"black\"), alpha=0.5) %>%\r\n  add_lines(x = ~ ci$N, y = ~ ci$ub, name = 'Upper 95% PI', hoverinfo = 'skip', \r\n            color = I(\"black\"), alpha=0.5) %>%\r\n  add_lines(x = I(n_start:nrow(dat)), y = dat_mean, \r\n            name = \"Overall mean\",hoverinfo = 'skip', color = I(\"red\"),alpha=0.5) %>%\r\n  layout(xaxis = list(range = c(n_start,(nrow(dat)+4)),title = \"Subgroup size\"),\r\n         yaxis = list(range = c(1, 10),title = \"Average satisfication\"))\r\nfig\r\nhtmlwidgets::saveWidget(fig, \"./funnel_satisfaction.html\")\r\n\r\nBack to blog\r\n\r\nExample 6. Funnel plot (R)\r\n\r\n\r\n###############################################################################\r\n# Bayer AG\r\n# Study            :\r\n# Proj/Subst/GIAD  :\r\n###############################################################################\r\n# Name of program #############################################################\r\n# Name             : SGS_WW2005.R\r\n#\r\n# Purpose          : Run subgroup screening  \r\n# Programming Spec :\r\n# Validation Level : 1 - Verification by Review\r\n# R Version        : 4.0.0 (64 bit) on simulation server\r\n###############################################################################\r\n# Pre-conditions   : data source: ALLBUS dataset 2014/subset\r\n# Post-conditions  :\r\n# Comments         :\r\n###############################################################################\r\n# Author(s)        : Bodo Kirsch  03JUN2020\r\n# Reference prog   : SGS\r\n###############################################################################\r\n# Changed by       : \r\n# Reason           :\r\n###############################################################################\r\n\r\n\r\n\r\n### delete workspace\r\nrm(list=ls())\r\n\r\n\r\n### AutoSub and load libraries\r\n#setwd(\"c:/temp\")\r\n\r\n\r\nlibrary(shiny)\r\nlibrary(subscreen)\r\n\r\n\r\n### import data\r\nD=read.csv2(file=\"Data_wW2005.csv\", sep=\",\", dec=\".\", header=TRUE)\r\n\r\n\r\nauwe <- function(D){\r\n  \r\n    # --- satisfaction mean ----------------------------------------------------------------\r\n  \r\n      satisfact  <- round(mean(D$satisfaction, na.rm = TRUE), 2)   # TRUE:  NA values stripped before the computation proceeds\r\n      \r\n      number.of.subjects     <- sum(!is.na(D$satisfaction))\r\n  \r\n    return(data.frame(number.of.subjects, satisfact))\r\n}\r\n\r\n\r\nHH <- subscreencalc(data=D,\r\n           eval_function = auwe,\r\n           endpoints   = \"satisfaction\",  \r\n           treat       = \"\",            \r\n           subjectid   = \"ID\",\r\n           factors     = c(\"gender\", \"employed\", \"smoker\", \"graduat\", \"graduat_f\", \"graduat_m\", \r\n                           \"high_grad\", \"high_grad_f\", \"high_grad_m\", \"age\", \"w_hours\", \"todoctor\", \"bmi\", \"income\") ,\r\n           min_comb    = 1,\r\n           max_comb    = 3,\r\n           verbose     = T)\r\n\r\n\r\n\r\n#write.csv(HH$sge, file = \"Data_H.csv\", na=\"\")    \r\n\r\nsubscreenshow(HH, \r\n              host = \"0.0.0.0\", port = 1234)\r\n\r\nBack to blog\r\n\r\n\r\n",
    "preview": "posts/2020-09-11-wonderful-wednesdays-june-2020/./plots/cdf.png",
    "last_modified": "2025-08-22T14:49:25+02:00",
    "input_file": {},
    "preview_width": 4133,
    "preview_height": 2362
  },
  {
    "path": "posts/2020-09-10-wonderful-wednesday-april-2020/",
    "title": "Wonderful Wednesday April 2020",
    "description": "In this webinar we discuss the first submissions looking at some great ways to visualise a categorical response variable over time. We talk about what the SIG members like about each plot and give some pointers on areas we think could be improved. More specifically, we talk about: the value of a title with conclusions, the use of colour, the benefits of animation to display time, ways to declutter your graph and examples of clean design, enclosure to highlight important parts of the data, the benefits of the sankey diagram, how different charts help to answer different questions, and many more aspects of great visualizations.",
    "author": [
      {
        "name": "Rachel Phillips, Steve Mallett",
        "url": "https://www.psiweb.org/sigs-special-interest-groups/visualisation"
      }
    ],
    "date": "2020-04-09",
    "categories": [
      "survival data",
      "Kaplan-Meier",
      "Wonderful Wednesdays"
    ],
    "contents": "\r\nThis month’s challenge involved a classic survival dataset example. You can download the dataset here. This simulated example dataset was based on a phase III clinical trial in breast cancer, you can read more about this study here. To summarise, this was a four-arm study, where participants were randomised to receive either one of two monotherapies or one of two combination therapies for 1 year with 4 years post treatment follow-up. The primary outcome was progression free survival and we wanted you to explore different ways of visualising this time-to-event outcome. The dataset contained information that allowed you to explore subgroups, patterns of events and individual patient profiles. More information on the dataset is available here.\r\nWe received a variety of submissions in this round including both static and interactive plots and we would like to thank everyone for their contributions. In the webinar members of the VIS SIG discussed the merits of each and picked out key elements they felt would make the ‘ultimate plot’. We summarise the discussions for each submission below.\r\n\r\nExample 1\r\nPlot 1link to codehigh-resolution image\r\nOn the left this plot displays the proportion of participants that are event free over time by treatment arm and on the right we can see the cumulative number of events over time by treatment arm. Inclusion of both of these figures into one image gives a view of the data which we don’t often see. Inclusion of uncertainty is also not often seen in Kaplan-Meier plots (but has been advocated in this recent publication from Morris et al.) but is extremely useful and the clutter from the overlap of the confidence bands is perhaps less problematic with inclusion of the cumulative plot on the right. The team liked the inclusion of the tables of numbers at risk and the cumulative number of events at the bottom of each plot, this is important information, and we felt this approach didn’t overload or create a cluttered image. We thought there was a nice use of colour.\r\nWhilst there is clear labelling of the axis and the inclusion of a common legend ensures clarity this image would benefit from inclusion of some extra details to allow it to stand-alone, for example it would benefit from inclusion of a title. In terms of creating a clearer image we also felt that the dashes to indicate censoring in the image on the left could be omitted given the information on numbers at risk are available at the bottom of the plot.\r\nThis is a nice example of an exploratory type plot that statisticians can use to understand the data but if the aim is to communicate a message to stakeholders then we would suggest presenting less information in a simpler graphic.\r\n\r\nExample 2\r\nPlot 2link to codehigh-resolution image\r\nThis presentation of the data displays the cumulative proportion of participants experiencing an event. It includes a separate plot for each treatment arm and the inclusion of subtitles ensures clarity. This plot is being used to tell a story, which the title guides us towards. Inclusion of a reference line at an important time point is helpful to guide the audience’s attention. Labelling the x and y-axis only once prevents clutter and in combination with the inclusion of the reference lines makes this a clear presentation of the data. This demonstrates an effective use of graduation of saturation and clear annotation.\r\nThe team noted that there are six colours of grey in the legend but that it was difficult to pick out all six groups in the image. This was because one of the groups is very small. However, it’s tricky to pick out which group this is so we caution potential users to be mindful of this in their own plots.\r\nThis is an original, well thought through presentation of survival data which we commend and think would work well where the is a natural ordering of the groups.\r\n\r\nExample 3\r\nPlot 3link to codehigh-resolution image\r\nThis is a very nice, interactive visual presentation of a growing or developing Kaplan-Meier plot link. This image included some really nice design points that update as the image progresses that can help to tell a story. These included:\r\nThe percentages on right y-axis changing as the video plays,\r\nThe inclusion of an additional x-axis at the top of the plot that is populated as it progresses,\r\nThe developing reference lines that follow the data as the plot progresses.\r\nThe team felt that this interactive approach could help understanding and interpretation amongst those not so familiar with Kaplan-Meier plots. It’s a potentially useful way to force the viewer to take the entire time period into consideration and not just the final time point when there is often the most uncertainty.\r\nWith some additional information on the right y-axis such as estimates of treatment effects this could be a really powerful design choice. A minor point was that it would be nice to include treatment labels with the numbers on the right y-axis so the audience do not have to keep referring back to the legend as the image progresses.\r\n\r\nExample 4\r\nPlot 4link to codehigh-resolution image\r\nThis is a very flexible tool to display Kaplan-Meier plots that explores the subgroup element of the challenge link. It allows the user to change what is presented e.g. displaying information on different treatment groups, different subgroups, or restricting information presented by the age range of participants. Including the legend within the plot and use of grid lines both help audiences to interpret this image.\r\nThis is a nice way to present the data for exploratory purposes. It would be nice to include sample sizes and confidence intervals within this tool to represent the uncertainty and minimise the risk of making incorrect conclusions.\r\n\r\nExample 5\r\nPlot 5link to codelink to html filehigh-resolution image\r\nThe use of a heat map to present survival data is a new idea to the group. At first some of us found it difficult to understand but with some thought it definitely becomes clearer. Given the novelty of this plot it probably needs more information to explain what is going on but could be very useful to help deliver a message to audiences. Inclusion of a clear message in the title and the ordering of the data in a way that the image portrays this really helps i.e. the white stripe representing the median helps show differences between treatment arms.\r\nAs well as a ‘big picture’ message from the changes in colour there is also an interactive element to this plot allowing more detailed information to be provided, as the user hovers over different points on the plot information on the survival function at that time point is displayed. Similarly hovering over the reference lines displays further information.\r\n\r\nExample 6\r\nPlot 6link to codehigh-resolution image\r\nThis image displays a Kaplan-Meier plot for each treatment arm with accompanying confidence bands with inclusion of other treatment arms in grey for comparison. This is simple, clear plot exhibiting use of good data visualisation principles. We liked the clear message in the title, inclusion of numbers at risk for each plot rather than in a table and the use of grid lines. The team felt that this plot would be good for communicating a message.\r\nMinor adjustments we recommend are: including a more prominent grid line at 52 weeks, including a legend clearly explaining what the red line and reference bands are and changing the scale from days to weeks or months.\r\nCode\r\n\r\nExample 1 (R)\r\n\r\n\r\n### Purpose: create TTE KM plots\r\n\r\n### Load packages\r\nlibrary(readr)\r\nlibrary(survival)\r\nlibrary(survminer)\r\nlibrary(stringr)\r\n\r\n### Load data\r\nsetwd('C:/Users/XXXXXXXXXXXXX')\r\nADTTE <- read_delim('2020-04-08-psi-vissig-adtte.csv', delim=';')\r\n\r\n### AVAL is given in days; transform into weeks\r\nADTTE$AVAL_wk = ADTTE$AVAL / 7\r\n\r\n### Create survival curves\r\nsurv_curve <- survfit(Surv(AVAL_wk, CNSR == 0) ~ TRT01P, data = ADTTE)\r\n\r\n### Adjust treatment group labels in surv_curve\r\nnames(surv_curve$strata) <- str_remove(names(surv_curve$strata), \"TRT01P=\") \r\n\r\n### Theme for plots\r\ntheme_table <- theme_minimal(base_size = 18) %+replace% \r\n  theme(panel.grid.major.x = element_blank(), panel.grid.minor.x = element_blank(),  # remove vertical gridlines\r\n        panel.grid.major.y = element_blank(),  # remove horizontal gridlines\r\n        axis.title.y = element_blank(), axis.title.x = element_blank(),  # remove axis titles\r\n        axis.text.x = element_blank(), axis.ticks.x = element_blank())  # remove x-axis text and ticks\r\n\r\ntheme_gg <- theme_minimal(base_size = 18) %+replace% \r\n  theme(panel.grid.minor.y = element_blank(), panel.grid.minor.x = element_blank(),  # remove minor gridlines\r\n        legend.title = element_blank())  # remove legend title\r\n\r\n### Plot \r\nplots <- list()\r\n# Proportion event-free\r\nplots[[1]] <- ggsurvplot(fit = surv_curve,  # survfit object\r\n                         data = ADTTE,  # data used to fit survival curves. \r\n                         break.y.by = 0.2,  # y-axis breaks\r\n                         risk.table = T,  # show risk table.\r\n                         conf.int = T,  # show confidence intervals\r\n                         xlim = c(0, 160),  # present narrower X axis\r\n                         break.time.by = 20,  # x-axis breaks\r\n                         ggtheme = theme_gg,  # use theme defined above\r\n                         risk.table.y.text = F, # show bars instead of names in text annotations in legend of risk table\r\n                         xlab = \"Week\",\r\n                         ylab = \"Proportion event-free\",\r\n                         legend = c(0.7, 0.15),  # legend position\r\n                         tables.theme = theme_table)  # use them defined above for risk table\r\n\r\n# Cumulative proportion with event\r\nplots[[2]] <- ggsurvplot(fit = surv_curve,\r\n                         data = ADTTE,\r\n                         fun = \"event\",  # show event probability instead of survival probability\r\n                         ylim = c(0, 0.6),  # do not include full scale (0-1) to allow to better discriminate between treatments\r\n                         break.y.by = 0.1,\r\n                         cumevents = T,  # show cumulative number of events\r\n                         conf.int = F,\r\n                         xlim = c(0, 160),\r\n                         break.time.by = 20,\r\n                         ggtheme = theme_gg,\r\n                         cumevents.y.text = FALSE,\r\n                         xlab = \"Week\",\r\n                         ylab = \"Cumulative proportion with event\",\r\n                         legend = \"none\",\r\n                         tables.theme = theme_table)\r\n\r\n# Save plot\r\nggsave(filename = \"2020-04-08-markusv_km.png\",\r\n       plot = arrange_ggsurvplots(plots, print = T, ncol = 2, nrow = 1),\r\n       width = 19.3, height = 9, units = \"in\")\r\n\r\n\r\n\r\nBack to blog\r\n\r\nExample 2 (R)\r\n\r\n\r\n### Purpose: create TTE area plot\r\n\r\n### Load packages\r\nlibrary(readr)\r\nlibrary(dplyr)\r\nlibrary(ggplot2)\r\nlibrary(zoo)\r\n\r\n### Load data\r\nsetwd('C:/Users/XXXXXXX')\r\nADTTE <- read_delim('2020-04-08-psi-vissig-adtte.csv', delim=';')\r\n\r\n### AVAL is given in days; transform into weeks\r\nADTTE$AVAL_wk = ADTTE$AVAL / 7\r\n\r\n### Derive number of subjects per treatment group\r\nADTTE_ntrt <- ADTTE %>% group_by(TRT01PN, TRT01P) %>% mutate(N=n())\r\n\r\n### Derive cumulative number (percentage) of subjects with event / censoring\r\nADTTE_cum <- ADTTE_ntrt %>% group_by(TRT01PN, TRT01P, N, EVNTDESC, AVAL_wk) %>% \r\n  summarise(n = n()) %>% mutate(n = cumsum(n), pct = n / N)\r\n\r\n### Create grid to ensure all groups have a value at each timepoint (necessary for geom_area())\r\ngrid <- with(ADTTE_cum, expand.grid(TRT01PN = unique(TRT01PN), EVNTDESC = unique(EVNTDESC), \r\n                                    AVAL_wk = unique(AVAL_wk)))\r\nADTTE_grid <- merge(grid, ADTTE_cum, by = c(\"TRT01PN\", \"EVNTDESC\", \"AVAL_wk\"), all = T)\r\n\r\n### Fill in NA values with last non-NA value and remove leading NA rows\r\nADTTE_locf <- ADTTE_grid %>% group_by(TRT01PN, EVNTDESC) %>% do(na.locf(.))\r\n\r\n### Control order (show events at bottom and censoring above)\r\nADTTE_locf$EVNTDESC <- factor(ADTTE_locf$EVNTDESC, levels = c(\"Lost to follow-up\", \"No next-line therapy initiated\",\r\n                                                              \"Second next-line therapy initiated\",\r\n                                                              \"Ongoing on first next-line therapy\", \"PD\", \"Death\"))\r\n\r\n### Add N to treatment label and order by TRT01PN\r\nADTTE_locf$TRT01P_label <- with(ADTTE_locf, paste0(TRT01P, \" (N=\", N, \")\"))\r\nADTTE_locf$TRT01P_label <- reorder(ADTTE_locf$TRT01P_label, ADTTE_locf$TRT01PN)\r\n\r\n### Stacked area chart\r\nggplot(data = ADTTE_locf, aes(x = AVAL_wk, y = pct, fill = EVNTDESC)) +\r\n  geom_area(alpha = 0.6) +\r\n  facet_wrap(TRT01P_label ~ .) +\r\n  scale_x_continuous(limits = c(0, 160), breaks = seq(0, 160, by = 20), name = \"Week\") +\r\n  scale_y_continuous(limits = c(0, 1), breaks = seq(0, 1, by = 0.2), \r\n                     name = \"Cumulative proportion with event / censoring\", expand = c(0, 0)) +\r\n  geom_vline(xintercept = 52, alpha = 0.3) +\r\n  theme_minimal(base_size = 18) +\r\n  scale_fill_grey(start = 0.8, end = 0.2) +\r\n  theme(legend.position = c(0.15, 0.85), legend.title = element_blank(),  # remove legend title and set legend position\r\n        panel.grid.major.x = element_blank(), panel.grid.minor.x = element_blank(),  # remove vertical gridlines\r\n        panel.grid.minor.y = element_blank()) +  # remove horizontal minor gridlines\r\n  ggtitle(\"Combination of tablemab + vismab leads to less deaths during first 52 weeks of study treatment\")\r\n\r\nggsave(filename = \"2020-04-08-markusv_area.png\", width = 19.3, height = 9, units = \"in\")\r\n\r\n\r\n\r\nBack to blog\r\n\r\nExample 3 (SAS)\r\n\r\nfilename urlFile url 'https://raw.githubusercontent.com/VIS-SIG/Wonderful-Wednesdays/master/data/2020/2020-04-08/2020-04-08-psi-vissig-adtte.csv';\r\n*--------------------------------\r\nImport Procedure\r\n---------------------------------;\r\n\r\n\r\ndata ADTTE \r\n    (label='Time-to-Event'\r\n     compress=yes\r\n);\r\n\r\ninfile urlFile \r\n  delimiter = ',' \r\n  missover \r\n  dsd \r\n  lrecl=32767 \r\n  firstobs=2;\r\nattrib \r\n    STUDYID length=$20 format=$20. informat=$20. label='the study identifier'\r\n    SUBJID length=8 format=8. informat=8. label='subject identifier'\r\n    USUBJID length=$40 format=$40. informat=$40. label='unique subject iddentifier'\r\n    AGE length=8 format=8. informat=8. label='age at randomisation (years)'\r\n    STR01 length=$8 format=$8. informat=8. label='Hormone receptor status at randomisation'\r\n    STR01N length=3 format=3. informat=3. label='Hormone receptor positive (Numeric)'\r\n    STR01L length=$30 format=$30. informat=$30. label='Hormone receptor positive (Long format)'\r\n    STR02 length=$30 format=$30. informat=$30. label='Prior Radiotherapy at randomisation'\r\n    STR02N length=3 format=3. informat=3. label='Prior Radiotherapy at randomisation (Numeric)'\r\n    STR02L length=$40 format=$40. informat=$40. label='Prior Radiotherapy at randomisation (Long format)'\r\n    TRT01P length=$40 format=$40. informat=$40. label='Planned treatment assigned at randomisation'\r\n    TRT01PN length=8 format=8. informat=8. label='Planned treatment assigned at randomisation (Numeric)'\r\n    PARAM length=$40 format=$40. informat=40. label='Analysis parameter - Progression free survival'\r\n    PARAMCD length=$10 format=$10. informat=$10. label='Analysis parameter code'\r\n    AVAL length=8 format=8. informat=8. label='Analysis value (time to event [days])'\r\n    CNSR length=3 format=3. informat=3. label='Censoring (0 = Event, 1 = censored)'\r\n    EVNTDESC length= $34 format=$34. informat=$34. label='Event description'\r\n    CNSDTDSC length=$33 format=$33. informat=$34. label='Censoring description'\r\n    DCTREAS length=$25 format=$25. informat=34. label='Discontinuation from study reason'\r\n;\r\ninput\r\n  STUDYID SUBJID USUBJID AGE STR01 STR01N STR01L    \r\n  STR02 STR02N STR02L   TRT01P TRT01PN PARAM PARAMCD    \r\n  AVAL CNSR EVNTDESC CNSDTDSC DCTREAS;\r\nrun;\r\n\r\n\r\ndata TIME_TO_EVENT\r\n( keep =  Patient Age_at_Start Age_Group Age_at_End Survival_Days Survival_Weeks\r\n          Full_Years Hormone_Receptor_Status Prior_Radiotherapy\r\n        Treatment_No Treatment Censoring Death Discontinuation Discontinuation_Reason\r\n);\r\n\r\nattrib\r\n    Patient length=8 \r\n    Age_at_Start length=8\r\n    Age_Group length=$5\r\n    Age_at_End length=8\r\n    Survival_Days length=8 label='Survival Days'\r\n    Full_Years length=8\r\n    Hormone_Receptor_Status length=$8 \r\n    Prior_Radiotherapy length=$1\r\n    Treatment_No length=8\r\n    Treatment length=$40\r\n    Censoring length=8\r\n    Death length=8\r\n    Discontinuation length=$1\r\n    Discontinuation_Reason length=$25 \r\n;\r\nset RECD.ADTTE;\r\n\r\n    Patient = SUBJID;\r\n    Age_at_Start = AGE;\r\n    Survival_Days = AVAL;\r\n    Survival_Weeks = int(Survival_Days/7);\r\n    Full_Years = int(Survival_Days/365.25);\r\n    Age_at_End = Age_at_Start + Full_Years;\r\n    Hormone_Receptor_Status = STR01;\r\n    Prior_Radiotherapy = ifc(STR02N=1,'Y','N');\r\n    Treatment_No = TRT01PN;\r\n    Treatment = TRT01P;\r\n    Censoring = CNSR;\r\n    Death = ifc(EVNTDESC = 'Death',1,0);\r\n    Discontinuation = ifc(DCTREAS = 'NA','N','Y');\r\n    Discontinuation_Reason = propcase(DCTREAS);\r\n\r\n    if Discontinuation = 'N' then Discontinuation_Reason = 'Not applicable';\r\n\r\n    if Age_at_Start <= 50 then Age_Group = '25-50';\r\n    else if 51 <= Age_at_Start <= 60 then Age_Group = '51-60' ;\r\n    else if 61 <= Age_at_Start <= 70 then Age_Group = '61-70' ;\r\n    else if 71 <= Age_at_Start <= 80 then Age_Group = '71-80' ;\r\n    else  Age_Group = '81+' ;\r\nrun;\r\n\r\n\r\nods _all_ close;\r\nods graphics on;\r\n\r\nods output Survivalplot=SurvivalPlotData;\r\nproc lifetest data=TIME_TO_EVENT plots=survival(atrisk=0 to 2000 by 10); \r\n    time Survival_Days * Death(0);\r\n    strata Treatment/ test=logrank adjust=sidak;\r\nrun; \r\n\r\n\r\n\r\n\r\n\r\n\r\nproc sql;\r\ncreate table time\r\nas\r\nselect distinct time\r\nfrom SurvivalPlotData;\r\nquit;\r\n\r\n\r\ndata time;\r\nset time end=eof;\r\ni=_n_;\r\nif eof then call symput('n',_n_);\r\nrun;\r\n\r\n\r\n%macro km;\r\n%do i=1 %to &n+10;\r\n\r\nproc sql noprint;\r\nselect max(Time) into: Time\r\nfrom Time\r\nwhere i <= &i.;\r\nquit;\r\n\r\ndata SPD;\r\nset SurvivalPlotData (where=(Time le &Time.));\r\nrun;\r\n\r\nproc sql;\r\ncreate table Survival_Pct\r\nas\r\nselect      StratumNum,\r\n            min(Survival) as Survival,\r\n            compress(put(min(Survival),percent8.1)) as Survival_txt\r\nfrom        SPD \r\nwhere       Survival not=.\r\ngroup by    StratumNum;\r\nquit;\r\n\r\ndata _null_;\r\nset Survival_Pct;\r\nif StratumNum = 1 then do;\r\n    call symput('Trt_val_1',Survival);\r\n    call symputx('Trt_txt_1',Survival_txt);\r\nend;\r\nif StratumNum = 2 then do;\r\n    call symput('Trt_val_2',Survival);\r\n    call symputx('Trt_txt_2',Survival_txt);\r\nend;\r\nif StratumNum = 3 then do;\r\n    call symput('Trt_val_3',Survival);\r\n    call symputx('Trt_txt_3',Survival_txt);\r\nend;\r\nif StratumNum = 4 then do;\r\n    call symput('Trt_val_4',Survival);\r\n    call symputx('Trt_txt_4',Survival_txt);\r\nend;\r\nrun;\r\n\r\ntitle j=center font=calibri height=10pt \"Survival Day = &Time\";\r\nproc sgplot data=SPD noborder nowall;\r\n styleattrs datacontrastcolors=(CX003469 CX69b937 CXef7d04 CX00a6cb);\r\n step x=time y=survival / group=stratum name='s';\r\n  scatter x=time y=censored / markerattrs=(symbol=plus) name='c';\r\n  scatter x=time y=censored / markerattrs=(symbol=plus) GROUP=stratum;\r\n\r\n  keylegend 'c' / location=inside position=topright valueattrs = (family=calibri size=10pt);\r\n  keylegend 's' / linelength=20 valueattrs = (family=calibri size=10pt);\r\n  xaxis\r\n    values = (0 to 2000 by 30)\r\n    valueattrs = (family=calibri size=10pt) \r\n    labelattrs = (family=calibri size=10pt) \r\n    label = 'x - Survival Days / y - *Survival Probability'\r\n  ;\r\n  yaxis \r\n    valueattrs = (family=calibri size=10pt) \r\n    labelattrs = (family=calibri size=10pt) \r\n    values = (0 to 1 by 0.1)\r\n    labelpos = top\r\n    label='*'\r\n  ;\r\n\r\n%if &Time. ge 84 %then %do;\r\nrefline 84 / axis=x \r\n    lineattrs=(pattern=dash color=lightgrey) label='12 Weeks' labelattrs=(family=calibri size=10pt);\r\n%end;\r\n\r\n%if &Time. ge 365 %then %do;\r\nrefline 365 / axis=x \r\n    lineattrs=(pattern=dash color=lightgrey) label='52 Weeks / 1 Year' labelattrs=(family=calibri size=10pt);\r\n%end;\r\n\r\n%if &Time. ge 730 %then %do;\r\nrefline 730 / axis=x  \r\n    lineattrs=(pattern=dash color=lightgrey) label='2 Years' labelattrs=(family=calibri size=10pt);\r\n%end;\r\n\r\n%if &Time. ge 1095 %then %do;\r\nrefline 1095 / axis=x \r\n    lineattrs=(pattern=dash color=lightgrey) label='3 Years' labelattrs=(family=calibri size=10pt)  ;\r\n%end;\r\n\r\n%if &Time. ge 1461 %then %do;\r\nrefline 1461 / axis=x \r\n    lineattrs=(pattern=dash color=lightgrey) label='4 Years' labelattrs=(family=calibri size=10pt)  ;\r\n%end;\r\n\r\n%if &Time. ge 1826 %then %do;\r\nrefline 1826 / axis=x \r\n    lineattrs=(pattern=dash color=lightgrey) label='5 Years' labelattrs=(family=calibri size=10pt)  ;\r\n%end;\r\n\r\nrefline &Trt_val_1. / axis=y\r\n    lineattrs=(pattern=thindot color=CX003469) label=\"&Trt_txt_1\" labelattrs=(family=calibri size=10pt color=CX003469);\r\n\r\nrefline &Trt_val_2. / axis=y\r\n    lineattrs=(pattern=thindot color=CX69b937) label=\"&Trt_txt_2\" labelattrs=(family=calibri size=10pt color=CX69b937);\r\n\r\nrefline &Trt_val_3. / axis=y\r\n    lineattrs=(pattern=thindot color=CXef7d04) label=\"&Trt_txt_3\" labelattrs=(family=calibri size=10pt color=CXef7d04);\r\n\r\nrefline &Trt_val_4. / axis=y\r\n    lineattrs=(pattern=thindot color=CX00a6cb) label=\"&Trt_txt_4\" labelattrs=(family=calibri size=10pt color=CX00a6cb);\r\nrun;\r\n\r\ntitle;\r\n\r\n\r\n%end;\r\n%mend;\r\n\r\n/* Create the combined graph. */\r\n\r\n\r\noptions papersize=a4 printerpath=gif animation=start animduration=0.05 animloop=no noanimoverlay nodate nonumber spool;\r\nods printer file=\"c:\\temp\\KM_Treatment.gif\";\r\n\r\nods graphics / width=10in height=10in  scale=on imagefmt=GIF;\r\n%km;\r\n\r\noptions printerpath=gif animation=stop;\r\nods printer close;\r\n\r\nBack to blog\r\n\r\nExample 4 (R and readme.txt)\r\n\r\n\r\n## PSI_April_KM_v1_0\r\n\r\n## load in packages\r\nlibrary(shiny)\r\nlibrary(shinyWidgets)\r\nlibrary(tidyverse)\r\nlibrary(shinycssloaders)\r\nlibrary(broom)\r\nlibrary(survival)\r\nlibrary(survminer)\r\nlibrary(plotly)\r\n\r\n\r\ntick <- icon(\"check\")\r\n\r\nOrange <- \"#EF7F04\"\r\nGreen <- \"#68B937\"\r\nBlue <- \"#00A6CB\"\r\nGrey <- \"#4E5053\"\r\nDarkblue <- \"#003569\"\r\nYellow <- \"#FFBB2D\"\r\n\r\nADTTE <- read_csv('2020-04-08-psi-vissig-adtte_v2.csv')\r\n\r\nADTTE$EVNTDESC <- as.factor(ADTTE$EVNTDESC)\r\nADTTE$STR01L <- as.factor(ADTTE$STR01L)\r\nADTTE$STR02L <- as.factor(ADTTE$STR02L)\r\nADTTE$TRT01P <- as.factor(ADTTE$TRT01P)\r\nADTTE$AGE <- as.integer(ADTTE$AGE)\r\n\r\nADTTE2 <- ADTTE\r\n# Define UI for app that draws a bar chart in ggplot ----\r\n\r\n# Use a fluid Bootstrap layout\r\nui <- fluidPage(    \r\n  \r\n  # Give the page a title\r\n  titlePanel(\"Interactive Kaplan-Meier Plot\"),\r\n\r\n  # Generate a row with a sidebar\r\n  sidebarLayout(\r\n\r\n    # Define the sidebar with inputs for each plot separately\r\n    sidebarPanel(\r\n      ## Conditional panels- only see first set of filters on first tab\r\n      conditionalPanel(condition = \"input.tabset == 'withn'\",\r\n                       strong(\"Filters for Plot:\"),\r\n                       prettyCheckboxGroup(\"Strat1\", \"Hormone receptor status:\", \r\n                                           choices=levels(ADTTE$STR01L), \r\n                                           selected = levels(ADTTE$STR01L),\r\n                                           inline = TRUE, icon = tick),\r\n                       prettyCheckboxGroup(\"Strat2\", \"Prior radiotherapy at randomisation:\",\r\n                                           choices= levels(ADTTE$STR02L),\r\n                                           selected = levels(ADTTE$STR02L),\r\n                                           inline = TRUE, icon = tick),\r\n                       prettyCheckboxGroup(\"Trt\", \"Treatment Arm:\",\r\n                                           choices= levels(ADTTE$TRT01P),\r\n                                           selected = levels(ADTTE$TRT01P),\r\n                                           inline = TRUE, icon = tick),\r\n                       sliderInput(\"ptAGE\", \"Age Range:\",\r\n                                   min = min(ADTTE$AGE), max = max(ADTTE$AGE),\r\n                                   value = c(\"min\",\"max\"))),\r\n      \r\n      ## Conditional panels- only see second set of filters on second tab\r\n      conditionalPanel(\r\n        condition = \"input.tabset == 'QuantComp'\",\r\n        strong(\"Filters for Plot A:\"),\r\n        prettyCheckboxGroup(\"Strat1a\", \"Hormone receptor status:\", \r\n                            choices=levels(ADTTE$STR01L), \r\n                            selected = levels(ADTTE$STR01L),\r\n                            inline = TRUE, icon = tick),\r\n        prettyCheckboxGroup(\"Strat2a\", \"Prior radiotherapy at randomisation:\",\r\n                            choices= levels(ADTTE$STR02L),\r\n                            selected = levels(ADTTE$STR02L),\r\n                            inline = TRUE, icon = tick),\r\n        prettyCheckboxGroup(\"Trta\", \"Treatment Arm:\",\r\n                            choices= levels(ADTTE$TRT01P),\r\n                            selected = levels(ADTTE$TRT01P),\r\n                            inline = TRUE, icon = tick),\r\n        sliderInput(\"ptAGEa\", \"Age Range:\",\r\n                    min = min(ADTTE$AGE), max = max(ADTTE$AGE),\r\n                    value = c(\"min\",\"max\")),\r\n        br(),\r\n        hr(),\r\n        br(),\r\n        \r\n        strong(\"Filters for Plot B:\"),\r\n        prettyCheckboxGroup(\"Strat1b\", \"Hormone receptor status:\", \r\n                            choices=levels(ADTTE$STR01L), \r\n                            selected = levels(ADTTE2$STR01L),\r\n                            inline = TRUE, icon = tick),\r\n        prettyCheckboxGroup(\"Strat2b\", \"Prior radiotherapy at randomisation:\",\r\n                            choices= levels(ADTTE$STR02L),\r\n                            selected = levels(ADTTE$STR02L),\r\n                            inline = TRUE, icon = tick),\r\n        prettyCheckboxGroup(\"Trtb\", \"Treatment Arm:\",\r\n                            choices= levels(ADTTE$TRT01P),\r\n                            selected = levels(ADTTE$TRT01P),\r\n                            inline = TRUE, icon = tick),\r\n        sliderInput(\"ptAGEb\", \"Age Range:\",\r\n                    min = min(ADTTE$AGE), max = max(ADTTE$AGE),\r\n                    value = c(\"min\",\"max\")),\r\n        \r\n      ),\r\n      \"Events are defined as death or disease progression.\"\r\n    ),\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    # Create a spot for the plot\r\n    mainPanel(\r\n      ## Creates two separate panels- one for KM plot and number of patients, one for two KM plots to allow comparisons\r\n      tabsetPanel(type = \"tabs\",\r\n                  id = \"tabset\",\r\n                  tabPanel(\"KM plot with number of patients\", plotOutput(\"PlotA\"), br(), hr(), br(), plotOutput(\"PlotB\"), value = \"withn\"),\r\n                  \r\n                  \r\n                  tabPanel(\"KM plots to compare between subgroups\", plotOutput(\"PlotC\"), br(), hr(), br(), plotOutput(\"PlotD\"), value = \"QuantComp\")\r\n                  \r\n                  \r\n      )\r\n      \r\n    )  \r\n  )\r\n  \r\n)  \r\n\r\n\r\n# Define a server for the Shiny app\r\n\r\n\r\nserver <- function(input, output) {\r\n  \r\n  # Create four separate plots based on inputs\r\n  \r\n  ## Fit model and plot KM curve for first tab\r\n  output$PlotA <- renderPlot({\r\n    \r\n    #Filter and Subset Data\r\n    \r\n    plotdata <- ADTTE %>% filter(STR01L %in% input$Strat1, STR02L %in% input$Strat2,\r\n                                 TRT01P %in% input$Trt)\r\n    plotdata2 <- subset(plotdata,\r\n                        AGE  >= input$ptAGE[1] & AGE <= input$ptAGE[2])  \r\n    \r\n\r\n    \r\n    fita <- survfit(Surv(AVAL, CNSR == 0) ~ TRT01P, data = plotdata2)\r\n    plot <-        ggsurvplot(fita,\r\n                              risk.table = TRUE,\r\n                              data = plotdata2,\r\n                              # size = 0.0001,\r\n                              censor.shape = \"\",\r\n                              palette = c(\"TRT01P=tablemab + vismab 52 weeks\" = Darkblue,\"TRT01P=tablemab x 12 week -> vismab 34 weeks\" = Green, \r\n                                          \"TRT01P=tablemab x 52 weeks\" = Blue, \"TRT01P=vismab x 52 weeks\" = Orange),\r\n                              # risk.table = 'nrisk_cumcensor',\r\n                              # tables.theme = theme_cleantable(),\r\n                              # risk.table.col = \"strata\",\r\n                              # # cumevents = TRUE,\r\n                              title = \"Interactive Kaplan-Meier plot: Explore time to event across 4 treatment arms\",\r\n                              xlab = \"Time (days)\",\r\n                              ylab = \"Event free survival\",\r\n                              legend = c(.18,.25),\r\n                              legend.title = \"Treatment Group\",\r\n                              \r\n                              # legend.labs = c(\"Control\", \"Treatment\"),\r\n                              break.x.by = 90,\r\n                              xlim = c(0, 1980),\r\n                              ggtheme = theme_classic()) \r\n    plot$plot + ggplot2::geom_vline(xintercept=365, linetype='dotted', col = \"black\") +\r\n      ggplot2::geom_vline(xintercept=1095, linetype='dashed', col = \"black\") +\r\n      ggplot2::geom_vline(xintercept=1825, linetype='solid', col = \"black\") +\r\n      ggplot2::annotate(geom = \"text\", x = 375, y = 0, label = \"Year 1\", hjust = \"left\", size = 4.5) +\r\n      ggplot2::annotate(geom = \"text\", x = 1105, y = 0, label = \"Year 3\", hjust = \"left\", size = 4.5) +\r\n      ggplot2::annotate(geom = \"text\", x = 1835, y = 0, label = \"Year 5\", hjust = \"left\", size = 4.5) \r\n    \r\n  })\r\n  \r\n  ## Filter data and pull out number of patients for n's at bottom of first tab\r\n  output$PlotB <- renderPlot({\r\n    plotdata <- ADTTE %>% filter(STR01L %in% input$Strat1, STR02L %in% input$Strat2,\r\n                                 TRT01P %in% input$Trt)\r\n    plotdata2 <- subset(plotdata,\r\n                        AGE  >= input$ptAGE[1] & AGE <= input$ptAGE[2])  \r\n    \r\n    \r\n    \r\n    fita <- survfit(Surv(AVAL, CNSR == 0) ~ TRT01P, data = plotdata2)\r\n    plot2 <-        ggsurvplot(fita,\r\n                               data = plotdata2,\r\n                               # size = 0.0001,\r\n                               censor.shape = \"\",\r\n                               palette = c(\"TRT01P=tablemab + vismab 52 weeks\" = Darkblue,\"TRT01P=tablemab x 12 week -> vismab 34 weeks\" = Green, \r\n                                           \"TRT01P=tablemab x 52 weeks\" = Blue, \"TRT01P=vismab x 52 weeks\" = Orange),\r\n                               # risk.table = 'nrisk_cumcensor',\r\n                               # tables.theme = theme_cleantable(),\r\n                               # risk.table.col = \"strata\",\r\n                               # # cumevents = TRUE,\r\n                               #title = \"Interactive Kaplan-Meier plot: Explore time to event across 4 treatment arms\",\r\n                               title = \"Interactive Kaplan-Meier plot: Explore time to event across 4 treatment arms\",\r\n                               xlab = \"Time (days)\",\r\n                               ylab = \"Event free survival\",\r\n                               legend = c(.18,.25),\r\n                               legend.title = \"Treatment Group\",\r\n                               break.x.by = 180,\r\n                               xlim = c(0, 1980),\r\n                               ggtheme = theme_classic(),\r\n                               risk.table = TRUE, \r\n                               risk.table.col = \"strata\",  \r\n                               risk.table.title=\"Patients remaining in study\"\r\n    ) \r\n    plot2$table + theme(\r\n      axis.text.y = element_blank(),\r\n      axis.ticks.y = element_blank(),\r\n      legend.position = \"none\"\r\n    )\r\n    \r\n  })  \r\n## Filter data and create KM plot for top of second tab\r\n  output$PlotC <- renderPlot({\r\n    \r\n    #Filter and Subset Data\r\n    \r\n    plotdatc <- ADTTE %>% filter(STR01L %in% input$Strat1a, STR02L %in% input$Strat2a,\r\n                                 TRT01P %in% input$Trta)\r\n    plotdata2c <- subset(plotdatc,\r\n                         AGE  >= input$ptAGEa[1] & AGE <= input$ptAGEa[2])  \r\n    \r\n    \r\n    \r\n    fitc <- survfit(Surv(AVAL, CNSR == 0) ~ TRT01P, data = plotdata2c)\r\n    plotb <-        ggsurvplot(fitc,\r\n                               risk.table = TRUE,\r\n                               data = plotdata2c,\r\n                               # size = 0.0001,\r\n                               censor.shape = \"\",\r\n                               censor = FALSE,\r\n                               palette = c(\"TRT01P=tablemab + vismab 52 weeks\" = Darkblue,\"TRT01P=tablemab x 12 week -> vismab 34 weeks\" = Green, \r\n                                           \"TRT01P=tablemab x 52 weeks\" = Blue, \"TRT01P=vismab x 52 weeks\" = Orange),\r\n                               # risk.table = 'nrisk_cumcensor',\r\n                               # tables.theme = theme_cleantable(),\r\n                               # risk.table.col = \"strata\",\r\n                               # # cumevents = TRUE,\r\n                               title = \"Plot A:\",\r\n                               xlab = \"Time (days)\",\r\n                               ylab = \"Event free survival\",\r\n                               legend = c(.18,.25),\r\n                               legend.title = \"Treatment Group\",\r\n                               \r\n                               # legend.labs = c(\"Control\", \"Treatment\"),\r\n                               break.x.by = 90,\r\n                               xlim = c(0, 1980),\r\n                               ggtheme = theme_classic()) \r\n    plotb$plot + ggplot2::geom_vline(xintercept=365, linetype='dotted', col = \"black\") +\r\n      ggplot2::geom_vline(xintercept=1095, linetype='dashed', col = \"black\") +\r\n      ggplot2::geom_vline(xintercept=1825, linetype='solid', col = \"black\") +\r\n      ggplot2::annotate(geom = \"text\", x = 375, y = 0, label = \"Year 1\", hjust = \"left\", size = 4.5) +\r\n      ggplot2::annotate(geom = \"text\", x = 1105, y = 0, label = \"Year 3\", hjust = \"left\", size = 4.5) +\r\n      ggplot2::annotate(geom = \"text\", x = 1835, y = 0, label = \"Year 5\", hjust = \"left\", size = 4.5)\r\n    \r\n  })\r\n  \r\n  \r\n## Filter data and create KM plot for bottom of second tab  \r\n  output$PlotD <- renderPlot({\r\n    \r\n    #Filter and Subset Data\r\n    \r\n    plotdatad <- ADTTE %>% filter(STR01L %in% input$Strat1b, STR02L %in% input$Strat2b,\r\n                                  TRT01P %in% input$Trtb)\r\n    plotdata2d <- subset(plotdatad,\r\n                         AGE  >= input$ptAGEb[1] & AGE <= input$ptAGEb[2])  \r\n    \r\n    \r\n    \r\n    fitd <- survfit(Surv(AVAL, CNSR == 0) ~ TRT01P, data = plotdata2d)\r\n    plotd <-        ggsurvplot(fitd,\r\n                               risk.table = TRUE,\r\n                               data = plotdata2d,\r\n                               censor = FALSE,\r\n                               # size = 0.0001,\r\n                               censor.shape = FALSE,\r\n                               palette = c(\"TRT01P=tablemab + vismab 52 weeks\" = Darkblue,\"TRT01P=tablemab x 12 week -> vismab 34 weeks\" = Green, \r\n                                           \"TRT01P=tablemab x 52 weeks\" = Blue, \"TRT01P=vismab x 52 weeks\" = Orange),\r\n                               # risk.table = 'nrisk_cumcensor',\r\n                               # tables.theme = theme_cleantable(),\r\n                               # risk.table.col = \"strata\",\r\n                               # # cumevents = TRUE,\r\n                               title = \"Plot B:\",\r\n                               xlab = \"Time (days)\",\r\n                               ylab = \"Event free survival\",\r\n                               legend = c(.18,.25),\r\n                               legend.title = \"Treatment Group\",\r\n                               # legend.labs = c(\"Control\", \"Treatment\"),\r\n                               break.x.by = 90,\r\n                               xlim = c(0, 1980),\r\n                               ggtheme = theme_classic()) \r\n    plotd$plot +  ggplot2::geom_vline(xintercept=365, linetype='dotted', col = \"black\") +\r\n      ggplot2::geom_vline(xintercept=1095, linetype='dashed', col = \"black\") +\r\n      ggplot2::geom_vline(xintercept=1825, linetype='solid', col = \"black\") +\r\n      ggplot2::annotate(geom = \"text\", x = 375, y = 0, label = \"Year 1\", hjust = \"left\", size = 4.5) +\r\n      ggplot2::annotate(geom = \"text\", x = 1105, y = 0, label = \"Year 3\", hjust = \"left\", size = 4.5) +\r\n      ggplot2::annotate(geom = \"text\", x = 1835, y = 0, label = \"Year 5\", hjust = \"left\", size = 4.5)\r\n    \r\n    \r\n    \r\n    \r\n  })\r\n}    \r\n\r\n\r\n\r\n\r\n\r\n# Create Shiny app ----\r\nshinyApp(ui = ui, server = server)\r\n\r\n\r\n\r\n\r\nInteractive Kaplan Meier\r\n\r\n- Overall, this app produces a standard Kaplan Meier curve and associated data table \r\n- The app contains two tabs:\r\n    - \"KM Plot with number of patients\"\r\n    - This tab displays a standard plot and data table. The options in the left hand bar allow for updates to the chart in real time.\r\n    - the data table is colour coded to match the legend in the chart\r\n    - Labels not presented on the Y-axis so that the chart and the table align\r\n    - \"KM Plots to compare between subgroups\"\r\n    - two plots are displayed vertically\r\n    - use options on the left hand panel to compare information between different scenarios\r\n    - future improvements include:\r\n        - Displaying N at start of treatment on the chart for the selected scenarios\r\n        - adding a \"hover\" to indicate the N remaining at each timepoint for the selected scenarios\r\n\r\nOnline file\r\nOpens as a webpage/hosted shiny app from shortcut or link- https://avpco.shinyapps.io/PSI_April_KM_v1_0\r\n\r\nR file\r\n1. Click \"run app\" (with data saved as 2020-04-08-psi-vissig-adtte_v2.csv in the same folder/working directory)\r\n\r\nVideo file\r\nVideo demonstration of the Rshiny app\r\n\r\nBack to blog\r\n\r\nExample 5 (R and readme.txt)\r\n\r\n\r\n## Heatmap for PSI Wonderful Wednesday - April\r\n\r\n## Load required packages ====\r\n\r\nlibrary(tidyverse)\r\nlibrary(plotly)\r\nlibrary(survival)\r\n\r\n## Read in data and assign colours ====\r\n\r\nOrange <- \"#EF7F04\"\r\nGreen <- \"#68B937\"\r\nBlue <- \"#00A6CB\"\r\nGrey <- \"#4E5053\"\r\nDarkblue <- \"#003569\"\r\nYellow <- \"#FFBB2D\"\r\n\r\n## Assumes data saved in same working directory\r\nADTTE <- read_csv('2020-04-08-psi-vissig-adtte_v2.csv')\r\n\r\n## change variable types as necessary\r\nADTTE$STR01L <- as.factor(ADTTE$STR01L)\r\nADTTE$STR02L <- as.factor(ADTTE$STR02L)\r\nADTTE$TRT01P <- as.factor(ADTTE$TRT01P)\r\nADTTE$DCTREAS <- as.factor(ADTTE$DCTREAS)\r\nADTTE$EVNTDESC <- as.factor(ADTTE$EVNTDESC)\r\n\r\n\r\n## Fit survival model and reformat ====\r\nfita <- survfit(Surv(AVAL, CNSR == 0) ~ TRT01P, data = ADTTE)\r\n\r\n## Pull out survival function data\r\nsurv <- as.data.frame(fita$surv)\r\n\r\n## Add treatment to survival data\r\ntreatment <- c(rep(\"TMB+VMB 52wks\", times = 433), \r\n               rep(\"TMB 12wks,VMB 34wks\", times = 454), \r\n               rep(\"TMB 52wks\", times = 427), \r\n               rep(\"VMB 52wks\", times = 445))\r\n\r\n## Combine survival function data, treatment arm and time\r\nsurv_time <- surv %>%\r\n  add_column(Days=fita$time) %>%\r\n  add_column(Treatment_Arm=treatment) %>%\r\n  rename(survival=`fita$surv`) %>%\r\n  arrange(Days)\r\n\r\n## create shell with all possible days in\r\n\r\nshell <- tibble(Days = rep(1:1944, times = 4),\r\n                Treatment_Arm = c(rep(\"TMB+VMB 52wks\", times = 1944), \r\n                                  rep(\"TMB 12wks,VMB 34wks\", times = 1944), \r\n                                  rep(\"TMB 52wks\", times = 1944), \r\n                                  rep(\"VMB 52wks\", times = 1944)))\r\n\r\n## merge on from surv time for when we have a survival value\r\n## Add 1 for first day at each (nobody's dead yet)\r\n## Copy survival function values down into empty rows to replicate KM curve horizontal line\r\n\r\nfull_surv <- shell %>% \r\n  left_join(surv_time) %>% \r\n  mutate(survival = if_else(Days == 1, 1, survival)) %>% ## add 1 for first day as all alive\r\n  group_by(Treatment_Arm) %>%  ## make sure we don't copy from one trt to the next\r\n  arrange(Days, .by_group = TRUE) %>%  ## make sure in correct analysis day order\r\n  fill(survival) %>%  ## fills in empty survival function values\r\n  ungroup()\r\n\r\ntestdf <- full_surv %>% \r\n  pivot_wider(id_cols = Days, names_from = Treatment_Arm, values_from = survival)\r\n\r\nFlag <-  case_when(\r\n  testdf$`TMB 12wks,VMB 34wks`> testdf$`TMB 52wks` & \r\n    testdf$`TMB 12wks,VMB 34wks`> testdf$`TMB+VMB 52wks` & \r\n    testdf$`TMB 12wks,VMB 34wks`> testdf$`VMB 52wks` ~ 3,\r\n  \r\n  testdf$`TMB 52wks`> testdf$`TMB 12wks,VMB 34wks` & \r\n    testdf$`TMB 52wks`> testdf$`TMB+VMB 52wks` & \r\n    testdf$`TMB 52wks`> testdf$`VMB 52wks` ~ 1,\r\n  \r\n  testdf$`TMB+VMB 52wks`> testdf$`TMB 12wks,VMB 34wks` & \r\n    testdf$`TMB+VMB 52wks`> testdf$`TMB 52wks` & \r\n    testdf$`TMB+VMB 52wks`> testdf$`VMB 52wks` ~ 4,\r\n  \r\n  testdf$`VMB 52wks`> testdf$`TMB 12wks,VMB 34wks` & \r\n    testdf$`VMB 52wks`> testdf$`TMB 52wks` & \r\n    testdf$`VMB 52wks`> testdf$`TMB+VMB 52wks` ~ 2\r\n)\r\n\r\n\r\n\r\n## Creating text labels for hover functionality ====\r\n## Add in text for labels, adding extra blank space for alignment\r\nfull_surv2 <- full_surv %>% \r\n  mutate(text1 = paste(Treatment_Arm, round(survival, digits = 4), sep = \": \")) %>% \r\n  mutate(text2 = if_else(condition = Treatment_Arm == \"TMB 12wks,VMB 34wks\", paste(Treatment_Arm, round(survival, digits = 4), sep = \":\"),\r\n                         false = if_else(condition = Treatment_Arm == \"TMB+VMB 52wks\", paste(Treatment_Arm, round(survival, digits = 4), sep = \":          \"),\r\n                                         false = if_else(Treatment_Arm == \"VMB 52wks\", paste(Treatment_Arm, round(survival, digits = 4), sep = \":                   \"),\r\n                                                         false = paste(Treatment_Arm, round(survival, digits = 4), sep = \":                   \")))))\r\n\r\n\r\n## Remove survival values (now in text2) and reformat data to wide format\r\nfull_surv3 <- full_surv2 %>% \r\n  select(-survival) %>% \r\n  pivot_wider(id_cols = Days, names_from = Treatment_Arm, values_from = text2) \r\n\r\nfull_surv3$Flag <- Flag\r\n\r\nfull_surv3 <- full_surv3 %>% \r\n  mutate(Flag = replace_na(Flag, 99))\r\n\r\n## Merge formatted labels (full_surv3) back to data with survival values (so all labels for each observation) \r\n## Combines label with /n separator to ensure each on different line\r\n## Makes the value that is hovered over bold\r\n\r\nfull_surv4 <- full_surv2 %>% \r\n  left_join(full_surv3) %>% \r\n  mutate(text2 = paste(`TMB 52wks`,`VMB 52wks`,`TMB 12wks,VMB 34wks`,  `TMB+VMB 52wks`, sep = \"\\n\")) %>% \r\n  mutate(boldtrt = paste(\"<b>\", if_else(Flag ==1, `TMB 52wks`, \r\n                                        false = if_else(Flag==2, `VMB 52wks`, \r\n                                                        false = if_else(Flag==3, `TMB 12wks,VMB 34wks`,\r\n                                                                        false = if_else(Flag==4,`TMB+VMB 52wks`,\r\n                                                                                        false = \"\")))),\"<\/b>\", sep = \"\")) %>% \r\n  mutate(text3 = if_else(Flag == 1, paste(boldtrt, `VMB 52wks`,`TMB 12wks,VMB 34wks`,  `TMB+VMB 52wks`, sep = \"\\n\"),\r\n                         false = if_else(Flag == 2, paste(`TMB 52wks`,boldtrt,`TMB 12wks,VMB 34wks`,  `TMB+VMB 52wks`, sep = \"\\n\"),\r\n                                         false = if_else(Flag == 3, paste(`TMB 52wks`,`VMB 52wks`,boldtrt,  `TMB+VMB 52wks`, sep = \"\\n\"),\r\n                                                         false = if_else(Flag == 4, paste(`TMB 52wks`, `VMB 52wks`,`TMB 12wks,VMB 34wks`,  boldtrt, sep = \"\\n\"),\r\n                                                                         false = paste(`TMB 52wks`,`VMB 52wks`,`TMB 12wks,VMB 34wks`, `TMB+VMB 52wks`, sep = \"\\n\"))))))\r\n\r\n## Reorder factors so that axis will match with label order ====\r\nfull_surv4$Treatment_Arm <- as.factor(full_surv4$Treatment_Arm)\r\n\r\nfull_surv4$Treatment_Arm <- fct_relevel(full_surv4$Treatment_Arm, \"TMB+VMB 52wks\", \"TMB 12wks,VMB 34wks\", \"VMB 52wks\",\"TMB 52wks\")\r\n\r\n## Create plot ====\r\n\r\n## Create ggplot object\r\nplot <- ggplot(data = full_surv4, aes(x = Days, y = Treatment_Arm, text = text3)) +\r\n  ggplot2::scale_fill_gradient2(\r\n    low = Darkblue,\r\n    high = Green,\r\n    mid = 'white', \r\n    midpoint = 0.5,\r\n    limits = c(0, 1),\r\n    name = \"Survival\\nFunction\") +\r\n  labs(y = \"Treatment Arm\") +\r\n  theme_minimal() +\r\n  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())\r\n\r\n## Create static heatmap and add titles\r\nplot <- plot + geom_tile(aes(fill = survival))\r\n\r\nplot <-  plot + \r\n  annotate(geom = \"text\", x = 1000, y = 5.2, label = \" \", hjust = \"centered\", vjust = \"top\", size=7) + \r\n  annotate(geom = \"text\", x = 1000, y = 5.05, label = \"Combining therapies leads to better outcomes after one year\", hjust = \"centered\", vjust = \"top\", size=7) +\r\n  annotate(geom = \"text\", x = 1000, y = 4.6, label = \"...but simultaneous treatment has a better overall median survival\", hjust = \"centered\", vjust = \"top\", size=6) +\r\n  geom_segment(x=365, xend=365, y=0.5, yend=4.5, linetype='dotted', col = \"black\") +\r\n  geom_segment(x=1095, xend=1095, y=0.5, yend=4.5, linetype='dashed', col = \"black\") +\r\n  geom_segment(x=1825, xend=1825, y=0.5, yend=4.5, linetype='solid', col = \"black\") +\r\n  annotate(geom = \"text\", x = 375, y = 0.4, label = \"Year 1\", hjust = \"left\", vjust = \"bottom\", size = 3) +\r\n  annotate(geom = \"text\", x = 1105, y = 0.4, label = \"Year 3\", hjust = \"left\", vjust = \"bottom\", size = 3) +\r\n  annotate(geom = \"text\", x = 1835, y = 0.4, label = \"Year 5\", hjust = \"left\", vjust = \"bottom\", size = 3) +\r\n  annotate(geom = \"text\", x = 1835, y = 0.3, label = \" \", hjust = \"left\", vjust = \"bottom\", size = 3) \r\n\r\n\r\n## Transform to plotly to add hover text\r\n\r\nggplotly(plot, tooltip = c(\"text3\")) %>% layout(hoverlabel = list(align = \"left\"))\r\n\r\n\r\n\r\n\r\nHeatMap-Lan Meier\r\n\r\n- The HeatMap-Lan Meier uses survival functions from a Kaplan Mier curve to show the transition in the proportion of events. \r\n- The benefit of the KM information in this format is that it \"separates\" the curves while supplying the same information. Overlaps which obsure data are now not an issue\r\n- The \"proportion\" with events is not as intuitive using a colour coded heat map. As such we have included a hover function. \r\n    - Placing the mouse over any element of the chart will show the survival function for all treatment arms.\r\n    - The treatment arm and associated survival function in _BOLD_ represent the most favourable condition at the selected timepoint.  \r\n\r\nHTML File\r\nOpens heat map as a webpage\r\n\r\nR file\r\n1. Save dataset (as 2020-04-08-psi-vissig-adtte_v2.csv) in same folder/working directory as code\r\n\r\n2. Install associated packages\r\n\r\n3. Run the R code\r\n\r\nBack to blog\r\n\r\nExample 5 (R)\r\n\r\n\r\nlibrary(tidyverse)    \r\nlibrary(broom)\r\nlibrary(survival)\r\nlibrary(here)\r\n\r\n# load data\r\nADTTE <- read_csv(here(\"data\", '2020-04-08-psi-vissig-adtte.csv'))\r\n\r\n\r\n# Set up meta data for the report\r\n#-------------------------------------------------\r\ntitle <- \"Evidence of improved progression-free survival for combo over monotherapy\"\r\nsubtitle <- \"Kaplan-Meier estimates over time including 95% uncertainty interval\"\r\nsource <- \"*The number of patients at risk (and events) are displayed the time point reference.\r\nData source: https://github.com/VIS-SIG/Wonderful-Wednesdays/tree/master/data/2020/2020-04-08\"\r\ny_axis <- \"Progression free survival\"\r\nx_axis <- \"Time [days]*\"\r\n\r\n\r\n############################################\r\n## Survival model for KM and risk set\r\n############################################\r\n\r\nfit <- survfit(Surv(AVAL, CNSR == 0) ~ TRT01P, data = ADTTE, conf.type = 'log-log' ) \r\nsumfit <- summary(fit, times = c(0, 250, 500, 750, 1000, 1250, 1500, 1750, 2000)) \r\n\r\n\r\n# tidy KM curve by treatment for plotting\r\n#-------------------------------------------\r\nkm <-\r\n  survfit(Surv(AVAL, CNSR == 0) ~ TRT01P,\r\n          data = ADTTE,\r\n          conf.type = 'log-log')  %>%\r\n  broom::tidy(fit) %>%\r\n  dplyr::mutate(group = stringr::str_remove(strata, \"TRT01P=\")) %>%\r\n  dplyr::mutate(group = factor(\r\n    group,\r\n    levels = c(\r\n      \"tablemab + vismab 52 weeks\",\r\n      \"tablemab x 12 week -> vismab 34 weeks\",\r\n      \"vismab x 52 weeks\",\r\n      \"tablemab x 52 weeks\"\r\n    )\r\n  ))\r\n\r\n# tidy KM curve by treatment for small multiples\r\n# this is a second data set to pass in for plotting\r\n# ghost lines of each treatment \r\n#-------------------------------------------\r\nkm_sm <- km %>%\r\n  mutate(group2 = group)\r\n\r\n\r\n# Calculate risk set for annotations\r\n#------------------------------------------\r\nrisk_data <-\r\n  tibble(\r\n    time =  sumfit$time,\r\n    group = sumfit$strata,\r\n    n.risk =   sumfit$n.risk,\r\n    n.events = sumfit$n.event\r\n  ) %>%\r\n  dplyr::mutate(\r\n    group = stringr::str_remove(group, \"TRT01P=\"),\r\n    label = paste0(n.risk, \" (\", n.events, \")\"),\r\n    y_pos = 0.01\r\n  )\r\n\r\n\r\n############################################\r\n## Create the plot\r\n############################################\r\n\r\nplot <-\r\n  km %>% ggplot(aes(x = time, y = estimate, group = group)) +\r\n  ## draw the ghost lines of each treatment by facet. Force the group facet to null\r\n  geom_step(\r\n    data = transform(td2, group = NULL),\r\n    aes(time, estimate, group = group2),\r\n    size = 0.75,\r\n    color = \"#000000\",\r\n    alpha = 0.15\r\n  ) +\r\n  \r\n  ## draw km lines\r\n  geom_ribbon(aes(ymin = conf.low, ymax = conf.high), alpha = 0.1, fill = \"red\") +\r\n  geom_step(color = \"red\") +\r\n  \r\n  ## draw risk set\r\n  geom_text(data = risk_data, mapping = aes(x = time, y = y_pos, label = label, group = group, fill = NULL), size = 2.5) +\r\n  \r\n  ## asthetics of the plot\r\n  scale_x_continuous(breaks = c(0, 250, 500, 750, 1000, 1250, 1500, 1750, 2000)) +\r\n  scale_y_continuous(breaks = c(0, 0.25, 0.50, 0.75, 1), limits = c(0, 1)) +\r\n\r\n  ## annotations\r\n  labs(title = title,\r\n       subtitle = subtitle,\r\n       caption = source) +\r\n  xlab(x_axis) +\r\n  ylab(y_axis) +\r\n  \r\n  # set up basic theme \r\n  theme_minimal(base_size = 12) +\r\n  theme(\r\n    panel.grid.minor = element_blank(),\r\n    axis.title.y = element_blank(),\r\n    legend.position = \"none\"\r\n  ) +\r\n  \r\n  # Set the entire chart region to a light gray color\r\n  theme(panel.background = element_rect(fill = color_background, color = color_background)) +\r\n  theme(plot.background = element_rect(fill = color_background, color = color_background)) +\r\n  theme(panel.border = element_rect(color = \"grey\", fill = NA, size = 0.35)) +\r\n  facet_wrap(~ group, scales = 'free', ncol = 2) \r\n\r\n# Save plot to file\r\n#-----------------------------------------\r\nggsave(\r\n  file = here(\"figs\", \"ww-km-plot.png\"),\r\n  width = 35, height = 20, units = \"cm\")\r\n\r\n\r\n\r\nBack to blog\r\n\r\n\r\n\r\n",
    "preview": "posts/2020-09-10-wonderful-wednesday-april-2020/plots/plot01.png",
    "last_modified": "2025-08-22T14:49:25+02:00",
    "input_file": {},
    "preview_width": 5790,
    "preview_height": 2700
  },
  {
    "path": "posts/2020-10-27-wonderful-wednesdays-march-2020/",
    "title": "Wonderful Wednesdays March 2020",
    "description": "The VIS SIG is happy to introduce a new initiative called “Wonderful Wednesdays”. This initiative will provide the participants to not only learn theoretically about visualisation principles but also apply them to relevant examples from the field of healthcare and the development of new therapies. This webinar kicks off the webinar series by giving an introduction into principles of visualization and an overview of the process. The first dataset is also introduced.",
    "author": [
      {
        "name": "Daniel Saure",
        "url": "https://www.psiweb.org/sigs-special-interest-groups/visualisation"
      }
    ],
    "date": "2020-03-11",
    "categories": [
      "Wonderful Wednesdays"
    ],
    "contents": "\r\nWelcome to the first blog entry of the Wonderful Wednesdays (WW) initiative! The aims of WW comprise to raise awareness about the opportunities in VIS and aims to increase the visualization expertise. Also, a gallery of relevant examples will be created.\r\nWhy is visualization important?\r\nWe presented a couple of (famous) examples which show the importance of visualization. For example, based on summary statistics only, you most likely cannot fully understand the data ( Anscombe’s quartet), but you need a graphical perspective as well. Also, we can see that there is a already some history of visualization: high-resolution image\r\nSee more in the webinar!\r\nLearn about principles of visualization\r\nEffective visualization is effective visual communication! The following three laws aim to improve visual communication: \r\nhigh-resolution image\r\nFirstly, have a clear purpose, i.e. ask yourself WHY you are doing the visualization, look WHAT is the quantitative evidence to support the purpose, identify WHO is the audience, and WHERE the visualization will be shown. The second law is to show the data clearly: Determine the best type of plot to support your aim and show the right scale of your data Lastly, make the message obvious (e.g. use informative labels or use color only if it adds value). A good overview of principles of effective communication can be found here\r\nHow you can participate in Wonderful Wednesdays\r\nThe WW (wonderful Wednesdays) is a learning community which aims to improve data visualizations. The participation is free for everybody and the process is as follows: \r\nhigh-resolution image\r\nThe data can be accessed and downloaded here. You can then submit your proposal (visualization + code) via this google form # Data example The first data set is based on a clinical trial for the treatment of Psoriasis in aduts. The primary outcomes is measured in terms of PASI improvement relative to baseline, i.e. we are interested in at least 75% (PASI75), at least 90% (PASI90), and 100% (PASI100) reduction compared to baseline. A more detailed description and link to the data can be found here.\r\n\r\n\r\n",
    "preview": "posts/2020-10-27-wonderful-wednesdays-march-2020/./images/ww1.gif",
    "last_modified": "2025-08-22T14:49:25+02:00",
    "input_file": {}
  },
  {
    "path": "posts/2020-09-09-wonderful-wednesdays-overview/",
    "title": "Wonderful Wednesdays Overview",
    "description": "This provides a short overview of our Wonderful Wednesdays Webinars.",
    "author": [
      {
        "name": "VIS SIG",
        "url": "https://www.psiweb.org/sigs-special-interest-groups/visualisation"
      }
    ],
    "date": "2020-03-04",
    "categories": [
      "Wonderful Wednesdays",
      "Overview"
    ],
    "contents": "\r\nLearn and Apply Key Principles of Data Visualisations\r\nThe data visualization special interest group (VIS SIG) was recently founded under the umbrella of EFSPI and PSI. Learn more about the VIS SIG.\r\nThe SIG is happy to introduce a new initiative called “Wonderful Wednesdays”. This initiative will provide the participants to not only learn theoretically about visualisation principles but also apply them to relevant examples from the field of healthcare and the development of new therapies.\r\nInspired by ‘Makeover Monday’ and ‘Tidy Tuesday’, we will present on a monthly basis a data set reflecting the properties of a usual data set from a clinical trial or some other relevant study. This data set will come along with a description of the objectives for the data visualisation and relevant background information.\r\nNow the audience can share how they would visually communicate the objectives of the data set and submit the visualisation (along with the code) to receive feedback from the SIG members. Both, the presentation of the dataset and the visualisation as well as the feedback will be given in webinars. These 60 minutes webinars will occur every 2nd Wednesday of the month at 5pm CET.\r\nIn the first webinar you will learn about visualization principles by visualization experts being active in the SIG. In addition, we will discuss the first visualization to improve on.\r\nPlease find below the timelines for the next cycle: * Webinar to present the case study: July 8th * Timeline to submit improved visualizations: August 5th * Webinar to provide feedback on the submitted visualizations: August 12th\r\nYou will be able to submit your improvements for feedback via a Google Form on the homepage of the SIG after the webinar. These submissions need to include code (which is well documented and executable) as well as the file of the visualization itself.\r\nData Submission\r\nThe data can be accessed and downloaded via this link: https://github.com/VIS-SIG/Wonderful-Wednesdays. Please submit your material via this Google Form.\r\nWe will make the submissions available to the community together with highlights of the strength and limitations. Over time, this will lead to a gallery of visualizations for others to learn from.\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2025-08-22T14:49:24+02:00",
    "input_file": {}
  }
]
